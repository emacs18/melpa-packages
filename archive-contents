(1
 (a .
    [(20180907 953)
     ((emacs
       (25)))
     "Associative data structure functions" single
     ((:commit . "18966975db7110d0aac726be95b593e2fc3d44ed")
      (:authors
       ("Arne Brasseur" . "arne@arnebrasseur.net"))
      (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net")
      (:keywords "lisp")
      (:url . "https://github.com/plexus/a.el"))])
 (ac-ispell .
	    [(20151101 226)
	     ((auto-complete
	       (1 4))
	      (cl-lib
	       (0 5)))
	     "ispell completion source for auto-complete" single
	     ((:commit . "22bace7387e9012002a6a444922f75f9913077b0")
	      (:authors
	       ("Syohei YOSHIDA" . "syohex@gmail.com"))
	      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	      (:url . "https://github.com/syohex/emacs-ac-ispell"))])
 (ace-jump-helm-line .
		     [(20160918 1836)
		      ((avy
			(0 4 0))
		       (helm
			(1 6 3)))
		      "Ace-jump to a candidate in helm window" single
		      ((:commit . "1483055255df3f8ae349f7520f05b1e43ea3ed37")
		       (:authors
			("Junpeng Qiu" . "qjpchmail@gmail.com"))
		       (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com")
		       (:keywords "extensions")
		       (:url . "https://github.com/cute-jumper/ace-jump-helm-line"))])
 (ace-jump-mode .
		[(20140616 815)
		 nil "a quick cursor location minor mode for emacs" single
		 ((:commit . "8351e2df4fbbeb2a4003f2fb39f46d33803f3dac")
		  (:authors
		   ("winterTTr" . "winterTTr@gmail.com"))
		  (:maintainer "winterTTr" . "winterTTr@gmail.com")
		  (:keywords "motion" "location" "cursor")
		  (:url . "https://github.com/winterTTr/ace-jump-mode/"))])
 (ace-link .
	   [(20200518 957)
	    ((avy
	      (0 4 0)))
	    "Quickly follow links" single
	    ((:commit . "298f02f7dd117f9ec01f6aa2a2ddfecae0efb7f4")
	     (:authors
	      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	     (:keywords "convenience" "links" "avy")
	     (:url . "https://github.com/abo-abo/ace-link"))])
 (ace-window .
	     [(20200606 1259)
	      ((avy
		(0 5 0)))
	      "Quickly switch windows." single
	      ((:commit . "c7cb315c14e36fded5ac4096e158497ae974bec9")
	       (:authors
		("Oleh Krehel" . "ohwoeowho@gmail.com"))
	       (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	       (:keywords "window" "location")
	       (:url . "https://github.com/abo-abo/ace-window"))])
 (ag .
     [(20201031 2202)
      ((dash
	(2 8 0))
       (s
	(1 9 0))
       (cl-lib
	(0 5)))
      "A front-end for ag ('the silver searcher'), the C ack replacement." single
      ((:commit . "ed7e32064f92f1315cecbfc43f120bbc7508672c")
       (:authors
	("Wilfred Hughes" . "me@wilfred.me.uk"))
       (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk")
       (:url . "https://github.com/Wilfred/ag.el"))])
 (aggressive-indent .
		    [(20200824 2352)
		     ((emacs
		       (24 3)))
		     "Minor mode to aggressively keep your code always indented" single
		     ((:commit . "b0ec0047aaae071ad1647159613166a253410a63")
		      (:authors
		       ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		      (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		      (:keywords "indent" "lisp" "maint" "tools")
		      (:url . "https://github.com/Malabarba/aggressive-indent-mode"))])
 (alchemist .
	    [(20180312 1304)
	     ((elixir-mode
	       (2 2 5))
	      (dash
	       (2 11 0))
	      (emacs
	       (24 4))
	      (company
	       (0 8 0))
	      (pkg-info
	       (0 4))
	      (s
	       (1 11 0)))
	     "Elixir tooling integration into Emacs" tar
	     ((:commit . "6f99367511ae209f8fe2c990779764bbb4ccb6ed")
	      (:authors
	       ("Samuel Tonini" . "tonini.samuel@gmail.com"))
	      (:maintainer "Samuel Tonini" . "tonini.samuel@gmail.com")
	      (:keywords "languages" "elixir" "elixirc" "mix" "hex" "alchemist")
	      (:url . "http://www.github.com/tonini/alchemist.el"))])
 (alert .
	[(20200303 2118)
	 ((gntp
	   (0 1))
	  (log4e
	   (0 3 0))
	  (cl-lib
	   (0 5)))
	 "Growl-style notification system for Emacs" single
	 ((:commit . "7046393272686c7a1a9b3e7f7b1d825d2e5250a6")
	  (:authors
	   ("John Wiegley" . "jwiegley@gmail.com"))
	  (:maintainer "John Wiegley" . "jwiegley@gmail.com")
	  (:keywords "notification" "emacs" "message")
	  (:url . "https://github.com/jwiegley/alert"))])
 (all-the-icons .
		[(20200923 1339)
		 ((emacs
		   (24 3))
		  (memoize
		   (1 0 1)))
		 "A library for inserting Developer icons" tar
		 ((:commit . "6917b08f64dd8487e23769433d6cb9ba11f4152f")
		  (:authors
		   ("Dominic Charlesworth" . "dgc336@gmail.com"))
		  (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com")
		  (:keywords "convenient" "lisp")
		  (:url . "https://github.com/domtronn/all-the-icons.el"))])
 (anaconda-mode .
		[(20200912 239)
		 ((emacs
		   (25 1))
		  (pythonic
		   (0 1 0))
		  (dash
		   (2 6 0))
		  (s
		   (1 9))
		  (f
		   (0 16 2)))
		 "Code navigation, documentation lookup and completion for Python" single
		 ((:commit . "39b1cf88c8c459901630d248d6135d8644075648")
		  (:authors
		   ("Artem Malyshev" . "proofit404@gmail.com"))
		  (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
		  (:url . "https://github.com/proofit404/anaconda-mode"))])
 (ansi .
       [(20200611 944)
	((emacs
	  (24 1))
	 (cl-lib
	  (0 6))
	 (s
	  (1 6 1))
	 (dash
	  (1 5 0)))
	"Turn string into ansi strings" single
	((:commit . "a41d5cc719297515d85bb5256980cd1204a71b88")
	 (:authors
	  ("Johan Andersson" . "johan.rejeep@gmail.com"))
	 (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
	 (:keywords "terminals" "color" "ansi")
	 (:url . "http://github.com/rejeep/ansi"))])
 (anzu .
       [(20201031 1836)
	((emacs
	  (25 1)))
	"Show number of matches in mode-line while searching" single
	((:commit . "b3d15fba5590286209424b8c2d6765265076f034")
	 (:authors
	  ("Syohei YOSHIDA" . "syohex@gmail.com"))
	 (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com")
	 (:url . "https://github.com/emacsorphanage/anzu"))])
 (async .
	[(20200809 501)
	 ((emacs
	   (24 3)))
	 "Asynchronous processing in Emacs" tar
	 ((:commit . "14f48de586b0977e3470f053b810d77b07ea427a")
	  (:keywords "async")
	  (:url . "https://github.com/jwiegley/emacs-async"))])
 (auth-source-pass .
		   [(20201012 1918)
		    ((emacs
		      (27 1)))
		    "Integrate auth-source with password-store" single
		    ((:commit . "6e7f5465f2e76dcafb5dd6c2a9b790a151ba0f46")
		     (:authors
		      ("Damien Cassou" . "damien@cassou.me")
		      ("Nicolas Petton" . "nicolas@petton.fr")
		      ("Keith Amidon" . "camalot@picnicpark.org"))
		     (:maintainer "Damien Cassou" . "damien@cassou.me")
		     (:url . "https://github.com/DamienCassou/auth-password-store"))])
 (auto-compile .
	       [(20201028 1106)
		((emacs
		  (25 1))
		 (packed
		  (3 0 1)))
		"automatically compile Emacs Lisp libraries" single
		((:commit . "105997d4436bcf96322a4bc91686cfcfef0e455c")
		 (:authors
		  ("Jonas Bernoulli" . "jonas@bernoul.li"))
		 (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		 (:keywords "compile" "convenience" "lisp")
		 (:url . "https://github.com/emacscollective/auto-compile"))])
 (auto-complete .
		[(20201011 1341)
		 ((popup
		   (0 5 0))
		  (cl-lib
		   (0 5)))
		 "Auto Completion for GNU Emacs" tar
		 ((:commit . "51a2ea092d280ec4956dc4a104467f8b83b5e0de"))])
 (auto-dictionary .
		  [(20150410 1610)
		   nil "automatic dictionary switcher for flyspell" single
		   ((:commit . "b364e08009fe0062cf0927d8a0582fad5a12b8e7")
		    (:authors
		     ("Nikolaj Schumacher <bugs * nschum de>"))
		    (:maintainer "Nikolaj Schumacher <bugs * nschum de>")
		    (:keywords "wp")
		    (:url . "http://nschum.de/src/emacs/auto-dictionary/"))])
 (auto-highlight-symbol .
			[(20201018 1340)
			 nil "Automatic highlighting current symbol minor mode" single
			 ((:commit . "0982390f19fee3c05856b9e4e40056dce4c4020d")
			  (:authors
			   ("Mitsuo Saito" . "arch320@NOSPAM.gmail.com"))
			  (:maintainer "Shen, Jen-Chieh" . "jcs090218@gmail.com")
			  (:keywords "highlight" "face" "match" "convenience")
			  (:url . "http://github.com/jcs-elpa/auto-highlight-symbol"))])
 (auto-yasnippet .
		 [(20191015 942)
		  ((yasnippet
		    (0 13 0)))
		  "Quickly create disposable yasnippets" single
		  ((:commit . "db9e0dd4335b2202cd5dac95bbbc87a1032d9bbe")
		   (:authors
		    ("Oleh Krehel" . "ohwoeowho@gmail.com"))
		   (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
		   (:url . "https://github.com/abo-abo/auto-yasnippet"))])
 (avy .
      [(20200624 1148)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "Jump to arbitrary positions in visible text and select text quickly." single
       ((:commit . "bbf1e7339eba06784dfe86643bb0fbddf5bb0342")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:keywords "point" "location")
	(:url . "https://github.com/abo-abo/avy"))])
 (bash-completion .
		  [(20201011 916)
		   ((emacs
		     (24 3)))
		   "BASH completion for the shell buffer" single
		   ((:commit . "65e54c6f9c0ffebf94f7c505694bd249b9b53d32")
		    (:authors
		     ("Stephane Zermatten" . "szermatt@gmx.net"))
		    (:maintainer "Stephane Zermatten" . "szermatt@gmail.com")
		    (:keywords "shell" "bash" "bash-completion")
		    (:url . "http://github.com/szermatt/emacs-bash-completion"))])
 (bbdb .
       [(20200928 1749)
	nil "The Insidious Big Brother Database for GNU Emacs" tar
	((:commit . "d25c29822aff60ab44eb7b5e68e28bc7c2d5d9a9"))])
 (beacon .
	 [(20190104 1931)
	  ((seq
	    (2 14)))
	  "Highlight the cursor whenever the window scrolls" single
	  ((:commit . "bde78180c678b233c94321394f46a81dc6dce1da")
	   (:authors
	    ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	   (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	   (:keywords "convenience")
	   (:url . "https://github.com/Malabarba/beacon"))])
 (bind-key .
	   [(20200805 1727)
	    nil "A simple way to manage personal keybindings" single
	    ((:commit . "4fb1f9a68f1e7e7d614652afc017a6652fd029f1")
	     (:authors
	      ("John Wiegley" . "johnw@newartisans.com"))
	     (:maintainer "John Wiegley" . "johnw@newartisans.com")
	     (:keywords "keys" "keybinding" "config" "dotemacs")
	     (:url . "https://github.com/jwiegley/use-package"))])
 (bind-map .
	   [(20161207 1511)
	    ((emacs
	      (24 3)))
	    "Bind personal keymaps in multiple locations" single
	    ((:commit . "bf4181e3a41463684adfffc6c5c305b30480e30f")
	     (:authors
	      ("Justin Burkett" . "justin@burkett.cc"))
	     (:maintainer "Justin Burkett" . "justin@burkett.cc")
	     (:url . "https://github.com/justbur/emacs-bind-map"))])
 (blacken .
	  [(20200626 2018)
	   ((emacs
	     (25 2)))
	   "Reformat python buffers using the \"black\" formatter" single
	   ((:commit . "784da60033fe3743336d1da0f33239f1bf514266")
	    (:authors
	     ("Artem Malyshev" . "proofit404@gmail.com"))
	    (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	    (:url . "https://github.com/proofit404/blacken"))])
 (browse-at-remote .
		   [(20200820 654)
		    ((f
		      (0 17 2))
		     (s
		      (1 9 0))
		     (cl-lib
		      (0 5)))
		    "Open github/gitlab/bitbucket/stash/gist/phab/sourcehut page from Emacs" single
		    ((:commit . "fadf99d6d8e891f3b112e36c772e0eea0b9bc7f2")
		     (:authors
		      ("Rustem Muslimov" . "r.muslimov@gmail.com"))
		     (:maintainer "Rustem Muslimov" . "r.muslimov@gmail.com")
		     (:keywords "github" "gitlab" "bitbucket" "gist" "stash" "phabricator" "sourcehut" "pagure"))])
 (bui .
      [(20200426 2219)
       ((emacs
	 (24 3))
	(dash
	 (2 11 0)))
       "Buffer interface library" tar
       ((:commit . "28a9b0a36cb69b931cf32db7546ad5c6589752cf")
	(:authors
	 ("Alex Kost" . "alezost@gmail.com"))
	(:maintainer "Alex Kost" . "alezost@gmail.com")
	(:keywords "tools")
	(:url . "https://github.com/alezost/bui.el"))])
 (cask .
       [(20200822 1015)
	((s
	  (1 8 0))
	 (dash
	  (2 2 0))
	 (f
	  (0 16 0))
	 (epl
	  (0 5))
	 (shut-up
	  (0 1 0))
	 (cl-lib
	  (0 3))
	 (package-build
	  (1 2))
	 (ansi
	  (0 4 1)))
	"Cask: Project management for Emacs package development" tar
	((:commit . "13944cef1c4fbe2e1bae2aaacacd0b338f3ead88")
	 (:authors
	  ("Johan Andersson" . "johan.rejeep@gmail.com"))
	 (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
	 (:keywords "speed" "convenience")
	 (:url . "http://github.com/cask/cask"))])
 (ccls .
       [(20200820 308)
	((emacs
	  (25 1))
	 (lsp-mode
	  (6 3 1))
	 (dash
	  (2 14 1)))
	"ccls client for lsp-mode" tar
	((:commit . "675a5704c14a27931e835a431beea3631d92e8e6")
	 (:authors
	  ("Tobias Pisani, Fangrui Song"))
	 (:maintainer "Tobias Pisani, Fangrui Song")
	 (:keywords "languages" "lsp" "c++")
	 (:url . "https://github.com/MaskRay/emacs-ccls"))])
 (centered-cursor-mode .
		       [(20200507 1529)
			nil "cursor stays vertically centered" single
			((:commit . "4093821cc9759ca5a3c6e527d4cc915fc3a5ad74")
			 (:authors
			  ("André Riemann" . "andre.riemann@web.de"))
			 (:maintainer "André Riemann" . "andre.riemann@web.de")
			 (:keywords "convenience")
			 (:url . "https://github.com/andre-r/centered-cursor-mode.el"))])
 (cider .
	[(20201102 1930)
	 ((emacs
	   (25))
	  (clojure-mode
	   (5 12))
	  (parseedn
	   (0 2))
	  (pkg-info
	   (0 4))
	  (queue
	   (0 2))
	  (spinner
	   (1 7))
	  (seq
	   (2 16))
	  (sesman
	   (0 3 2)))
	 "Clojure Interactive Development Environment that Rocks" tar
	 ((:commit . "a99172d6eebfe330a04a67cd40cb3602dd8d87b0")
	  (:authors
	   ("Tim King" . "kingtim@gmail.com")
	   ("Phil Hagelberg" . "technomancy@gmail.com")
	   ("Bozhidar Batsov" . "bozhidar@batsov.com")
	   ("Artur Malabarba" . "bruce.connor.am@gmail.com")
	   ("Hugo Duncan" . "hugo@hugoduncan.org")
	   ("Steve Purcell" . "steve@sanityinc.com"))
	  (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com")
	  (:keywords "languages" "clojure" "cider")
	  (:url . "http://www.github.com/clojure-emacs/cider"))])
 (cider-eval-sexp-fu .
		     [(20190311 2152)
		      ((emacs
			(24))
		       (eval-sexp-fu
			(0 5 0)))
		      "Briefly highlights an evaluated sexp." single
		      ((:commit . "7fd229f1441356866aedba611fd0cf4e89b50921")
		       (:authors
			("Sylvain Benner" . "sylvain.benner@gmail.com"))
		       (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		       (:keywords "languages" "clojure" "cider"))])
 (clang-format .
	       [(20191106 950)
		((cl-lib
		  (0 3)))
		"Format code using clang-format" single
		((:commit . "e48ff8ae18dc7ab6118c1f6752deb48cb1fc83ac")
		 (:keywords "tools" "c"))])
 (clang-format+ .
		[(20190824 2216)
		 ((emacs
		   (25 1))
		  (clang-format
		   (20180406 1514)))
		 "Minor mode for automatic clang-format application" single
		 ((:commit . "ddd4bfe1a13c2fd494ce339a320a51124c1d2f68")
		  (:keywords "c" "c++" "clang-format")
		  (:url . "https://github.com/SavchenkoValeriy/emacs-clang-format-plus"))])
 (clean-aindent-mode .
		     [(20171017 2043)
		      nil "Simple indent and unindent, trims indent white-space" single
		      ((:commit . "a97bcae8f43a9ff64e95473e4ef0d8bafe829211")
		       (:authors
			("peter marinov" . "efravia@gmail.com"))
		       (:maintainer "peter marinov" . "efravia@gmail.com")
		       (:keywords "indentation" "whitespace" "backspace")
		       (:url . "https://github.com/pmarinov/clean-aindent-mode"))])
 (clj-refactor .
	       [(20200831 1244)
		((emacs
		  (25 1))
		 (seq
		  (2 19))
		 (yasnippet
		  (0 6 1))
		 (paredit
		  (24))
		 (multiple-cursors
		  (1 2 2))
		 (clojure-mode
		  (5 9))
		 (cider
		  (0 24 0))
		 (parseedn
		  (0 1))
		 (inflections
		  (2 3))
		 (hydra
		  (0 13 2)))
		"A collection of commands for refactoring Clojure code" tar
		((:commit . "6db85b37b57497b56d97d5e5512160e5db85f798")
		 (:authors
		  ("Magnar Sveen" . "magnars@gmail.com")
		  ("Lars Andersen" . "expez@expez.com")
		  ("Benedek Fazekas" . "benedek.fazekas@gmail.com")
		  ("Bozhidar Batsov" . "bozhidar@batsov.com"))
		 (:maintainer "Magnar Sveen" . "magnars@gmail.com")
		 (:keywords "convenience" "clojure" "cider"))])
 (clojure-mode .
	       [(20201001 1449)
		((emacs
		  (25 1)))
		"Major mode for Clojure code" single
		((:commit . "75c28897c7e91aa130c71c076aa2a6ce2e02da8f")
		 (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com")
		 (:keywords "languages" "clojure" "clojurescript" "lisp")
		 (:url . "http://github.com/clojure-emacs/clojure-mode"))])
 (clojure-snippets .
		   [(20180314 1308)
		    ((yasnippet
		      (0 10 0)))
		    "Yasnippets for clojure" tar
		    ((:commit . "6068dca90467a0f4ebc2cd39338a173d6f5ddc04"))])
 (closql .
	 [(20200704 2124)
	  ((emacs
	    (25 1))
	   (emacsql-sqlite
	    (3 0 0)))
	  "store EIEIO objects using EmacSQL" single
	  ((:commit . "c864c1fadfea4a05fff29cb60891b7a32ac88c78")
	   (:authors
	    ("Jonas Bernoulli" . "jonas@bernoul.li"))
	   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	   (:keywords "extensions")
	   (:url . "https://github.com/emacscollective/closql"))])
 (column-enforce-mode .
		      [(20200605 1933)
		       nil "Highlight text that extends beyond a  column" single
		       ((:commit . "14a7622f2268890e33536ccd29510024d51ee96f")
			(:authors
			 ("Jordon Biondo"))
			(:maintainer "Jordon Biondo")
			(:url . "www.github.com/jordonbiondo/column-enforce-mode"))])
 (command-log-mode .
		   [(20151208 752)
		    nil "log keyboard commands to buffer" single
		    ((:commit . "71fb6031721716f48c0cfa333a44d7adbe2fab96")
		     (:authors
		      ("Michael Weber" . "michaelw@foldr.org"))
		     (:maintainer "Michael Weber" . "michaelw@foldr.org")
		     (:keywords "help")
		     (:url . "https://github.com/lewang/command-log-mode"))])
 (company .
	  [(20201028 136)
	   ((emacs
	     (24 3)))
	   "Modular text completion framework" tar
	   ((:commit . "dd925936f7c0bf00319c81e8caea1b3db63bb8b5")
	    (:authors
	     ("Nikolaj Schumacher"))
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:keywords "abbrev" "convenience" "matching")
	    (:url . "http://company-mode.github.io/"))])
 (company-anaconda .
		   [(20200404 1859)
		    ((company
		      (0 8 0))
		     (anaconda-mode
		      (0 1 1))
		     (cl-lib
		      (0 5 0))
		     (dash
		      (2 6 0))
		     (s
		      (1 9)))
		    "Anaconda backend for company-mode" single
		    ((:commit . "da1566db41a68809ef7f91ebf2de28118067c89b")
		     (:authors
		      ("Artem Malyshev" . "proofit404@gmail.com"))
		     (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
		     (:url . "https://github.com/proofit404/anaconda-mode"))])
 (company-auctex .
		 [(20200529 1835)
		  ((yasnippet
		    (0 8 0))
		   (company
		    (0 8 0))
		   (auctex
		    (11 87)))
		  "Company-mode auto-completion for AUCTeX" single
		  ((:commit . "9400a2ec7459dde8cbf1a5d50dfee4e300ed7e18")
		   (:authors
		    ("Christopher Monsanto <chris@monsan.to>, Alexey Romanov" . "alexey.v.romanov@gmail.com"))
		   (:maintainer "Christopher Monsanto <chris@monsan.to>, Alexey Romanov" . "alexey.v.romanov@gmail.com")
		   (:url . "https://github.com/alexeyr/company-auctex/"))])
 (company-c-headers .
		    [(20190825 1631)
		     ((emacs
		       (24 1))
		      (company
		       (0 8)))
		     "Company mode backend for C/C++ header files" single
		     ((:commit . "5e676ab0c2f287c868b1e3931afd4c78895910cd")
		      (:authors
		       ("Alastair Rankine" . "alastair@girtby.net"))
		      (:maintainer "Alastair Rankine" . "alastair@girtby.net")
		      (:keywords "development" "company"))])
 (company-go .
	     [(20190203 19)
	      ((company
		(0 8 0))
	       (go-mode
		(1 0 0)))
	      "company-mode backend for Go (using gocode)" single
	      ((:commit . "4acdcbdea79de6b3dee1c637eca5cbea0fdbe37c")
	       (:authors
		("nsf" . "no.smile.face@gmail.com"))
	       (:maintainer "nsf" . "no.smile.face@gmail.com")
	       (:keywords "languages"))])
 (company-lsp .
	      [(20190612 1553)
	       ((emacs
		 (25 1))
		(lsp-mode
		 (6 0))
		(company
		 (0 9 0))
		(s
		 (1 2 0))
		(dash
		 (2 11 0)))
	       "Company completion backend for lsp-mode." single
	       ((:commit . "f921ffa0cdc542c21dc3dd85f2c93df4288e83bd")
		(:url . "https://github.com/tigersoldier/company-lsp"))])
 (company-org-roam .
		   [(20200711 355)
		    ((emacs
		      (26 1))
		     (company
		      (0 9 0))
		     (dash
		      (2 13))
		     (org-roam
		      (1 0 0)))
		    "Company backend for Org-roam" single
		    ((:commit . "1132663bd68022aa7ea005ff53c7c7571890769d")
		     (:authors
		      ("Jethro Kuan" . "jethrokuan95@gmail.com"))
		     (:maintainer "Jethro Kuan" . "jethrokuan95@gmail.com")
		     (:keywords "org-mode" "roam" "convenience")
		     (:url . "https://github.com/jethrokuan/company-org-roam"))])
 (company-quickhelp .
		    [(20200714 1611)
		     ((emacs
		       (24 3))
		      (company
		       (0 8 9))
		      (pos-tip
		       (0 4 6)))
		     "Popup documentation for completion candidates" single
		     ((:commit . "5a86731de461142db3b7ca26b4681756edb4b773")
		      (:authors
		       ("Lars Andersen" . "expez@expez.com"))
		      (:maintainer "Lars Andersen" . "expez@expez.com")
		      (:keywords "company" "popup" "documentation" "quickhelp")
		      (:url . "https://www.github.com/expez/company-quickhelp"))])
 (company-reftex .
		 [(20181222 906)
		  ((emacs
		    (25 1))
		   (s
		    (1 12))
		   (company
		    (0 8)))
		  "Company backend based on RefTeX." single
		  ((:commit . "275ef708f08d3bf0eb30632148e5c6184eeaacdb")
		   (:authors
		    ("Eivind Fonn" . "evfonn@gmail.com"))
		   (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
		   (:keywords "bib" "tex" "company" "latex" "reftex" "references" "labels" "citations")
		   (:url . "https://github.com/TheBB/company-reftex"))])
 (company-rtags .
		[(20191222 920)
		 ((emacs
		   (24 3))
		  (company
		   (0 8 1))
		  (rtags
		   (2 10)))
		 "RTags back-end for company" single
		 ((:commit . "63a7d9b733def9fe76568f81321a65a450829575")
		  (:authors
		   ("Jan Erik Hanssen" . "jhanssen@gmail.com")
		   ("Anders Bakken" . "agbakken@gmail.com"))
		  (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
		  (:url . "https://github.com/Andersbakken/rtags"))])
 (company-shell .
		[(20170518 541)
		 ((emacs
		   (24 4))
		  (company
		   (0 8 12))
		  (dash
		   (2 12 0))
		  (cl-lib
		   (0 5)))
		 "Company mode backend for shell functions" single
		 ((:commit . "52f3bf26b74adc30a275f5f4290a1fc72a6876ff")
		  (:authors
		   ("Alexander Miller" . "alexanderm@web.de"))
		  (:maintainer "Alexander Miller" . "alexanderm@web.de")
		  (:keywords "company" "shell" "auto-completion")
		  (:url . "https://github.com/Alexander-Miller/company-shell"))])
 (company-statistics .
		     [(20170210 1933)
		      ((emacs
			(24 3))
		       (company
			(0 8 5)))
		      "Sort candidates using completion history" single
		      ((:commit . "e62157d43b2c874d2edbd547c3bdfb05d0a7ae5c")
		       (:authors
			("Ingo Lohmar" . "i.lohmar@gmail.com"))
		       (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
		       (:keywords "abbrev" "convenience" "matching")
		       (:url . "https://github.com/company-mode/company-statistics"))])
 (company-web .
	      [(20180402 1155)
	       ((company
		 (0 8 0))
		(dash
		 (2 8 0))
		(cl-lib
		 (0 5 0))
		(web-completion-data
		 (0 1 0)))
	       "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar
	       ((:commit . "f0cc9187c9c34f72ad71f5649a69c74f996bae9a")
		(:authors
		 ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))
		(:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com")
		(:keywords "html" "company")
		(:url . "https://github.com/osv/company-web"))])
 (company-ycmd .
	       [(20180520 1053)
		((ycmd
		  (1 3))
		 (company
		  (0 9 3))
		 (deferred
		   (0 5 1))
		 (s
		  (1 11 0))
		 (dash
		  (2 13 0))
		 (let-alist
		     (1 0 5))
		 (f
		  (0 19 0)))
		"company-mode backend for ycmd" single
		((:commit . "c17ff9e0250a9b39d23af37015a2b300e2f36fed")
		 (:url . "https://github.com/abingham/emacs-ycmd"))])
 (concurrent .
	     [(20161229 330)
	      ((emacs
		(24 3))
	       (deferred
		 (0 5 0)))
	      "Concurrent utility functions for emacs lisp" single
	      ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16")
	       (:authors
		("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	       (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	       (:keywords "deferred" "async" "concurrent")
	       (:url . "https://github.com/kiwanami/emacs-deferred/blob/master/README-concurrent.markdown"))])
 (counsel .
	  [(20201101 1626)
	   ((emacs
	     (24 5))
	    (swiper
	     (0 13 0)))
	   "Various completion functions using Ivy" single
	   ((:commit . "e58bfc162a2df5b67a820d0311c313d3db522073")
	    (:authors
	     ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	    (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	    (:keywords "convenience" "matching" "tools")
	    (:url . "https://github.com/abo-abo/swiper"))])
 (counsel-css .
	      [(20200331 632)
	       ((emacs
		 (24 4))
		(counsel
		 (0 7 0))
		(cl-lib
		 (0 5)))
	       "stylesheet-selector-aware swiper" single
	       ((:commit . "6427dfcbda0d2bbd81db03f9d6b56b06c260ac02")
		(:authors
		 ("Henrik Lissner <http://github/hlissner>"))
		(:maintainer "Henrik Lissner" . "henrik@lissner.net")
		(:keywords "convenience" "tools" "counsel" "swiper" "selector" "css" "less" "scss")
		(:url . "https://github.com/hlissner/emacs-counsel-css"))])
 (counsel-dash .
	       [(20200103 1411)
		((emacs
		  (24 4))
		 (dash-docs
		  (1 4 0))
		 (counsel
		  (0 8 0))
		 (cl-lib
		  (0 5)))
		"Browse dash docsets using Ivy" single
		((:commit . "370d5f6f14b5294d0eb717f7b2a6a8e93df1ed24")
		 (:authors
		  ("Nathan Kot" . "nk@nathankot.com"))
		 (:maintainer "Nathan Kot" . "nk@nathankot.com")
		 (:keywords "dash" "ivy" "counsel")
		 (:url . "https://github.com/nathankot/counsel-dash"))])
 (counsel-projectile .
		     [(20201015 1109)
		      ((counsel
			(0 13 0))
		       (projectile
			(2 0 0)))
		      "Ivy integration for Projectile" single
		      ((:commit . "06b03c1080d3ccc3fa9b9c41b1ccbcf13f058e4b")
		       (:authors
			("Eric Danan"))
		       (:maintainer "Eric Danan")
		       (:keywords "project" "convenience")
		       (:url . "https://github.com/ericdanan/counsel-projectile"))])
 (cpp-auto-include .
		   [(20191221 2319)
		    ((cl-lib
		      (0 5)))
		    "Insert and delete C++ header files automatically" single
		    ((:commit . "08208ca7b9dc4ac940ce9ca1f79424d2f3d3d391")
		     (:authors
		      ("Syohei YOSHIDA" . "syohex@gmail.com"))
		     (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		     (:url . "https://github.com/emacsorphanage/cpp-auto-include"))])
 (cquery .
	 [(20190118 542)
	  ((emacs
	    (25 1))
	   (lsp-mode
	    (3 4))
	   (dash
	    (0 13)))
	  "cquery client for lsp-mode" tar
	  ((:commit . "555e50984ebda177421fdcdc8c76cb29235d9694")
	   (:authors
	    ("Tobias Pisani"))
	   (:maintainer "Tobias Pisani")
	   (:keywords "languages" "lsp" "c++")
	   (:url . "https://github.com/jacobdufault/cquery"))])
 (ctable .
	 [(20171006 11)
	  nil "Table component for Emacs Lisp" single
	  ((:commit . "b8830d1ca95abb100a81bc32011bd17d5ecba000")
	   (:authors
	    ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	   (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	   (:keywords "table")
	   (:url . "https://github.com/kiwanami/emacs-ctable"))])
 (cython-mode .
	      [(20190111 2150)
	       nil "Major mode for editing Cython files" single
	       ((:commit . "3ae56c90d887869407f30bb117ca61f735cec6db"))])
 (dap-mode .
	   [(20201102 1450)
	    ((emacs
	      (26 1))
	     (dash
	      (2 14 1))
	     (lsp-mode
	      (6 0))
	     (dash-functional
	      (1 2 0))
	     (bui
	      (1 1 0))
	     (f
	      (0 20 0))
	     (s
	      (1 12 0))
	     (lsp-treemacs
	      (0 1))
	     (posframe
	      (0 7 0)))
	    "Debug Adapter Protocol mode" tar
	    ((:commit . "6d57f07850d1960e48534b639cc718a1cfc8a409")
	     (:authors
	      ("Ivan Yonchovski" . "yyoncho@gmail.com"))
	     (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com")
	     (:keywords "languages" "debug")
	     (:url . "https://github.com/yyoncho/dap-mode"))])
 (dash .
       [(20200803 1520)
	nil "A modern list library for Emacs" tar
	((:commit . "0f238a9a466879ee96e5db0482019453718f342d")
	 (:authors
	  ("Magnar Sveen" . "magnars@gmail.com"))
	 (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	 (:keywords "lists"))])
 (dash-at-point .
		[(20180710 1356)
		 nil "Search the word at point with Dash" single
		 ((:commit . "4d795a23a8428c421d5107f1b005c9d8e0d1816c")
		  (:authors
		   ("Shinji Tanaka" . "shinji.tanaka@gmail.com"))
		  (:maintainer "Shinji Tanaka" . "shinji.tanaka@gmail.com")
		  (:url . "https://github.com/stanaka/dash-at-point"))])
 (dash-docs .
	    [(20200516 1943)
	     ((emacs
	       (24 4))
	      (cl-lib
	       (0 5))
	      (async
	       (1 9 3)))
	     "Offline documentation browser using Dash docsets." single
	     ((:commit . "dafc8fc9f1ddb2e4e39e0b8d066c42d5d7ce8d06")
	      (:authors
	       ("Raimon Grau" . "raimonster@gmail.com")
	       ("Toni Reina " . "areina0@gmail.com")
	       ("Bryan Gilbert" . "bryan@bryan.sh"))
	      (:maintainer "Raimon Grau" . "raimonster@gmail.com")
	      (:keywords "docs")
	      (:url . "http://github.com/areina/helm-dash"))])
 (dash-functional .
		  [(20200617 702)
		   ((dash
		     (2 0 0))
		    (emacs
		     (24)))
		   "Collection of useful combinators for Emacs Lisp" single
		   ((:commit . "0f238a9a466879ee96e5db0482019453718f342d")
		    (:keywords "lisp" "functions" "combinators"))])
 (default-text-scale .
   [(20191226 2234)
    ((emacs
      (24)))
    "Easily adjust the font size in all frames" single
    ((:commit . "bfc0987c37e93742255d3b23d86c17096fda8e7e")
     (:authors
      ("Steve Purcell" . "steve@sanityinc.com"))
     (:maintainer "Steve Purcell" . "steve@sanityinc.com")
     (:keywords "frames" "faces")
     (:url . "https://github.com/purcell/default-text-scale"))])
 (deferred .
   [(20170901 1330)
    ((emacs
      (24 4)))
    "Simple asynchronous functions for emacs lisp" single
    ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16")
     (:authors
      ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
     (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
     (:keywords "deferred" "async")
     (:url . "https://github.com/kiwanami/emacs-deferred"))])
 (define-word .
   [(20200824 1120)
    ((emacs
      (24 3)))
    "display the definition of word at point." single
    ((:commit . "3af6825c5f3bf4f6176a3f5b2e499616c65e2fe0")
     (:authors
      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
     (:keywords "dictionary" "convenience")
     (:url . "https://github.com/abo-abo/define-word"))])
 (demangle-mode .
		[(20200926 2014)
		 ((cl-lib
		   (0 1))
		  (emacs
		   (24 3)))
		 "Automatically demangle C++ symbols" single
		 ((:commit . "aaef0bd77a3ea9ce9132e9a53ac021b0f5d33e12")
		  (:authors
		   ("Ben Liblit" . "liblit@acm.org"))
		  (:maintainer "Ben Liblit" . "liblit@acm.org")
		  (:keywords "c" "tools")
		  (:url . "https://github.com/liblit/demangle-mode"))])
 (devdocs .
	  [(20170731 850)
	   nil "Launch DevDocs search" single
	   ((:commit . "a2d51e824f0cc48a9dd611cc740bc8b86143e611")
	    (:authors
	     ("Chunyang Xu" . "xuchunyang.me@gmail.com"))
	    (:maintainer "Chunyang Xu" . "xuchunyang.me@gmail.com")
	    (:url . "https://github.com/xuchunyang/DevDocs.el"))])
 (diff-hl .
	  [(20200701 2141)
	   ((cl-lib
	     (0 2))
	    (emacs
	     (24 3)))
	   "Highlight uncommitted changes using VC" tar
	   ((:commit . "2281a89a3ddc6616073da6f190dda08d23b18ba6")
	    (:authors
	     ("Dmitry Gutov" . "dgutov@yandex.ru"))
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:keywords "vc" "diff")
	    (:url . "https://github.com/dgutov/diff-hl"))])
 (diminish .
	   [(20191127 1326)
	    ((emacs
	      (24 3)))
	    "Diminished modes are minor modes with no modeline display" single
	    ((:commit . "6ec6ebc391371418efc6c98d70b013f34af5a2ee")
	     (:authors
	      ("Will Mengarini" . "seldon@eskimo.com"))
	     (:maintainer "Martin Yrjölä" . "martin.yrjola@gmail.com")
	     (:keywords "extensions" "diminish" "minor" "codeprose")
	     (:url . "https://github.com/myrjola/diminish.el"))])
 (disaster .
	   [(20171016 2152)
	    nil "Disassemble C/C++ code under cursor in Emacs" single
	    ((:commit . "10a785facc60d89d78e0d5177985ab1af1741bb4")
	     (:authors
	      ("Justine Tunney" . "jtunney@gmail.com"))
	     (:maintainer "Justine Tunney" . "jtunney@gmail.com")
	     (:keywords "tools")
	     (:url . "https://github.com/jart/disaster"))])
 (doom-modeline .
		[(20201102 1555)
		 ((emacs
		   (25 1))
		  (all-the-icons
		   (2 2 0))
		  (shrink-path
		   (0 2 0))
		  (dash
		   (2 11 0)))
		 "A minimal and modern mode-line" tar
		 ((:commit . "5cfc0251e093615694da64f405235576eecd6fa5")
		  (:authors
		   ("Vincent Zhang" . "seagle0128@gmail.com"))
		  (:maintainer "Vincent Zhang" . "seagle0128@gmail.com")
		  (:keywords "faces" "mode-line")
		  (:url . "https://github.com/seagle0128/doom-modeline"))])
 (dotenv-mode .
	      [(20191027 2129)
	       ((emacs
		 (24 3)))
	       "Major mode for .env files" single
	       ((:commit . "e3701bf739bde44f6484eb7753deadaf691b73fb")
		(:authors
		 ("Preetpal S. Sohal"))
		(:maintainer "Preetpal S. Sohal")
		(:url . "https://github.com/preetpalS/emacs-dotenv-mode"))])
 (dumb-jump .
	    [(20201017 205)
	     ((emacs
	       (24 3))
	      (s
	       (1 11 0))
	      (dash
	       (2 9 0))
	      (popup
	       (0 5 3)))
	     "Jump to definition for 40+ languages without configuration" single
	     ((:commit . "97b0dfb617533cce128dcfe4956da5d88de07bca")
	      (:authors
	       ("jack angers and contributors"))
	      (:maintainer "jack angers and contributors")
	      (:keywords "programming")
	      (:url . "https://github.com/jacktasia/dumb-jump"))])
 (editorconfig .
	       [(20200730 1329)
		((cl-lib
		  (0 5))
		 (emacs
		  (24)))
		"EditorConfig Emacs Plugin" tar
		((:commit . "a6c70da2cf3a3a2aac2b204828f1acd243cd7529")
		 (:authors
		  ("EditorConfig Team" . "editorconfig@googlegroups.com"))
		 (:maintainer "EditorConfig Team" . "editorconfig@googlegroups.com")
		 (:url . "https://github.com/editorconfig/editorconfig-emacs#readme"))])
 (elfeed .
	 [(20200910 239)
	  ((emacs
	    (24 3)))
	  "an Emacs Atom/RSS feed reader" tar
	  ((:commit . "7b2b6fadaa498fef2ba212a50da4a8afa2a5d305"))])
 (elfeed-goodies .
		 [(20190128 1631)
		  ((popwin
		    (1 0 0))
		   (powerline
		    (2 2))
		   (elfeed
		    (2 0 0))
		   (cl-lib
		    (0 5))
		   (noflet
		    (0 0 10))
		   (ace-jump-mode
		    (2 0)))
		  "Elfeed goodies" tar
		  ((:commit . "95b4ea632fbd5960927952ec8f3394eb88da4752")
		   (:authors
		    ("Gergely Nagy"))
		   (:maintainer "Gergely Nagy")
		   (:url . "https://github.com/algernon/elfeed-goodies"))])
 (elfeed-org .
	     [(20181015 1100)
	      ((elfeed
		(1 1 1))
	       (org
		(8 2 7))
	       (dash
		(2 10 0))
	       (s
		(1 9 0))
	       (cl-lib
		(0 5)))
	      "Configure elfeed with one or more org-mode files" single
	      ((:commit . "77b6bbf222487809813de260447d31c4c59902c9")
	       (:authors
		("Remy Honig" . "remyhonig@gmail.com"))
	       (:maintainer "Remy Honig" . "remyhonig@gmail.com")
	       (:keywords "news")
	       (:url . "https://github.com/remyhonig/elfeed-org"))])
 (elisp-depmap .
	       [(20200714 1630)
		((emacs
		  (26 1))
		 (dash
		  (2 17 0)))
		"Generate an elisp dependency map in graphviz" tar
		((:commit . "1869569356f0a9d97ae0cb1df95ed0ecadb0f7ef")
		 (:authors
		  ("Mehmet Tekman"))
		 (:maintainer "Mehmet Tekman")
		 (:keywords "outlines")
		 (:url . "https://github.com/mtekman/elisp-depmap.el"))])
 (elisp-slime-nav .
		  [(20200304 2201)
		   ((emacs
		     (24 1))
		    (cl-lib
		     (0 2)))
		   "Make M-. and M-, work in elisp like they do in slime" single
		   ((:commit . "9ab52362600af9f97f1590f05a295538025170b3")
		    (:authors
		     ("Steve Purcell" . "steve@sanityinc.com"))
		    (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		    (:keywords "languages" "navigation" "slime" "elisp" "emacs-lisp")
		    (:url . "https://github.com/purcell/elisp-slime-nav"))])
 (elixir-mode .
	      [(20200723 1750)
	       ((emacs
		 (24))
		(pkg-info
		 (0 4)))
	       "Major mode for editing Elixir files" tar
	       ((:commit . "01b332495d3f44addeb236428041c4ffa0c2ca3b")
		(:keywords "languages" "elixir")
		(:url . "https://github.com/elixir-editors/emacs-elixir"))])
 (emacsql .
	  [(20200714 28)
	   ((emacs
	     (25 1)))
	   "high-level SQL database front-end" tar
	   ((:commit . "6d8cd9366284b5a27268ff4b783e2c34573d5b60")
	    (:authors
	     ("Christopher Wellons" . "wellons@nullprogram.com"))
	    (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
	    (:url . "https://github.com/skeeto/emacsql"))])
 (emacsql-sqlite .
		 [(20190727 1710)
		  ((emacs
		    (25 1))
		   (emacsql
		    (2 0 0)))
		  "EmacSQL back-end for SQLite" tar
		  ((:commit . "6d8cd9366284b5a27268ff4b783e2c34573d5b60")
		   (:authors
		    ("Christopher Wellons" . "wellons@nullprogram.com"))
		   (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
		   (:url . "https://github.com/skeeto/emacsql"))])
 (emacsql-sqlite3 .
		  [(20200914 508)
		   ((emacs
		     (26 1))
		    (emacsql
		     (3 0 0)))
		   "Yet another EmacSQL backend for SQLite" single
		   ((:commit . "50aa9bdd76b0d18bf80526cff13a69fe306ee29c")
		    (:authors
		     ("Zhu Zihao" . "all_but_last@163.com"))
		    (:maintainer "Zhu Zihao" . "all_but_last@163.com")
		    (:keywords "extensions")
		    (:url . "https://github.com/cireu/emacsql-sqlite3"))])
 (emmet-mode .
	     [(20180613 341)
	      nil "Unofficial Emmet's support for emacs" single
	      ((:commit . "1acb821e0142136344ccf40c1e5fb664d7db2e70")
	       (:authors
		("Shin Aoyama" . "smihica@gmail.com"))
	       (:maintainer "Shin Aoyama" . "smihica@gmail.com")
	       (:keywords "convenience")
	       (:url . "https://github.com/smihica/emmet-mode"))])
 (emr .
      [(20200420 721)
       ((s
	 (1 3 1))
	(dash
	 (1 2 0))
	(cl-lib
	 (0 2))
	(popup
	 (0 5 0))
	(emacs
	 (24 1))
	(list-utils
	 (0 3 0))
	(paredit
	 (24 0 0))
	(projectile
	 (0 9 1))
	(clang-format
	 (0 0 1))
	(iedit
	 (0 97)))
       "Emacs refactoring system." tar
       ((:commit . "a8f6ab823453decf43f0764d02e554d05009a631")
	(:authors
	 ("Chris Barrett" . "chris.d.barrett@me.com"))
	(:maintainer "Chris Barrett" . "chris.d.barrett@me.com")
	(:keywords "tools" "convenience" "refactoring")
	(:url . "https://github.com/Wilfred/emacs-refactor"))])
 (engine-mode .
	      [(20200611 1825)
	       ((cl-lib
		 (0 5)))
	       "Define and query search engines from within Emacs." single
	       ((:commit . "e0910f141f2d37c28936c51c3c8bb8a9ca0c01d1")
		(:authors
		 ("Harry R. Schwartz" . "hello@harryrschwartz.com"))
		(:maintainer "Harry R. Schwartz" . "hello@harryrschwartz.com")
		(:url . "https://github.com/hrs/engine-mode"))])
 (epc .
      [(20140610 534)
       ((concurrent
	 (0 3 1))
	(ctable
	 (0 1 2)))
       "A RPC stack for the Emacs Lisp" tar
       ((:commit . "e1bfa5ca163273859336e3cc89b4b6460f7f8cda")
	(:authors
	 ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	(:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	(:keywords "lisp" "rpc")
	(:url . "https://github.com/kiwanami/emacs-epc"))])
 (epl .
      [(20180205 2049)
       ((cl-lib
	 (0 3)))
       "Emacs Package Library" single
       ((:commit . "78ab7a85c08222cd15582a298a364774e3282ce6")
	(:authors
	 ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	(:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
	(:keywords "convenience")
	(:url . "http://github.com/cask/epl"))])
 (esh-help .
	   [(20190905 22)
	    ((dash
	      (1 4 0)))
	    "Add some help functions and support for Eshell" single
	    ((:commit . "417673ed18a983930a66a6692dbfb288a995cb80")
	     (:authors
	      ("Tomoya Tanjo" . "ttanjo@gmail.com"))
	     (:maintainer "Tomoya Tanjo" . "ttanjo@gmail.com")
	     (:keywords "eshell" "extensions")
	     (:url . "https://github.com/tom-tan/esh-help/"))])
 (eshell-prompt-extras .
		       [(20200319 322)
			((emacs
			  (25)))
			"Display extra information for your eshell prompt." single
			((:commit . "1801b3aeccf1363f138fe01ee99d892d10fc2a07")
			 (:authors
			  ("zwild" . "judezhao@outlook.com"))
			 (:maintainer "Chunyang Xu" . "mail@xuchunyang.me")
			 (:keywords "eshell" "prompt")
			 (:url . "https://github.com/zwild/eshell-prompt-extras"))])
 (eshell-z .
	   [(20191116 333)
	    ((cl-lib
	      (0 5)))
	    "cd to frequent directory in eshell" single
	    ((:commit . "337cb241e17bd472bd3677ff166a0800f684213c")
	     (:authors
	      ("Chunyang Xu" . "mail@xuchunyang.me"))
	     (:maintainer "Chunyang Xu" . "mail@xuchunyang.me")
	     (:keywords "convenience")
	     (:url . "https://github.com/xuchunyang/eshell-z"))])
 (esup .
       [(20200814 1400)
	((cl-lib
	  (0 5))
	 (s
	  (1 2))
	 (emacs
	  (25 1)))
	"The Emacs StartUp Profiler (ESUP)" tar
	((:commit . "0de8af8233d9ce1b67f05a50f25c481c4f1118d8")
	 (:authors
	  ("Joe Schafer" . "joe@jschaf.com"))
	 (:maintainer "Serghei Iakovlev" . "egrep@protonmail.ch")
	 (:keywords "convenience" "processes")
	 (:url . "https://github.com/jschaf/esup"))])
 (esxml .
	[(20171129 807)
	 nil "Library for working with xml via esxml and sxml" tar
	 ((:commit . "193d199305e7abcb5ed795b9bc5434ded20ae60e"))])
 (eval-sexp-fu .
	       [(20191128 825)
		((cl-lib
		  (0)))
		"Tiny functionality enhancements for evaluating sexps." single
		((:commit . "36d2fe3bcf602e15ca10a7f487da103515ef391a")
		 (:authors
		  ("Takeshi Banse" . "takebi@laafc.net"))
		 (:maintainer "Takeshi Banse" . "takebi@laafc.net")
		 (:keywords "lisp" "highlight" "convenience"))])
 (evil .
       [(20201014 2043)
	((emacs
	  (24 1))
	 (goto-chg
	  (1 6))
	 (cl-lib
	  (0 5)))
	"Extensible Vi layer for Emacs." tar
	((:commit . "32b2783d2cb7e093ac284fa6af9ceed8e4418826"))])
 (evil-anzu .
	    [(20200514 1902)
	     ((evil
	       (1 0 0))
	      (anzu
	       (0 46)))
	     "anzu for evil-mode" single
	     ((:commit . "d3f6ed4773b48767bd5f4708c7f083336a8a8a86")
	      (:authors
	       ("Syohei YOSHIDA" . "syohex@gmail.com")
	       ("Fredrik Bergroth" . "fbergroth@gmail.com"))
	      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	      (:url . "https://github.com/syohex/emacs-evil-anzu"))])
 (evil-args .
	    [(20180908 2157)
	     ((evil
	       (1 0 8)))
	     "Motions and text objects for delimited arguments in Evil." single
	     ((:commit . "758ad5ae54ad34202064fec192c88151c08cb387")
	      (:authors
	       ("Connor Smith" . "wconnorsmith@gmail.com"))
	      (:maintainer "Connor Smith" . "wconnorsmith@gmail.com")
	      (:keywords "evil" "vim-emulation")
	      (:url . "http://github.com/wcsmith/evil-args"))])
 (evil-cleverparens .
		    [(20170718 413)
		     ((evil
		       (1 0))
		      (paredit
		       (1))
		      (smartparens
		       (1 6 1))
		      (emacs
		       (24 4))
		      (dash
		       (2 12 0)))
		     "Evil friendly minor-mode for editing lisp." tar
		     ((:commit . "8c45879d49bfa6d4e414b6c1df700a4a51cbb869")
		      (:authors
		       ("Olli Piepponen" . "opieppo@gmail.com"))
		      (:maintainer "Olli Piepponen" . "opieppo@gmail.com")
		      (:keywords "cleverparens" "parentheses" "evil" "paredit" "smartparens")
		      (:url . "https://github.com/luxbock/evil-cleverparens"))])
 (evil-ediff .
	     [(20170724 1923)
	      ((evil
		(1 2 3)))
	      "Make ediff a little evil" single
	      ((:commit . "50d26cb0654fca8f8fd7227410e5cbf0b8f681cf")
	       (:authors
		("Justin Burkett" . "justin@burkett.cc"))
	       (:maintainer "Justin Burkett" . "justin@burkett.cc")
	       (:url . "https://github.com/justbur/evil-ediff"))])
 (evil-escape .
	      [(20180910 1234)
	       nil "No description available." single
	       ((:commit . "f4e9116bfbaac8c9d210c17ad488e0982291245f"))])
 (evil-exchange .
		[(20200118 252)
		 ((evil
		   (1 2 8))
		  (cl-lib
		   (0 3)))
		 "Exchange text more easily within Evil" single
		 ((:commit . "3030e21ee16a42dfce7f7cf86147b778b3f5d8c1")
		  (:authors
		   ("Dewdrops" . "v_v_4474@126.com"))
		  (:maintainer "Dewdrops" . "v_v_4474@126.com")
		  (:keywords "evil" "plugin")
		  (:url . "http://github.com/Dewdrops/evil-exchange"))])
 (evil-goggles .
	       [(20200101 1935)
		((emacs
		  (24 4))
		 (evil
		  (1 0 0)))
		"Add a visual hint to evil operations" single
		((:commit . "08a22058fd6a167f9f1b684c649008caef571459")
		 (:authors
		  ("edkolev" . "evgenysw@gmail.com"))
		 (:maintainer "edkolev" . "evgenysw@gmail.com")
		 (:keywords "emulations" "evil" "vim" "visual")
		 (:url . "http://github.com/edkolev/evil-goggles"))])
 (evil-iedit-state .
		   [(20200830 617)
		    ((evil
		      (1 0 9))
		     (iedit
		      (0 9 9 9)))
		    "Evil states to interface iedit mode." single
		    ((:commit . "30fcfa96ceebed0191337c493f5c2efc8ae090ad")
		     (:authors
		      ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		     (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		     (:keywords "convenience" "editing" "evil" "iedit" "mnemonic")
		     (:url . "https://github.com/syl20bnr/evil-iedit-state"))])
 (evil-indent-plus .
		   [(20151109 1906)
		    ((evil
		      (0))
		     (cl-lib
		      (0 5)))
		    "Evil textobjects based on indentation" single
		    ((:commit . "0c7501e6efed661242c3a20e0a6c79a6455c2c40")
		     (:authors
		      ("Eivind Fonn" . "evfonn@gmail.com"))
		     (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
		     (:keywords "convenience" "evil")
		     (:url . "http://github.com/TheBB/evil-indent-plus"))])
 (evil-lion .
	    [(20170811 614)
	     ((emacs
	       (24 3))
	      (evil
	       (1 0 0)))
	     "Evil align operator, port of vim-lion" single
	     ((:commit . "6b03593f5dd6e7c9ca02207f9a73615cf94c93ab")
	      (:authors
	       ("edkolev" . "evgenysw@gmail.com"))
	      (:maintainer "edkolev" . "evgenysw@gmail.com")
	      (:keywords "emulations" "evil" "vim")
	      (:url . "http://github.com/edkolev/evil-lion"))])
 (evil-lisp-state .
		  [(20160404 248)
		   ((evil
		     (1 0 9))
		    (bind-map
		     (0))
		    (smartparens
		     (1 6 1)))
		   "An evil state to edit Lisp code" single
		   ((:commit . "3c65fecd9917a41eaf6460f22187e2323821f3ce")
		    (:authors
		     ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		    (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		    (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic")
		    (:url . "https://github.com/syl20bnr/evil-lisp-state"))])
 (evil-magit .
	     [(20200604 110)
	      ((evil
		(1 2 3))
	       (magit
		(2 6 0)))
	      "evil-based key bindings for magit" single
	      ((:commit . "88dc26ce59dbf4acb4e2891c79c4bd329553ba56")
	       (:authors
		("Justin Burkett" . "justin@burkett.cc"))
	       (:maintainer "Justin Burkett" . "justin@burkett.cc")
	       (:url . "https://github.com/justbur/evil-magit"))])
 (evil-matchit .
	       [(20200906 255)
		((evil
		  (1 2 0))
		 (emacs
		  (24 4)))
		"Vim matchit ported to Evil" tar
		((:commit . "539192328ec521796c3f2bd8c1ac1a1b0e4f08f9")
		 (:authors
		  ("Chen Bin <chenbin DOT sh AT gmail DOT com>"))
		 (:maintainer "Chen Bin <chenbin DOT sh AT gmail DOT com>")
		 (:keywords "matchit" "vim" "evil")
		 (:url . "http://github.com/redguardtoo/evil-matchit"))])
 (evil-mc .
	  [(20200228 1535)
	   ((emacs
	     (24 3))
	    (evil
	     (1 2 14))
	    (cl-lib
	     (0 5)))
	   "Multiple cursors for evil-mode" tar
	   ((:commit . "7dfb2ca5ac00c249cb2f55cd6fa91fb2bfb1117e")
	    (:authors
	     ("Gabriel Adomnicai" . "gabesoft@gmail.com"))
	    (:maintainer "Gabriel Adomnicai" . "gabesoft@gmail.com")
	    (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc")
	    (:url . "https://github.com/gabesoft/evil-mc"))])
 (evil-nerd-commenter .
		      [(20201017 1148)
		       ((emacs
			 (24 4)))
		       "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar
		       ((:commit . "563cdc154b1f29d181b883563dd37be7eafafdee")
			(:authors
			 ("Chen Bin <chenbin DOT sh AT gmail.com>"))
			(:maintainer "Chen Bin <chenbin DOT sh AT gmail.com>")
			(:keywords "convenience" "evil")
			(:url . "http://github.com/redguardtoo/evil-nerd-commenter"))])
 (evil-numbers .
	       [(20140606 1251)
		nil "increment/decrement numbers like in vim" single
		((:commit . "6ea1c8c3a9b37bed63d48f1128e9a4910e68187e")
		 (:authors
		  ("Michael Markert" . "markert.michael@googlemail.com"))
		 (:maintainer "Michael Markert" . "markert.michael@googlemail.com")
		 (:keywords "numbers" "increment" "decrement" "octal" "hex" "binary")
		 (:url . "http://github.com/cofi/evil-numbers"))])
 (evil-org .
	   [(20200922 1933)
	    ((emacs
	      (24 4))
	     (evil
	      (1 0)))
	    "evil keybindings for org-mode" tar
	    ((:commit . "a629fb705b0ac704580d5a5833a64716284074e7")
	     (:maintainer "Somelauw")
	     (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets")
	     (:url . "https://github.com/Somelauw/evil-org-mode.git"))])
 (evil-snipe .
	     [(20200531 1008)
	      ((emacs
		(24 4))
	       (evil
		(1 2 12))
	       (cl-lib
		(0 5)))
	      "emulate vim-sneak & vim-seek" single
	      ((:commit . "6dcac7f2516c6137a2de532fc2c052f242559ee3")
	       (:authors
		("Henrik Lissner <http://github/hlissner>"))
	       (:maintainer "Henrik Lissner" . "henrik@lissner.net")
	       (:keywords "emulation" "vim" "evil" "sneak" "seek")
	       (:url . "https://github.com/hlissner/evil-snipe"))])
 (evil-surround .
		[(20200603 2216)
		 ((evil
		   (1 2 12)))
		 "emulate surround.vim from Vim" single
		 ((:commit . "346d4d85fcf1f9517e9c4991c1efe68b4130f93a")
		  (:authors
		   ("Tim Harper <timcharper at gmail dot com>")
		   ("Vegard Øye <vegard_oye at hotmail dot com>"))
		  (:maintainer "Tim Harper <timcharper at gmail dot com>")
		  (:keywords "emulation" "vi" "evil"))])
 (evil-textobj-line .
		    [(20150729 1522)
		     ((evil
		       (1 0 0)))
		     "evil textobj line" single
		     ((:commit . "3d401b6831bdbeec967ec8e64177a8950251e812")
		      (:authors
		       ("Syohei YOSHIDA" . "syohex@gmail.com"))
		      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		      (:url . "https://github.com/syohex/emacs-evil-textobj-line"))])
 (evil-tutor .
	     [(20150103 650)
	      ((evil
		(1 0 9)))
	      "Vimtutor adapted to Evil and wrapped in a major-mode" tar
	      ((:commit . "4e124cd3911dc0d1b6817ad2c9e59b4753638f28")
	       (:authors
		("Sylvain Benner" . "sylvain.benner@gmail.com"))
	       (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
	       (:keywords "convenience" "editing" "evil")
	       (:url . "https://github.com/syl20bnr/evil-tutor"))])
 (evil-visual-mark-mode .
			[(20190116 1557)
			 ((evil
			   (1 0 9))
			  (dash
			   (2 10)))
			 "Display evil marks on buffer" single
			 ((:commit . "ac5997971972a9251f140b5542d82790ca4a43b4")
			  (:authors
			   ("Roman Gonzalez" . "romanandreg@gmail.com"))
			  (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com")
			  (:keywords "evil"))])
 (evil-visualstar .
		  [(20160223 48)
		   ((evil
		     (0)))
		   "Starts a * or # search from the visual selection" single
		   ((:commit . "06c053d8f7381f91c53311b1234872ca96ced752")
		    (:authors
		     ("Bailey Ling"))
		    (:maintainer "Bailey Ling")
		    (:keywords "evil" "vim" "visualstar")
		    (:url . "https://github.com/bling/evil-visualstar"))])
 (expand-region .
		[(20200304 1839)
		 nil "Increase selected region by semantic units." tar
		 ((:commit . "ea6b4cbb9985ddae532bd2faf9bb00570c9f2781"))])
 (eyebrowse .
	    [(20200506 1303)
	     ((dash
	       (2 7 0))
	      (emacs
	       (24 3 1)))
	     "Easy window config switching" single
	     ((:commit . "6ed94a985fbed64f6ce061251f3f6e6532f14bfc")
	      (:authors
	       ("Vasilij Schneidermann" . "mail@vasilij.de"))
	      (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de")
	      (:keywords "convenience")
	      (:url . "https://depp.brause.cc/eyebrowse"))])
 (f .
    [(20191110 1357)
     ((s
       (1 7 0))
      (dash
       (2 2 0)))
     "Modern API for working with files and directories" single
     ((:commit . "1814209e2ff43cf2e6d38c4cd476218915f550fb")
      (:authors
       ("Johan Andersson" . "johan.rejeep@gmail.com"))
      (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
      (:keywords "files" "directories")
      (:url . "http://github.com/rejeep/f.el"))])
 (fancy-battery .
		[(20150101 1204)
		 ((emacs
		   (24 1)))
		 "Fancy battery display" single
		 ((:commit . "9b88ae77a01aa3edc529840338bcb2db7f445822")
		  (:authors
		   ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
		  (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
		  (:keywords "convenience" "tools" "hardware")
		  (:url . "https://github.com/lunaryorn/fancy-battery.el"))])
 (fill-column-indicator .
			[(20200806 2239)
			 nil "Graphically indicate the fill column" single
			 ((:commit . "c35f9de072c241699b57bcb46da84bed5af29cfe")
			  (:authors
			   ("Alp Aker" . "alp.tekin.aker@gmail.com"))
			  (:maintainer "Alp Aker" . "alp.tekin.aker@gmail.com")
			  (:keywords "convenience"))])
 (fish-mode .
	    [(20200213 2137)
	     ((emacs
	       (24)))
	     "Major mode for fish shell scripts" single
	     ((:commit . "db257db81058b0b12f788c324c264cc59b9a5bf4")
	      (:authors
	       ("Tony Wang" . "wwwjfy@gmail.com"))
	      (:maintainer "Tony Wang" . "wwwjfy@gmail.com")
	      (:keywords "fish" "shell"))])
 (flx .
      [(20191115 659)
       ((cl-lib
	 (0 3)))
       "fuzzy matching with good sorting" single
       ((:commit . "647cb2f92f9936c62e277d7a74ad54a80502d255")
	(:authors
	 ("Le Wang"))
	(:maintainer "Le Wang")
	(:url . "https://github.com/lewang/flx"))])
 (flx-ido .
	  [(20180117 1519)
	   ((flx
	     (0 1))
	    (cl-lib
	     (0 3)))
	   "flx integration for ido" single
	   ((:commit . "647cb2f92f9936c62e277d7a74ad54a80502d255")
	    (:authors
	     ("Le Wang"))
	    (:maintainer "Le Wang")
	    (:url . "https://github.com/lewang/flx"))])
 (flycheck .
	   [(20201023 1716)
	    ((dash
	      (2 12 1))
	     (pkg-info
	      (0 4))
	     (let-alist
		 (1 0 4))
	     (seq
	      (1 11))
	     (emacs
	      (24 3)))
	    "On-the-fly syntax checking" tar
	    ((:commit . "7df7f61c63dfb8d3d9331febdd760c8e0556edb1")
	     (:authors
	      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	     (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com")
	     (:keywords "convenience" "languages" "tools")
	     (:url . "http://www.flycheck.org"))])
 (flycheck-bashate .
		   [(20200625 642)
		    ((flycheck
		      (0 24))
		     (emacs
		      (24 4)))
		    "Integrate bashate with flycheck" single
		    ((:commit . "5e673c591d017329d0a07a61dc1223fa98639ee2")
		     (:authors
		      ("Alex Murray" . "murray.alex@gmail.com"))
		     (:maintainer "Alex Murray" . "murray.alex@gmail.com")
		     (:url . "https://github.com/alexmurray/flycheck-bashate"))])
 (flycheck-clj-kondo .
		     [(20201102 1128)
		      ((flycheck
			(0 18)))
		      "Add clj-kondo linter to flycheck" single
		      ((:commit . "a558bda44c4cb65b69fa53df233e8941ebd195c5")
		       (:authors
			("Michiel Borkent" . "michielborkent@gmail.com"))
		       (:maintainer "Michiel Borkent" . "michielborkent@gmail.com")
		       (:url . "https://github.com/borkdude/flycheck-clj-kondo"))])
 (flycheck-credo .
		 [(20170526 1545)
		  ((flycheck
		    (29)))
		  "flycheck checker for elixir credo" single
		  ((:commit . "e88f11ead53805c361ec7706e44c3dfee1daa19f")
		   (:authors
		    ("Aaron Jensen" . "aaronjensen@gmail.com"))
		   (:maintainer "Aaron Jensen" . "aaronjensen@gmail.com")
		   (:url . "https://github.com/aaronjensen/flycheck-credo"))])
 (flycheck-elsa .
		[(20200203 1758)
		 ((emacs
		   (25))
		  (seq
		   (2 0)))
		 "Flycheck for Elsa." tar
		 ((:commit . "6274e6d5391bcdca46164b3238b045ca21c353a2")
		  (:authors
		   ("Matúš Goljer" . "matus.goljer@gmail.com"))
		  (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com")
		  (:keywords "convenience")
		  (:url . "https://github.com/emacs-elsa/flycheck-elsa"))])
 (flycheck-package .
		   [(20200304 2151)
		    ((emacs
		      (24 1))
		     (flycheck
		      (0 22))
		     (package-lint
		      (0 2)))
		    "A Flycheck checker for elisp package authors" single
		    ((:commit . "64cf27d69051e02a32e3c517cbfea23f9d2d7557")
		     (:authors
		      ("Steve Purcell" . "steve@sanityinc.com")
		      ("Fanael Linithien" . "fanael4@gmail.com"))
		     (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		     (:keywords "lisp")
		     (:url . "https://github.com/purcell/flycheck-package"))])
 (flycheck-pos-tip .
		   [(20200516 1600)
		    ((emacs
		      (24 1))
		     (flycheck
		      (0 22))
		     (pos-tip
		      (0 4 6)))
		    "Display Flycheck errors in GUI tooltips" single
		    ((:commit . "dc57beac0e59669926ad720c7af38b27c3a30467")
		     (:authors
		      ("Akiha Senda" . "senda.akiha@gmail.com")
		      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
		     (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
		     (:keywords "tools" "convenience")
		     (:url . "https://github.com/flycheck/flycheck-pos-tip"))])
 (flycheck-rtags .
		 [(20191222 920)
		  ((emacs
		    (24))
		   (flycheck
		    (0 23))
		   (rtags
		    (2 10)))
		  "RTags Flycheck integration" single
		  ((:commit . "63a7d9b733def9fe76568f81321a65a450829575")
		   (:authors
		    ("Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com"))
		   (:maintainer "Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com")
		   (:url . "https://github.com/Andersbakken/rtags"))])
 (flycheck-ycmd .
		[(20181016 618)
		 ((emacs
		   (24))
		  (dash
		   (2 13 0))
		  (flycheck
		   (0 22))
		  (ycmd
		   (1 2))
		  (let-alist
		      (1 0 5)))
		 "flycheck integration for ycmd" single
		 ((:commit . "c17ff9e0250a9b39d23af37015a2b300e2f36fed")
		  (:authors
		   ("Austin Bingham" . "austin.bingham@gmail.com"))
		  (:maintainer "Austin Bingham" . "austin.bingham@gmail.com")
		  (:url . "https://github.com/abingham/emacs-ycmd"))])
 (flyspell-correct .
		   [(20200904 526)
		    ((emacs
		      (24)))
		    "Correcting words with flyspell via custom interface" tar
		    ((:commit . "6d603a1dc51918f7f8aaf99dd5443f74a0afc794")
		     (:authors
		      ("Boris Buliga" . "boris@d12frosted.io"))
		     (:maintainer "Boris Buliga" . "boris@d12frosted.io")
		     (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (flyspell-correct-helm .
			[(20200215 1337)
			 ((flyspell-correct
			   (0 6 1))
			  (helm
			   (1 9 0))
			  (emacs
			   (24)))
			 "Correcting words with flyspell via helm interface" single
			 ((:commit . "6d603a1dc51918f7f8aaf99dd5443f74a0afc794")
			  (:authors
			   ("Boris Buliga" . "boris@d12frosted.io"))
			  (:maintainer "Boris Buliga" . "boris@d12frosted.io")
			  (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (flyspell-correct-ivy .
		       [(20200513 708)
			((flyspell-correct
			  (0 6 1))
			 (ivy
			  (0 8 0))
			 (emacs
			  (24 3)))
			"Correcting words with flyspell via ivy interface" single
			((:commit . "6d603a1dc51918f7f8aaf99dd5443f74a0afc794")
			 (:authors
			  ("Boris Buliga" . "boris@d12frosted.io"))
			 (:maintainer "Boris Buliga" . "boris@d12frosted.io")
			 (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (font-lock+ .
	     [(20180101 1939)
	      nil "Enhancements to standard library `font-lock.el'." single
	      ((:commit . "f2c1ddcd4c9d581bd32be88fad026b49f98b6541")
	       (:authors
		("Drew Adams"))
	       (:maintainer nil . "Drew Adams (concat \"drew.adams\" \"@\" \"oracle\" \".com\")")
	       (:keywords "languages" "faces" "highlighting")
	       (:url . "https://www.emacswiki.org/emacs/download/font-lock%2b.el"))])
 (forge .
	[(20201031 1323)
	 ((emacs
	   (25 1))
	  (closql
	   (1 0 0))
	  (dash
	   (2 14 1))
	  (emacsql-sqlite
	   (3 0 0))
	  (ghub
	   (20190319))
	  (let-alist
	      (1 0 5))
	  (magit
	   (20190408))
	  (markdown-mode
	   (2 3))
	  (transient
	   (0 1 0)))
	 "Access Git forges from Magit." tar
	 ((:commit . "e2bae40e4da05a2859c045f7351a4895922622ae")
	  (:url . "https://github.com/magit/forge"))])
 (fringe-helper .
		[(20140620 2109)
		 nil "helper functions for fringe bitmaps" single
		 ((:commit . "ef4a9c023bae18ec1ddd7265f1f2d6d2e775efdd")
		  (:authors
		   ("Nikolaj Schumacher <bugs * nschum de>"))
		  (:maintainer "Nikolaj Schumacher <bugs * nschum de>")
		  (:keywords "lisp")
		  (:url . "http://nschum.de/src/emacs/fringe-helper/"))])
 (fuzzy .
	[(20150730 337)
	 nil "Fuzzy Matching" single
	 ((:commit . "a36bde2f6e94d6b2bfaae68d73bbd39734e5b907")
	  (:authors
	   ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	  (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	  (:keywords "convenience"))])
 (gcmh .
       [(20200409 1456)
	((emacs
	  (24)))
	"the Garbage Collector Magic Hack" single
	((:commit . "84c43a4c0b41a595ac6e299fa317d2831813e580")
	 (:maintainer nil . "akrl@sdf.org")
	 (:keywords "internal")
	 (:url . "https://gitlab.com/koral/gcmh"))])
 (geiser .
	 [(20200826 2018)
	  nil "GNU Emacs and Scheme talk to each other" tar
	  ((:commit . "2accab72e289ed82707237d2013ba034c88ff6c2")
	   (:url . "http://www.nongnu.org/geiser/"))])
 (general .
	  [(20200516 50)
	   ((emacs
	     (24 4))
	    (cl-lib
	     (0 5)))
	   "Convenience wrappers for keybindings." tar
	   ((:commit . "a0b17d207badf462311b2eef7c065b884462cb7c")
	    (:authors
	     ("Fox Kiester" . "noct@posteo.net"))
	    (:maintainer "Fox Kiester" . "noct@posteo.net")
	    (:keywords "vim" "evil" "leader" "keybindings" "keys")
	    (:url . "https://github.com/noctuid/general.el"))])
 (ggtags .
	 [(20190320 2208)
	  ((emacs
	    (25)))
	  "emacs frontend to GNU Global source code tagging system" single
	  ((:commit . "4d9000034d352cd983ae6626f560e434d0b3e9ca")
	   (:authors
	    ("Leo Liu" . "sdl.web@gmail.com"))
	   (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	   (:keywords "tools" "convenience")
	   (:url . "https://github.com/leoliu/ggtags"))])
 (gh .
     [(20180308 2138)
      ((emacs
	(24 3))
       (pcache
	(0 4 1))
       (logito
	(0 1))
       (marshal
	(0 6 3)))
      "A GitHub library for Emacs" tar
      ((:commit . "f029fc11f345ef04ab62ee91c38657e29c462fea"))])
 (gh-md .
	[(20151207 1740)
	 ((emacs
	   (24)))
	 "Render markdown using the Github api" single
	 ((:commit . "693cb0dcadff70e813e1a9d303d227aff7898557")
	  (:authors
	   ("Mario Rodas" . "marsam@users.noreply.github.com"))
	  (:maintainer "Mario Rodas" . "marsam@users.noreply.github.com")
	  (:keywords "convenience")
	  (:url . "https://github.com/emacs-pe/gh-md.el"))])
 (ghub .
       [(20201016 927)
	((emacs
	  (25 1))
	 (let-alist
	     (1 0 5))
	 (treepy
	  (0 1 1)))
	"Minuscule client libraries for Git forge APIs." tar
	((:commit . "e1ef7f064cb74fdd48419247341f0a0d6831c274"))])
 (gif-screencast .
		 [(20200327 1332)
		  ((emacs
		    (25 1)))
		  "One-frame-per-action GIF recording" single
		  ((:commit . "e39786458fb30e2e9683094c75c6c2cef537d9c4")
		   (:authors
		    ("Pierre Neidhardt" . "mail@ambrevar.xyz"))
		   (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
		   (:keywords "multimedia" "screencast")
		   (:url . "https://gitlab.com/ambrevar/emacs-gif-screencast"))])
 (gist .
       [(20171128 406)
	((emacs
	  (24 1))
	 (gh
	  (0 10 0)))
	"Emacs integration for gist.github.com" single
	((:commit . "314fe6ab80fae35b95f0734eceb82f72813b6f41")
	 (:authors
	  ("Yann Hodique" . "yann.hodique@gmail.com"))
	 (:maintainer "Yann Hodique" . "yann.hodique@gmail.com")
	 (:keywords "tools")
	 (:url . "https://github.com/defunkt/gist.el"))])
 (git-commit .
	     [(20200828 1753)
	      ((emacs
		(25 1))
	       (dash
		(20200524))
	       (transient
		(20200601))
	       (with-editor
		(20200522)))
	      "Edit Git commit messages" single
	      ((:commit . "ff8a616cd4e57b41e161d126232e92533669453a")
	       (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	       (:keywords "git" "tools" "vc")
	       (:url . "https://github.com/magit/magit"))])
 (git-gutter .
	     [(20201029 647)
	      ((emacs
		(24 3)))
	      "Port of Sublime Text plugin GitGutter" single
	      ((:commit . "db0e794fa97e4c902bbdf51b234cb68c993c71ae")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com")
	       (:url . "https://github.com/emacsorphanage/git-gutter"))])
 (git-gutter+ .
	      [(20151204 1723)
	       ((git-commit
		 (0))
		(dash
		 (0)))
	       "Manage Git hunks straight from the buffer" single
	       ((:commit . "b7726997806d9a2da9fe84ff00ecf21d62b6f975")
		(:authors
		 ("Syohei YOSHIDA" . "syohex@gmail.com"))
		(:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		(:keywords "git" "vc")
		(:url . "https://github.com/nonsequitur/git-gutter-plus"))])
 (git-gutter-fringe .
		    [(20200323 2249)
		     ((git-gutter
		       (0 88))
		      (fringe-helper
		       (0 1 1))
		      (cl-lib
		       (0 5))
		      (emacs
		       (24)))
		     "Fringe version of git-gutter.el" single
		     ((:commit . "da19a474137876b29b5658ee7e9ae366f2b65c1d")
		      (:authors
		       ("Syohei YOSHIDA" . "syohex@gmail.com"))
		      (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com")
		      (:url . "https://github.com/emacsorphanage/git-gutter-fringe"))])
 (git-gutter-fringe+ .
		     [(20140729 1103)
		      ((git-gutter+
			(0 1))
		       (fringe-helper
			(1 0 1)))
		      "Fringe version of git-gutter+.el" single
		      ((:commit . "7a2f49d2455a3a872e90e5f7dd4e6b27f1d96cfc")
		       (:authors
			("Syohei YOSHIDA" . "syohex@gmail.com"))
		       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		       (:url . "https://github.com/nonsequitur/git-gutter-fringe-plus"))])
 (git-link .
	   [(20200827 2326)
	    ((emacs
	      (24 3)))
	    "Get the GitHub/Bitbucket/GitLab URL for a buffer location" single
	    ((:commit . "7109c36c82496d6954dcf2b0b9c622b26e6ac75d")
	     (:authors
	      ("Skye Shaw" . "skye.shaw@gmail.com"))
	     (:maintainer "Skye Shaw" . "skye.shaw@gmail.com")
	     (:keywords "git" "vc" "github" "bitbucket" "gitlab" "sourcehut" "convenience")
	     (:url . "http://github.com/sshaw/git-link"))])
 (git-messenger .
		[(20200321 2337)
		 ((emacs
		   (24 3))
		  (popup
		   (0 5 3)))
		 "Popup last commit of current line" single
		 ((:commit . "2d64e62e33be9f881ebb019afc183caac9c62eda")
		  (:authors
		   ("Syohei YOSHIDA" . "syohex@gmail.com"))
		  (:maintainer "Neil Okamoto")
		  (:url . "https://github.com/emacsorphanage/git-messenger"))])
 (git-timemachine .
		  [(20200603 701)
		   ((emacs
		     (24 3))
		    (transient
		     (0 1 0)))
		   "Walk through git revisions of a file" single
		   ((:commit . "8d675750e921a047707fcdc36d84f8439b19a907")
		    (:authors
		     ("Peter Stiernström" . "peter@stiernstrom.se"))
		    (:maintainer "Peter Stiernström" . "peter@stiernstrom.se")
		    (:keywords "vc")
		    (:url . "https://gitlab.com/pidu/git-timemachine"))])
 (gitattributes-mode .
		     [(20180318 1956)
		      nil "Major mode for editing .gitattributes files" single
		      ((:commit . "55468314a5f6b77d2c96be62c7005ac94545e217")
		       (:authors
			("Rüdiger Sonderfeld" . "ruediger@c-plusplus.net"))
		       (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		       (:keywords "convenience" "vc" "git")
		       (:url . "https://github.com/magit/git-modes"))])
 (gitconfig-mode .
		 [(20180318 1956)
		  nil "Major mode for editing .gitconfig files" single
		  ((:commit . "55468314a5f6b77d2c96be62c7005ac94545e217")
		   (:authors
		    ("Sebastian Wiesner" . "lunaryorn@gmail.com"))
		   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		   (:keywords "convenience" "vc" "git")
		   (:url . "https://github.com/magit/git-modes"))])
 (github-clone .
	       [(20160623 310)
		((gh
		  (0 7 2))
		 (magit
		  (2 1 0))
		 (emacs
		  (24 4)))
		"Fork and clone github repos" single
		((:commit . "467b40ca60a6c26257466ebc43c74414df7f19cc")
		 (:authors
		  ("Charles L.G. Comstock" . "dgtized@gmail.com"))
		 (:maintainer "Charles L.G. Comstock" . "dgtized@gmail.com")
		 (:keywords "vc" "tools")
		 (:url . "https://github.com/dgtized/github-clone.el"))])
 (github-search .
		[(20190624 436)
		 ((magit
		   (0 8 1))
		  (gh
		   (1 0 0)))
		 "Clone repositories by searching github" single
		 ((:commit . "b73efaf19491010522b09db35bb0f1bad1620e63")
		  (:authors
		   ("Ivan Malison" . "IvanMalison@gmail.com"))
		  (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
		  (:keywords "github" "search" "clone" "api" "gh" "magit" "vc" "tools")
		  (:url . "https://github.com/IvanMalison/github-search"))])
 (gitignore-mode .
		 [(20180318 1956)
		  nil "Major mode for editing .gitignore files" single
		  ((:commit . "55468314a5f6b77d2c96be62c7005ac94545e217")
		   (:authors
		    ("Sebastian Wiesner" . "lunaryorn@gmail.com"))
		   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		   (:keywords "convenience" "vc" "git")
		   (:url . "https://github.com/magit/git-modes"))])
 (gitignore-templates .
		      [(20200228 1419)
		       ((emacs
			 (24 3)))
		       "Create .gitignore using GitHub or gitignore.io API" single
		       ((:commit . "b147d1930645dda76dbd48fb6f4f7f790353de26")
			(:authors
			 ("Xu Chunyang"))
			(:maintainer "Xu Chunyang")
			(:keywords "tools")
			(:url . "https://github.com/xuchunyang/gitignore-templates.el"))])
 (gntp .
       [(20141025 250)
	nil "Growl Notification Protocol for Emacs" single
	((:commit . "767571135e2c0985944017dc59b0be79af222ef5")
	 (:authors
	  ("Engelke Eschner" . "tekai@gmx.li"))
	 (:maintainer "Engelke Eschner" . "tekai@gmx.li"))])
 (gnuplot .
	  [(20200322 53)
	   ((emacs
	     (24 1)))
	   "Major-mode and interactive frontend for gnuplot" tar
	   ((:commit . "f0001c30010b2899e36d7d89046322467e923088")
	    (:authors
	     ("Jon Oddie")
	     ("Bruce Ravel")
	     ("Phil Type"))
	    (:maintainer "Bruce Ravel" . "bruceravel1@gmail.com")
	    (:keywords "data" "gnuplot" "plotting")
	    (:url . "https://github.com/emacsorphanage/gnuplot"))])
 (go-eldoc .
	   [(20170305 1427)
	    ((emacs
	      (24 3))
	     (go-mode
	      (1 0 0)))
	    "eldoc for go-mode" single
	    ((:commit . "cbbd2ea1e94a36004432a9ac61414cb5a95a39bd")
	     (:authors
	      ("Syohei YOSHIDA" . "syohex@gmail.com"))
	     (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	     (:url . "https://github.com/syohex/emacs-go-eldoc"))])
 (go-fill-struct .
		 [(20171225 331)
		  ((emacs
		    (24)))
		  "Fill struct for golang." single
		  ((:commit . "a613d0b378473eef39e8fd5724abe790aea84321")
		   (:authors
		    ("Sergey Kostyaev" . "feo.me@ya.ru"))
		   (:maintainer "Sergey Kostyaev" . "feo.me@ya.ru")
		   (:keywords "tools")
		   (:url . "https://github.com/s-kostyaev/go-fill-struct"))])
 (go-gen-test .
	      [(20171023 358)
	       ((emacs
		 (24 3))
		(s
		 (1 12)))
	       "Generate tests for go code with gotests" single
	       ((:commit . "44c202ac97e728e93a35cee028a0ea8dd6e4292c")
		(:authors
		 ("Sergey Kostyaev" . "feo.me@ya.ru"))
		(:maintainer "Sergey Kostyaev" . "feo.me@ya.ru")
		(:keywords "languages")
		(:url . "https://github.com/s-kostyaev/go-gen-test"))])
 (go-guru .
	  [(20181012 330)
	   ((go-mode
	     (1 3 1))
	    (cl-lib
	     (0 5)))
	   "Integration of the Go 'guru' analysis tool into Emacs." single
	   ((:commit . "d17d21060b16a77f9ee28ff453e674225acbf1b1")
	    (:keywords "tools"))])
 (go-impl .
	  [(20170125 1552)
	   ((emacs
	     (24 3))
	    (go-mode
	     (1 3 0)))
	   "impl integration for go-mode" single
	   ((:commit . "69f0d0ef05771487e15abec500cd06befd171abf")
	    (:authors
	     ("Syohei YOSHIDA" . "syohex@gmail.com"))
	    (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	    (:url . "https://github.com/syohex/emacs-go-impl"))])
 (go-mode .
	  [(20200822 1936)
	   nil "Major mode for the Go programming language" single
	   ((:commit . "d17d21060b16a77f9ee28ff453e674225acbf1b1")
	    (:authors
	     ("The go-mode Authors"))
	    (:maintainer "The go-mode Authors")
	    (:keywords "languages" "go")
	    (:url . "https://github.com/dominikh/go-mode.el"))])
 (go-rename .
	    [(20190805 2101)
	     ((go-mode
	       (1 3 1)))
	     "Integration of the 'gorename' tool into Emacs." single
	     ((:commit . "d17d21060b16a77f9ee28ff453e674225acbf1b1")
	      (:keywords "tools"))])
 (go-tag .
	 [(20180227 411)
	  ((emacs
	    (24 0))
	   (go-mode
	    (1 5 0)))
	  "Edit Golang struct field tag" single
	  ((:commit . "59b243f2fa079d9de9d56f6e2d94397e9560310a")
	   (:authors
	    ("Brantou" . "brantou89@gmail.com"))
	   (:maintainer "Brantou" . "brantou89@gmail.com")
	   (:keywords "tools")
	   (:url . "https://github.com/brantou/emacs-go-tag"))])
 (godoctor .
	   [(20180710 2152)
	    nil "Frontend for godoctor" single
	    ((:commit . "4b45ff3d0572f0e84056e4c3ba91fcc178199859")
	     (:authors
	      ("Sangho Na" . "microamp@protonmail.com"))
	     (:maintainer "Sangho Na" . "microamp@protonmail.com")
	     (:keywords "go" "golang" "refactoring")
	     (:url . "https://github.com/microamp/godoctor.el"))])
 (golden-ratio .
	       [(20191028 1732)
		nil "Automatic resizing of Emacs windows to the golden ratio" single
		((:commit . "007911d8a431b72670f5fe5f0e5b4380c2777a31")
		 (:authors
		  ("Roman Gonzalez" . "romanandreg@gmail.com"))
		 (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com")
		 (:keywords "window" "resizing"))])
 (google-c-style .
		 [(20180130 1736)
		  nil "Google's C/C++ style for c-mode" single
		  ((:commit . "96f6a64d30a47b09f4be98d83a3e30d624febf86")
		   (:keywords "c" "tools"))])
 (google-translate .
		   [(20200809 1430)
		    nil "Emacs interface to Google Translate." tar
		    ((:commit . "0270073331de9358f29d049a27aa9145697d6dc7"))])
 (goto-chg .
	   [(20201101 1029)
	    nil "goto last change" single
	    ((:commit . "2af612153bc9f5bed135d25abe62f46ddaa9027f")
	     (:authors
	      ("David Andersson <l.david.andersson(at)sverige.nu>"))
	     (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de")
	     (:keywords "convenience" "matching")
	     (:url . "https://github.com/emacs-evil/goto-chg"))])
 (haml-mode .
	    [(20190219 2102)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "Major mode for editing Haml files" single
	     ((:commit . "bf5b6c11b1206759d2b28af48765e04882dd1fc4")
	      (:authors
	       ("Natalie Weizenbaum"))
	      (:maintainer "Natalie Weizenbaum")
	      (:keywords "markup" "languages" "html")
	      (:url . "https://github.com/nex3/haml-mode"))])
 (helm .
       [(20201019 715)
	((emacs
	  (25 1))
	 (async
	  (1 9 4))
	 (popup
	  (0 5 3))
	 (helm-core
	  (3 6 5)))
	"Helm is an Emacs incremental and narrowing framework" tar
	((:commit . "5ad6c83681fda7bfd5a745fedecaa924630253dd")
	 (:url . "https://emacs-helm.github.io/helm/"))])
 (helm-ag .
	  [(20200915 1650)
	   ((emacs
	     (25 1))
	    (helm
	     (2 0)))
	   "The silver searcher with helm interface" single
	   ((:commit . "db52f860b50aa4d5edfa1c6c97802d36aef7f78b")
	    (:authors
	     ("Syohei YOSHIDA" . "syohex@gmail.com"))
	    (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	    (:url . "https://github.com/syohex/emacs-helm-ag"))])
 (helm-c-yasnippet .
		   [(20200520 1519)
		    ((emacs
		      (25 1))
		     (helm
		      (1 7 7))
		     (yasnippet
		      (0 8 0)))
		    "helm source for yasnippet.el" single
		    ((:commit . "89cc8561e7e57e9d1070ee3641df019c7f49c5dd")
		     (:authors
		      ("Kenji.I (Kenji Imakado)" . "ken.imakaado@gmail.com"))
		     (:maintainer "Kenji.I (Kenji Imakado)" . "ken.imakaado@gmail.com")
		     (:keywords "convenience" "emulation"))])
 (helm-company .
	       [(20190812 1429)
		((helm
		  (1 5 9))
		 (company
		  (0 6 13)))
		"Helm interface for company-mode" single
		((:commit . "6eb5c2d730a60e394e005b47c1db018697094dde")
		 (:authors
		  ("Yasuyuki Oka" . "yasuyk@gmail.com"))
		 (:maintainer "Daniel Ralston" . "Sodel-the-Vociferous@users.noreply.github.com")
		 (:url . "https://github.com/Sodel-the-Vociferous/helm-company"))])
 (helm-core .
	    [(20201019 715)
	     ((emacs
	       (25 1))
	      (async
	       (1 9 4)))
	     "Development files for Helm" tar
	     ((:commit . "5ad6c83681fda7bfd5a745fedecaa924630253dd")
	      (:url . "https://emacs-helm.github.io/helm/"))])
 (helm-css-scss .
		[(20191230 1549)
		 ((emacs
		   (24 3))
		  (helm
		   (1 0)))
		 "CSS/SCSS/LESS Selectors with helm interface" single
		 ((:commit . "48b996f73af1fef8d6e88a1c545d98f8c50b0cf3")
		  (:authors
		   ("Shingo Fukuyama - http://fukuyama.co"))
		  (:maintainer "Shingo Fukuyama - http://fukuyama.co")
		  (:keywords "convenience" "scss" "css" "less" "selector" "helm")
		  (:url . "https://github.com/ShingoFukuyama/helm-css-scss"))])
 (helm-dash .
	    [(20190527 1118)
	     ((emacs
	       (24 4))
	      (dash-docs
	       (1 4 0))
	      (helm
	       (1 9 2))
	      (cl-lib
	       (0 5)))
	     "Offline documentation browser for +150 APIs using Dash docsets." single
	     ((:commit . "7f853bd34da666f0e9a883011c80f451b06f6c59")
	      (:authors
	       ("Raimon Grau" . "raimonster@gmail.com")
	       ("Toni Reina " . "areina0@gmail.com")
	       ("Bryan Gilbert" . "bryan@bryan.sh"))
	      (:maintainer "Raimon Grau" . "raimonster@gmail.com")
	      (:keywords "docs")
	      (:url . "https://github.com/dash-docs-el/helm-dash"))])
 (helm-descbinds .
		 [(20190501 935)
		  ((helm
		    (1 5)))
		  "A convenient `describe-bindings' with `helm'" single
		  ((:commit . "b72515982396b6e336ad7beb6767e95a80fca192")
		   (:authors
		    ("Taiki SUGAWARA" . "buzz.taiki@gmail.com"))
		   (:maintainer "Taiki SUGAWARA" . "buzz.taiki@gmail.com")
		   (:keywords "helm" "help")
		   (:url . "https://github.com/emacs-helm/helm-descbinds"))])
 (helm-dictionary .
		  [(20201006 1511)
		   ((helm
		     (1 5 5)))
		   "Helm source for looking up dictionaries" single
		   ((:commit . "b316a1d55e58645d59a84d33851d46fab3cd54b5")
		    (:authors
		     ("Titus von der Malsburg" . "malsburg@posteo.de")
		     ("Michael Heerdegen" . "michael_heerdegen@web.de"))
		    (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de")
		    (:url . "https://github.com/emacs-helm/helm-dictionary"))])
 (helm-flx .
	   [(20180103 516)
	    ((emacs
	      (24 4))
	     (helm
	      (1 7 9))
	     (flx
	      (0 5)))
	    "Sort helm candidates by flx score" single
	    ((:commit . "6640fac5cb16bee73c95b8ed1248a4e5e113690e")
	     (:authors
	      ("PythonNut" . "pythonnut@pythonnut.com"))
	     (:maintainer "PythonNut" . "pythonnut@pythonnut.com")
	     (:keywords "convenience" "helm" "fuzzy" "flx")
	     (:url . "https://github.com/PythonNut/helm-flx"))])
 (helm-git-grep .
		[(20170614 1411)
		 ((helm-core
		   (2 2 0)))
		 "helm for git grep, an incremental git-grep(1)" single
		 ((:commit . "744cea07dba6e6a5effbdba83f1b786c78fd86d3")
		  (:authors
		   ("mechairoi"))
		  (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com")
		  (:url . "https://github.com/yasuyk/helm-git-grep"))])
 (helm-gitignore .
		 [(20170211 8)
		  ((gitignore-mode
		    (1 1 0))
		   (helm
		    (1 7 0))
		   (request
		    (0 1 0))
		   (cl-lib
		    (0 5)))
		  "Generate .gitignore files with gitignore.io." single
		  ((:commit . "2a2e7da7855a6db0ab3bb6a6a087863d7abd4391")
		   (:authors
		    ("Juan Placencia"))
		   (:maintainer "Juan Placencia")
		   (:keywords "helm" "gitignore" "gitignore.io")
		   (:url . "https://github.com/jupl/helm-gitignore"))])
 (helm-gtags .
	     [(20200602 1610)
	      ((emacs
		(24 4))
	       (helm
		(2 0)))
	      "GNU GLOBAL helm interface" single
	      ((:commit . "a15fe1dd272d252ad933d8129db1dce02fd41adb")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	       (:url . "https://github.com/syohex/emacs-helm-gtags"))])
 (helm-ls-git .
	      [(20200519 912)
	       ((helm
		 (1 7 8)))
	       "list git files." single
	       ((:commit . "4da1a53f2f0a078ee2e896a914a1b19c0bf1d5ed"))])
 (helm-lsp .
	   [(20200910 518)
	    ((emacs
	      (25 1))
	     (dash
	      (2 14 1))
	     (lsp-mode
	      (5 0))
	     (helm
	      (2 0)))
	    "LSP helm integration" single
	    ((:commit . "fc09aa0903ee6abe4955e9a6062dcea667ebff5a")
	     (:authors
	      ("Ivan Yonchovski" . "yyoncho@gmail.com"))
	     (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com")
	     (:keywords "languages" "debug")
	     (:url . "https://github.com/yyoncho/helm-lsp"))])
 (helm-make .
	    [(20200620 27)
	     nil "Select a Makefile target with helm" single
	     ((:commit . "ebd71e85046d59b37f6a96535e01993b6962c559")
	      (:authors
	       ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	      (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	      (:keywords "makefile")
	      (:url . "https://github.com/abo-abo/helm-make"))])
 (helm-mode-manager .
		    [(20151124 938)
		     ((helm
		       (1 5 3)))
		     "Select and toggle major and minor modes with helm" single
		     ((:commit . "5d9c3ca4f8205d07ff4e03c4c3e88f596751c1fc")
		      (:authors
		       ("istib"))
		      (:maintainer "istib")
		      (:url . "https://github.com/istib/helm-mode-manager"))])
 (helm-org .
	   [(20200311 633)
	    ((helm
	      (3 3))
	     (emacs
	      (24 4)))
	    "Helm for org headlines and keywords completion" single
	    ((:commit . "b7a18dfc17e8b933956d61d68c435eee03a96c24")
	     (:authors
	      ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))
	     (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com")
	     (:url . "https://github.com/emacs-helm/helm-org"))])
 (helm-org-rifle .
		 [(20200512 1943)
		  ((emacs
		    (24 4))
		   (dash
		    (2 12))
		   (f
		    (0 18 1))
		   (helm
		    (1 9 4))
		   (s
		    (1 10 0)))
		  "Rifle through your Org files" single
		  ((:commit . "263f56d70112f5d0496684c89a2aa07959e0a95f")
		   (:authors
		    ("Adam Porter" . "adam@alphapapa.net"))
		   (:maintainer "Adam Porter" . "adam@alphapapa.net")
		   (:keywords "hypermedia" "outlines")
		   (:url . "http://github.com/alphapapa/helm-org-rifle"))])
 (helm-projectile .
		  [(20200625 443)
		   ((helm
		     (1 9 9))
		    (projectile
		     (2 2 0))
		    (cl-lib
		     (0 3)))
		   "Helm integration for Projectile" single
		   ((:commit . "2f3a2a03d6cb9419c25b432637aa11c8d2f9f3b7")
		    (:authors
		     ("Bozhidar Batsov"))
		    (:maintainer "Bozhidar Batsov")
		    (:keywords "project" "convenience")
		    (:url . "https://github.com/bbatsov/helm-projectile"))])
 (helm-purpose .
	       [(20170114 1636)
		((emacs
		  (24))
		 (helm
		  (1 9 2))
		 (window-purpose
		  (1 4)))
		"Helm Interface for Purpose" single
		((:commit . "9ff4c21c1e9ebc7afb851b738f815df7343bb287")
		 (:authors
		  ("Bar Magal (2016)"))
		 (:maintainer "Bar Magal (2016)")
		 (:url . "https://github.com/bmag/helm-purpose"))])
 (helm-pydoc .
	     [(20160918 542)
	      ((helm-core
		(2 0))
	       (emacs
		(24 4)))
	      "pydoc with helm interface" tar
	      ((:commit . "85480a29b56dacde425655bc8f5a597c785afdf5")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	       (:url . "https://github.com/syohex/emacs-helm-pydoc"))])
 (helm-rtags .
	     [(20191222 920)
	      ((helm
		(2 0))
	       (rtags
		(2 10)))
	      "A front-end for rtags" single
	      ((:commit . "63a7d9b733def9fe76568f81321a65a450829575")
	       (:authors
		("Jan Erik Hanssen" . "jhanssen@gmail.com")
		("Anders Bakken" . "agbakken@gmail.com"))
	       (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	       (:url . "https://github.com/Andersbakken/rtags"))])
 (helm-swoop .
	     [(20200814 448)
	      ((emacs
		(25 1))
	       (helm
		(3 6)))
	      "Efficiently hopping squeezed lines powered by helm interface" single
	      ((:commit . "1f7d3cf0d742b199e4ce13fcb8b19c977a44611e")
	       (:authors
		("Shingo Fukuyama - http://fukuyama.co"))
	       (:maintainer "Shingo Fukuyama - http://fukuyama.co")
	       (:keywords "convenience" "helm" "swoop" "inner" "buffer" "search")
	       (:url . "https://github.com/emacsorphanage/helm-swoop"))])
 (helm-themes .
	      [(20200323 712)
	       ((helm-core
		 (2 0))
		(emacs
		 (24 4)))
	       "Color theme selection with helm interface" single
	       ((:commit . "244121903650c2d25a233d12b378060cf8b010e7")
		(:authors
		 ("Syohei YOSHIDA" . "syohex@gmail.com"))
		(:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		(:url . "https://github.com/syohex/emacs-helm-themes"))])
 (helm-xref .
	    [(20201004 1817)
	     ((emacs
	       (25 1))
	      (helm
	       (1 9 4)))
	     "Helm interface for xref results" single
	     ((:commit . "23f1174cfca7667d95828dcd388c655a4a9c877d")
	      (:authors
	       ("Fritz Stelzer" . "brotzeitmacher@gmail.com"))
	      (:maintainer "Fritz Stelzer" . "brotzeitmacher@gmail.com")
	      (:url . "https://github.com/brotzeit/helm-xref"))])
 (hierarchy .
	    [(20190425 842)
	     ((emacs
	       (25 1)))
	     "Library to create and display hierarchy structures" single
	     ((:commit . "be2634dc1f08a5e781d02ef301c727246863756f")
	      (:authors
	       ("Damien Cassou" . "damien@cassou.me"))
	      (:maintainer "Damien Cassou" . "damien@cassou.me")
	      (:url . "https://github.com/DamienCassou/hierarchy"))])
 (highlight-indentation .
			[(20181204 839)
			 nil "Minor modes for highlighting indentation" single
			 ((:commit . "d03803f2c06749c430443a3d24e039cbafc9c58f")
			  (:authors
			   ("Anton Johansson" . "anton.johansson@gmail.com"))
			  (:maintainer "Anton Johansson" . "anton.johansson@gmail.com")
			  (:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs"))])
 (highlight-numbers .
		    [(20181013 1744)
		     ((emacs
		       (24))
		      (parent-mode
		       (2 0)))
		     "Highlight numbers in source code" single
		     ((:commit . "8b4744c7f46c72b1d3d599d4fb75ef8183dee307")
		      (:authors
		       ("Fanael Linithien" . "fanael4@gmail.com"))
		      (:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		      (:url . "https://github.com/Fanael/highlight-numbers"))])
 (highlight-parentheses .
			[(20200920 832)
			 ((emacs
			   (24 3))
			  (cl-lib
			   (0 6 1)))
			 "Highlight surrounding parentheses" single
			 ((:commit . "e18f2c2b240d7586ff7ffdc2881079e2dd8944ca")
			  (:authors
			   ("Nikolaj Schumacher <bugs * nschum de>"))
			  (:maintainer "Tassilo Horn" . "tsdh@gnu.org")
			  (:keywords "faces" "matching")
			  (:url . "https://github.com/tsdh/highlight-parentheses.el"))])
 (highlight-thing .
		  [(20181229 1301)
		   nil "Minimalistic minor mode to highlight current thing under point." single
		   ((:commit . "561d08a26f78f18d405d4f371f1c813db094e2f3")
		    (:authors
		     ("Felix Geller" . "fgeller@gmail.com"))
		    (:maintainer "Felix Geller" . "fgeller@gmail.com")
		    (:keywords "highlight" "thing" "symbol")
		    (:url . "https://github.com/fgeller/highlight-thing.el"))])
 (history .
	  [(20160821 1602)
	   ((emacs
	     (24 3)))
	   "History utility for source code navigation" tar
	   ((:commit . "5317663fb45bbd5e96d258cb0807dcc266ce67ff")
	    (:authors
	     ("boyw165"))
	    (:maintainer "boyw165")
	    (:url . "https://github.com/boyw165/history"))])
 (hl-todo .
	  [(20200813 1419)
	   ((emacs
	     (25)))
	   "highlight TODO and similar keywords" single
	   ((:commit . "0598b98f63b623c1778cbd2e2f60b774b7a311b9")
	    (:authors
	     ("Jonas Bernoulli" . "jonas@bernoul.li"))
	    (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	    (:keywords "convenience")
	    (:url . "https://github.com/tarsius/hl-todo"))])
 (ht .
     [(20200217 2331)
      ((dash
	(2 12 0)))
      "The missing hash table library for Emacs" single
      ((:commit . "fff8c43f0e03d5b98deb9f988522b839ce2ca253")
       (:authors
	("Wilfred Hughes" . "me@wilfred.me.uk"))
       (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk")
       (:keywords "hash table" "hash map" "hash"))])
 (htmlize .
	  [(20200816 746)
	   nil "Convert buffer text and decorations to HTML." single
	   ((:commit . "49205105898ba8993b5253beec55d8bddd820a70")
	    (:authors
	     ("Hrvoje Niksic" . "hniksic@gmail.com"))
	    (:maintainer "Hrvoje Niksic" . "hniksic@gmail.com")
	    (:keywords "hypermedia" "extensions")
	    (:url . "https://github.com/hniksic/emacs-htmlize"))])
 (hungry-delete .
		[(20201007 2024)
		 nil "hungry delete minor mode" single
		 ((:commit . "0513152525c38519a5597db2d6495b56dd9cc3f0")
		  (:authors
		   ("Nathaniel Flath" . "flat0103@gmail.com"))
		  (:maintainer "Nathaniel Flath" . "flat0103@gmail.com")
		  (:url . "http://github.com/nflath/hungry-delete"))])
 (hydra .
	[(20200711 1210)
	 ((cl-lib
	   (0 5))
	  (lv
	   (0)))
	 "Make bindings that stick around." tar
	 ((:commit . "112e689f75b59398d8eca79ac6562dca12b8a959")
	  (:authors
	   ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	  (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	  (:keywords "bindings")
	  (:url . "https://github.com/abo-abo/hydra"))])
 (iedit .
	[(20201031 343)
	 nil "Edit multiple regions in the same way simultaneously." tar
	 ((:commit . "d9ebfb810fdf59d673cb92ebdf25b1fcc223e7b1")
	  (:authors
	   ("Victor Ren" . "victorhge@gmail.com"))
	  (:maintainer "Victor Ren" . "victorhge@gmail.com")
	  (:keywords "occurrence" "region" "simultaneous" "refactoring")
	  (:url . "https://github.com/victorhge/iedit"))])
 (imenu-list .
	     [(20190115 2130)
	      ((cl-lib
		(0 5)))
	      "Show imenu entries in a separate buffer" single
	      ((:commit . "46008738f8fef578a763c308cf6695e5b4d4aa77")
	       (:authors
		("Bar Magal (2015)"))
	       (:maintainer "Bar Magal (2015)")
	       (:url . "https://github.com/bmag/imenu-list"))])
 (impatient-mode .
		 [(20200723 2117)
		  ((emacs
		    (24 3))
		   (simple-httpd
		    (1 5 0))
		   (htmlize
		    (1 40)))
		  "Serve buffers live over HTTP" tar
		  ((:commit . "cbddfd54242210df3e1c3b590fada5bb5423f5ed")
		   (:authors
		    ("Brian Taylor" . "el.wubo@gmail.com"))
		   (:maintainer "Brian Taylor" . "el.wubo@gmail.com")
		   (:url . "https://github.com/netguy204/imp.el"))])
 (importmagic .
	      [(20180520 303)
	       ((f
		 (0 11 0))
		(epc
		 (0 1 0))
		(emacs
		 (24 3)))
	       "Fix Python imports using importmagic." tar
	       ((:commit . "701dfcca5f3ab42be0f26a8d381d7116c79be850")
		(:authors
		 ("Nicolás Salas V." . "nikosalas@gmail.com"))
		(:maintainer "Nicolás Salas V." . "nikosalas@gmail.com")
		(:keywords "languages" "convenience")
		(:url . "https://github.com/anachronic/importmagic.el"))])
 (indent-guide .
	       [(20191106 240)
		nil "show vertical lines to guide indentation" single
		((:commit . "7fc710748f9e5a086acfe77970f117df89ee9749")
		 (:authors
		  ("zk_phi"))
		 (:maintainer "zk_phi")
		 (:url . "http://hins11.yu-yake.com/"))])
 (inflections .
	      [(20170913 916)
	       ((cl-lib
		 (0 5))
		(emacs
		 (24)))
	       "convert english words between singular and plural" single
	       ((:commit . "e4f1372cf22e811faca52fc86bdd5d817498a4d8")
		(:authors
		 ("Dmitry Galinsky, Howard Yeh"))
		(:maintainer "Dmitry Galinsky, Howard Yeh")
		(:keywords "languages" "tools" "wp")
		(:url . "https://github.com/eschulte/jump.el"))])
 (insert-shebang .
		 [(20180403 1214)
		  nil "Insert shebang line automatically." single
		  ((:commit . "af5f95ff98e2432837f5aa848ba38dd626e82fce")
		   (:authors
		    ("Sachin Patil" . "iclcoolster@gmail.com"))
		   (:maintainer "Sachin Patil" . "iclcoolster@gmail.com")
		   (:keywords "shebang" "tool" "convenience")
		   (:url . "http://github.com/psachin/insert-shebang"))])
 (ivy .
      [(20200826 955)
       ((emacs
	 (24 5)))
       "Incremental Vertical completYon" tar
       ((:commit . "e58bfc162a2df5b67a820d0311c313d3db522073")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:keywords "matching")
	(:url . "https://github.com/abo-abo/swiper"))])
 (ivy-hydra .
	    [(20200608 1010)
	     ((emacs
	       (24 5))
	      (ivy
	       (0 13 0))
	      (hydra
	       (0 15 0)))
	     "Additional key bindings for Ivy" single
	     ((:commit . "e58bfc162a2df5b67a820d0311c313d3db522073")
	      (:authors
	       ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	      (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	      (:keywords "convenience")
	      (:url . "https://github.com/abo-abo/swiper"))])
 (ivy-purpose .
	      [(20160724 1003)
	       ((emacs
		 (24))
		(ivy
		 (0 8))
		(window-purpose
		 (1 5)))
	       "Ivy Interface for Purpose" single
	       ((:commit . "0495f2f3aed64d7e0028125e76a9a68f8fc4107e")
		(:authors
		 ("Bar Magal (2016)"))
		(:maintainer "Bar Magal (2016)")
		(:url . "https://github.com/bmag/ivy-purpose"))])
 (ivy-rtags .
	    [(20191222 920)
	     ((ivy
	       (0 7 0))
	      (rtags
	       (2 10)))
	     "RTags completion back-end for ivy" single
	     ((:commit . "63a7d9b733def9fe76568f81321a65a450829575")
	      (:authors
	       ("Jan Erik Hanssen" . "jhanssen@gmail.com")
	       ("Anders Bakken" . "agbakken@gmail.com"))
	      (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	      (:url . "https://github.com/Andersbakken/rtags"))])
 (ivy-xref .
	   [(20191126 401)
	    ((emacs
	      (25 1))
	     (ivy
	      (0 10 0)))
	    "Ivy interface for xref results" single
	    ((:commit . "3d4c35fe2b243d948d8fe02a1f0d76a249d63de9")
	     (:authors
	      ("Alex Murray" . "murray.alex@gmail.com"))
	     (:maintainer "Alex Murray" . "murray.alex@gmail.com")
	     (:url . "https://github.com/alexmurray/ivy-xref"))])
 (ivy-yasnippet .
		[(20200704 700)
		 ((emacs
		   (24 1))
		  (cl-lib
		   (0 6))
		  (ivy
		   (0 10 0))
		  (yasnippet
		   (0 12 2))
		  (dash
		   (2 14 1)))
		 "Preview yasnippets with ivy" single
		 ((:commit . "83402d91b4eba5307f71884a72df8e11cc6a994e")
		  (:authors
		   ("Michał Krzywkowski" . "k.michal@zoho.com"))
		  (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com")
		  (:keywords "convenience")
		  (:url . "https://github.com/mkcms/ivy-yasnippet"))])
 (jeison .
	 [(20190721 1651)
	  ((emacs
	    (25 1))
	   (dash
	    (2 16 0)))
	  "A library for declarative JSON parsing" single
	  ((:commit . "66e276c1f2f08ca54d2cd60f2c9f974c662aae8b")
	   (:keywords "lisp" "json" "data-types")
	   (:url . "http://github.com/SavchenkoValeriy/jeison"))])
 (js-doc .
	 [(20160715 434)
	  nil "Insert JsDoc style comment easily" single
	  ((:commit . "f0606e89d5aa89146f96edb38cf69af0068a9d1e")
	   (:authors
	    ("mooz" . "stillpedant@gmail.com"))
	   (:maintainer "mooz" . "stillpedant@gmail.com")
	   (:keywords "document" "comment")
	   (:url . "https://github.com/mooz/js-doc"))])
 (js2-refactor .
	       [(20190630 2108)
		((js2-mode
		  (20101228))
		 (s
		  (1 9 0))
		 (multiple-cursors
		  (1 0 0))
		 (dash
		  (1 0 0))
		 (s
		  (1 0 0))
		 (yasnippet
		  (0 9 0 1)))
		"A JavaScript refactoring library for emacs." tar
		((:commit . "d4c40b5fc86d3edd7c6a7d83ac86483ee1cb7a28"))])
 (json-navigator .
		 [(20191213 755)
		  ((emacs
		    (25 1))
		   (hierarchy
		    (0 6 0)))
		  "View and navigate JSON structures" single
		  ((:commit . "afd902e0b5cde37fad4786515a695d17f1625286")
		   (:authors
		    ("Damien Cassou" . "damien@cassou.me"))
		   (:maintainer "Damien Cassou" . "damien@cassou.me")
		   (:url . "https://github.com/DamienCassou/json-navigator"))])
 (json-reformat .
		[(20160212 853)
		 nil "Reformatting tool for JSON" single
		 ((:commit . "8eb6668ed447988aea06467ba8f42e1f2178246f")
		  (:authors
		   ("Wataru MIYAGUNI" . "gonngo@gmail.com"))
		  (:maintainer "Wataru MIYAGUNI" . "gonngo@gmail.com")
		  (:keywords "json")
		  (:url . "https://github.com/gongo/json-reformat"))])
 (json-snatcher .
		[(20200916 1717)
		 ((emacs
		   (24)))
		 "Grabs the path to JSON values in a JSON file" single
		 ((:commit . "b28d1c0670636da6db508d03872d96ffddbc10f2")
		  (:authors
		   ("Sterling Graham" . "sterlingrgraham@gmail.com"))
		  (:maintainer "Sterling Graham" . "sterlingrgraham@gmail.com")
		  (:url . "http://github.com/sterlingg/json-snatcher"))])
 (key-chord .
	    [(20160227 1238)
	     nil "map pairs of simultaneously pressed keys to commands" single
	     ((:commit . "72443e9ff3c4f1c3ccaced3130236801efde3d83")
	      (:authors
	       ("David Andersson <l.david.andersson(at)sverige.nu>"))
	      (:maintainer "David Andersson <l.david.andersson(at)sverige.nu>")
	      (:keywords "keyboard" "chord" "input"))])
 (keypression .
	      [(20200819 534)
	       ((emacs
		 (26 3)))
	       "Keystroke visualizer" single
	       ((:commit . "9427241f3fa539e4b5ad7581a05eb7e49f2cf518")
		(:authors
		 ("chuntaro" . "chuntaro@sakura-games.jp"))
		(:maintainer "chuntaro" . "chuntaro@sakura-games.jp")
		(:keywords "key" "screencast" "tools")
		(:url . "https://github.com/chuntaro/emacs-keypression"))])
 (launchctl .
	    [(20200531 1043)
	     ((emacs
	       (24 1)))
	     "Interface to launchctl on Mac OS X." single
	     ((:commit . "96886b7e64d15ffd3319c8b4b04310ccdc648576")
	      (:authors
	       ("Peking Duck <github.com/pekingduck>"))
	      (:maintainer "Peking Duck <github.com/pekingduck>")
	      (:keywords "tools" "convenience")
	      (:url . "http://github.com/pekingduck/launchctl-el"))])
 (link-hint .
	    [(20201008 1932)
	     ((avy
	       (0 4 0))
	      (emacs
	       (24 4)))
	     "Use avy to open, copy, etc. visible links" single
	     ((:commit . "1462dfeb908f2e07ee80e745bb9cebe6762374e3")
	      (:authors
	       ("Fox Kiester" . "noct@posteo.net"))
	      (:maintainer "Fox Kiester" . "noct@posteo.net")
	      (:keywords "convenience" "url" "avy" "link" "links" "hyperlink")
	      (:url . "https://github.com/noctuid/link-hint.el"))])
 (linum-relative .
		 [(20180124 1047)
		  nil "display relative line number in emacs." single
		  ((:commit . "c74a6981b688a5e1e6b8e0809363963ff558ce4d")
		   (:authors
		    ("coldnew" . "coldnew.tw@gmail.com"))
		   (:maintainer "coldnew" . "coldnew.tw@gmail.com")
		   (:keywords "converience")
		   (:url . "http://github.com/coldnew/linum-relative"))])
 (lispy .
	[(20201029 1559)
	 ((emacs
	   (24 3))
	  (ace-window
	   (0 9 0))
	  (iedit
	   (0 9 9))
	  (counsel
	   (0 11 0))
	  (hydra
	   (0 14 0))
	  (zoutline
	   (0 1 0)))
	 "vi-like Paredit" tar
	 ((:commit . "41f5574aefb69930d9bdcbe4e0cf642005369765"))])
 (list-utils .
	     [(20200502 1309)
	      nil "List-manipulation utility functions" single
	      ((:commit . "9bb2487c83ec46a0b6e6c4158af69334ac797b82")
	       (:authors
		("Roland Walker" . "walker@pobox.com"))
	       (:maintainer "Roland Walker" . "walker@pobox.com")
	       (:keywords "extensions")
	       (:url . "http://github.com/rolandwalker/list-utils"))])
 (live-py-mode .
	       [(20200709 422)
		((emacs
		  (24 3)))
		"Live Coding in Python" tar
		((:commit . "185da3530e3145b7fea7d15e33a8b581bbe3a111")
		 (:authors
		  ("Don Kirkby http://donkirkby.github.io"))
		 (:maintainer "Don Kirkby http://donkirkby.github.io")
		 (:keywords "live" "coding")
		 (:url . "http://donkirkby.github.io/live-py-plugin/"))])
 (livid-mode .
	     [(20131116 1344)
	      ((skewer-mode
		(1 5 3))
	       (s
		(1 8 0)))
	      "Live browser eval of JavaScript every time a buffer changes" single
	      ((:commit . "dfe5212fa64738bc4138bfebf349fbc8bc237c26")
	       (:authors
		("Murphy McMahon"))
	       (:maintainer "Murphy McMahon")
	       (:url . "https://github.com/pandeiro/livid-mode"))])
 (log4e .
	[(20200420 745)
	 nil "provide logging framework for elisp" single
	 ((:commit . "7df0c1ff4656f8f993b87064b1567618eadb5546")
	  (:authors
	   ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))
	  (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com")
	  (:keywords "log")
	  (:url . "https://github.com/aki2o/log4e"))])
 (logito .
	 [(20120225 2055)
	  ((eieio
	    (1 3)))
	  "logging library for Emacs" single
	  ((:commit . "824acb89d2cc18cb47281a4fbddd81ad244a2052")
	   (:authors
	    ("Yann Hodique" . "yann.hodique@gmail.com"))
	   (:maintainer "Yann Hodique" . "yann.hodique@gmail.com")
	   (:keywords "lisp" "tool"))])
 (lorem-ipsum .
	      [(20190819 2042)
	       nil "Insert dummy pseudo Latin text." single
	       ((:commit . "da75c155da327c7a7aedb80f5cfe409984787049")
		(:authors
		 ("Jean-Philippe Theberge" . "jphil21@sourceforge.net"))
		(:maintainer "Joe Schafer" . "joe@jschaf.com")
		(:keywords "tools" "language" "convenience"))])
 (lsp-ivy .
	  [(20200701 2043)
	   ((emacs
	     (25 1))
	    (dash
	     (2 14 1))
	    (lsp-mode
	     (6 2 1))
	    (ivy
	     (0 13 0)))
	   "LSP ivy integration" single
	   ((:commit . "20cac6296e5038b7131ee6f34a96635f1d30fe3c")
	    (:keywords "languages" "debug")
	    (:url . "https://github.com/emacs-lsp/lsp-ivy"))])
 (lsp-mode .
	   [(20201031 1501)
	    ((emacs
	      (26 1))
	     (dash
	      (2 14 1))
	     (dash-functional
	      (2 14 1))
	     (f
	      (0 20 0))
	     (ht
	      (2 0))
	     (spinner
	      (1 7 3))
	     (markdown-mode
	      (2 3))
	     (lv
	      (0)))
	    "LSP mode" tar
	    ((:commit . "f306b1a782eb07c773bdc8b5f39cb273f6acda36")
	     (:authors
	      ("Vibhav Pant, Fangrui Song, Ivan Yonchovski"))
	     (:maintainer "Vibhav Pant, Fangrui Song, Ivan Yonchovski")
	     (:keywords "languages")
	     (:url . "https://github.com/emacs-lsp/lsp-mode"))])
 (lsp-origami .
	      [(20200914 1846)
	       ((origami
		 (1 0))
		(lsp-mode
		 (6 1)))
	       "origami.el support for lsp-mode" single
	       ((:commit . "aa309589668d32a8b4bb23c8f41163f6ae208f7b")
		(:authors
		 ("Vibhav Pant"))
		(:maintainer "Vibhav Pant")
		(:keywords "languages" "lsp-mode")
		(:url . "https://github.com/emacs-lsp/lsp-origami"))])
 (lsp-pyright .
	      [(20201014 1620)
	       ((emacs
		 (26 1))
		(lsp-mode
		 (7 0))
		(dash
		 (2 14 1))
		(ht
		 (2 0)))
	       "Python LSP client using Pyright" single
	       ((:commit . "d9e7d3cf1bdc8ee0395c8df4408b05ee3ba9c22a")
		(:authors
		 ("Arif Rezai, Vincent Zhang, Andrew Christianson"))
		(:maintainer "Arif Rezai, Vincent Zhang, Andrew Christianson")
		(:keywords "languages" "tools" "lsp")
		(:url . "https://github.com/emacs-lsp/lsp-pyright"))])
 (lsp-python-ms .
		[(20201023 1750)
		 ((emacs
		   (25 1))
		  (lsp-mode
		   (6 1)))
		 "The lsp-mode client for Microsoft python-language-server" single
		 ((:commit . "c4ebc7a11398733055a1dc07f9cffacd04d1c2dc")
		  (:authors
		   ("Charl Botha"))
		  (:maintainer "Andrew Christianson, Vincent Zhang")
		  (:keywords "languages" "tools")
		  (:url . "https://github.com/emacs-lsp/lsp-python-ms"))])
 (lsp-treemacs .
	       [(20201025 950)
		((emacs
		  (26 1))
		 (dash
		  (2 14 1))
		 (dash-functional
		  (2 14 1))
		 (f
		  (0 20 0))
		 (ht
		  (2 0))
		 (treemacs
		  (2 5))
		 (lsp-mode
		  (6 0)))
		"LSP treemacs" tar
		((:commit . "4e6a96f2dbe22d2aabb096ebdfbcb2c33f05ba7a")
		 (:authors
		  ("Ivan Yonchovski"))
		 (:maintainer "Ivan Yonchovski")
		 (:keywords "languages")
		 (:url . "https://github.com/emacs-lsp/lsp-treemacs"))])
 (lsp-ui .
	 [(20201024 2307)
	  ((emacs
	    (26 1))
	   (dash
	    (2 14))
	   (dash-functional
	    (1 2 0))
	   (lsp-mode
	    (6 0))
	   (markdown-mode
	    (2 3)))
	  "UI modules for lsp-mode" tar
	  ((:commit . "b1693d610c4d2c44305eba2719e8d4097fdcdcb8")
	   (:authors
	    ("Sebastien Chapuis <sebastien@chapu.is>, Fangrui Song" . "i@maskray.me"))
	   (:maintainer "Sebastien Chapuis <sebastien@chapu.is>, Fangrui Song" . "i@maskray.me")
	   (:keywords "languages" "tools")
	   (:url . "https://github.com/emacs-lsp/lsp-ui"))])
 (lv .
     [(20200507 1518)
      nil "Other echo area" single
      ((:commit . "112e689f75b59398d8eca79ac6562dca12b8a959")
       (:authors
	("Oleh Krehel"))
       (:maintainer "Oleh Krehel"))])
 (macrostep .
	    [(20161120 2106)
	     ((cl-lib
	       (0 5)))
	     "interactive macro expander" tar
	     ((:commit . "424e3734a1ee526a1bd7b5c3cd1d3ef19d184267")
	      (:authors
	       ("joddie" . "j.j.oddie@gmail.com"))
	      (:maintainer "joddie" . "j.j.oddie@gmail.com")
	      (:keywords "lisp" "languages" "macro" "debugging")
	      (:url . "https://github.com/joddie/macrostep"))])
 (magit .
	[(20201102 1457)
	 ((emacs
	   (25 1))
	  (async
	   (20200113))
	  (dash
	   (20200524))
	  (git-commit
	   (20200516))
	  (transient
	   (20200601))
	  (with-editor
	   (20200522)))
	 "A Git porcelain inside Emacs." tar
	 ((:commit . "ff8a616cd4e57b41e161d126232e92533669453a")
	  (:keywords "git" "tools" "vc"))])
 (magit-gitflow .
		[(20170929 824)
		 ((magit
		   (2 1 0))
		  (magit-popup
		   (2 2 0)))
		 "gitflow extension for magit" single
		 ((:commit . "cc41b561ec6eea947fe9a176349fb4f771ed865b")
		  (:authors
		   ("Jan Tatarik" . "Jan.Tatarik@gmail.com"))
		  (:maintainer "Jan Tatarik" . "Jan.Tatarik@gmail.com")
		  (:keywords "vc" "tools")
		  (:url . "https://github.com/jtatarik/magit-gitflow"))])
 (magit-popup .
	      [(20200719 1015)
	       ((emacs
		 (24 4))
		(dash
		 (2 13 0)))
	       "Define prefix-infix-suffix command combos" tar
	       ((:commit . "d8585fa39f88956963d877b921322530257ba9f5")
		(:authors
		 ("Jonas Bernoulli" . "jonas@bernoul.li"))
		(:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		(:keywords "bindings")
		(:url . "https://github.com/magit/magit-popup"))])
 (magit-section .
		[(20201022 1623)
		 ((emacs
		   (25 1))
		  (dash
		   (20200524)))
		 "Sections for read-only buffers" tar
		 ((:commit . "ff8a616cd4e57b41e161d126232e92533669453a")
		  (:authors
		   ("Jonas Bernoulli" . "jonas@bernoul.li"))
		  (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		  (:keywords "tools")
		  (:url . "https://github.com/magit/magit"))])
 (magit-svn .
	    [(20190821 1455)
	     ((emacs
	       (24 4))
	      (magit
	       (2 1 0)))
	     "Git-Svn extension for Magit" single
	     ((:commit . "2cff1a30a30f2b3963342a7d185ec13fc12279c3")
	      (:authors
	       ("Phil Jackson" . "phil@shellarchive.co.uk"))
	      (:maintainer "Phil Jackson" . "phil@shellarchive.co.uk")
	      (:keywords "vc" "tools"))])
 (major-mode-hydra .
		   [(20191030 2354)
		    ((dash
		      (2 15 0))
		     (pretty-hydra
		      (0 2 2))
		     (emacs
		      (25)))
		    "Major mode keybindings managed by Hydra" single
		    ((:commit . "20362323f66883c1336ffe70be24f91509addf54")
		     (:authors
		      ("Jerry Peng" . "pr2jerry@gmail.com"))
		     (:maintainer "Jerry Peng" . "pr2jerry@gmail.com")
		     (:url . "https://github.com/jerrypnz/major-mode-hydra.el"))])
 (manage-minor-mode .
		    [(20200123 1406)
		     ((emacs
		       (24 3)))
		     "Manage your minor-modes easily" single
		     ((:commit . "0dfab46a728a21c91658ffcb14101b182cf1b403")
		      (:authors
		       ("Shingo Fukuyama - http://fukuyama.co"))
		      (:maintainer "Shingo Fukuyama - http://fukuyama.co")
		      (:keywords "tools" "minor-mode" "manage" "emacs")
		      (:url . "https://github.com/ShingoFukuyama/manage-minor-mode"))])
 (markdown-mode .
		[(20201015 1327)
		 ((emacs
		   (25 1)))
		 "Major mode for Markdown-formatted text" single
		 ((:commit . "cf6403186119cd3d25adc702845f969071060e20")
		  (:authors
		   ("Jason R. Blevins" . "jblevins@xbeta.org"))
		  (:maintainer "Jason R. Blevins" . "jblevins@xbeta.org")
		  (:keywords "markdown" "github flavored markdown" "itex")
		  (:url . "https://jblevins.org/projects/markdown-mode/"))])
 (markdown-toc .
	       [(20200517 1233)
		((s
		  (1 9 0))
		 (dash
		  (2 11 0))
		 (markdown-mode
		  (2 1)))
		"A simple TOC generator for markdown file" tar
		((:commit . "9565eeaa1d26bc0ab83eb65bd30470888f724044"))])
 (marshal .
	  [(20180124 1239)
	   ((eieio
	     (1 4))
	    (json
	     (1 3))
	    (ht
	     (2 1)))
	   "eieio extension for automatic (un)marshalling" single
	   ((:commit . "f038689cbd5b3680b80b44edd0c7a63ca3038e26")
	    (:authors
	     ("Yann Hodique" . "hodiquey@vmware.com"))
	    (:maintainer "Yann Hodique" . "hodiquey@vmware.com")
	    (:keywords "eieio")
	    (:url . "https://github.com/sigma/marshal.el"))])
 (memoize .
	  [(20200103 2036)
	   nil "Memoization functions" single
	   ((:commit . "51b075935ca7070f62fae1d69fe0ff7d8fa56fdd")
	    (:authors
	     ("Christopher Wellons" . "mosquitopsu@gmail.com"))
	    (:maintainer "Christopher Wellons" . "mosquitopsu@gmail.com")
	    (:url . "https://github.com/skeeto/emacs-memoize"))])
 (modus-operandi-theme .
		       [(20201101 1219)
			((emacs
			  (26 1)))
			"Accessible light theme (WCAG AAA)" tar
			((:commit . "de1e2559b329edf03d3c8c9f3f150653246a602c")
			 (:authors
			  ("Protesilaos Stavrou" . "info@protesilaos.com"))
			 (:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
			 (:keywords "faces" "theme" "accessibility")
			 (:url . "https://gitlab.com/protesilaos/modus-themes"))])
 (modus-vivendi-theme .
		      [(20201101 1219)
		       ((emacs
			 (26 1)))
		       "Accessible dark theme (WCAG AAA)" tar
		       ((:commit . "de1e2559b329edf03d3c8c9f3f150653246a602c")
			(:authors
			 ("Protesilaos Stavrou" . "info@protesilaos.com"))
			(:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
			(:keywords "faces" "theme" "accessibility")
			(:url . "https://gitlab.com/protesilaos/modus-themes"))])
 (move-text .
	    [(20170909 330)
	     nil "Move current line or region with M-up or M-down." single
	     ((:commit . "bfc255110ad05732a43cf25d6a0e3b4a6710b58c")
	      (:authors
	       ("Jason Milkins" . "jasonm23@gmail.com"))
	      (:maintainer "Jason Milkins" . "jasonm23@gmail.com")
	      (:keywords "edit")
	      (:url . "https://github.com/emacsfodder/move-text"))])
 (multi-term .
	     [(20200514 428)
	      nil "Managing multiple terminal buffers in Emacs." single
	      ((:commit . "017c77c550115936860e2ea71b88e585371475d5")
	       (:authors
		("Andy Stewart" . "lazycat.manatee@gmail.com"))
	       (:maintainer "Andy Stewart" . "lazycat.manatee@gmail.com")
	       (:keywords "term" "terminal" "multiple buffer")
	       (:url . "http://www.emacswiki.org/emacs/download/multi-term.el"))])
 (multiple-cursors .
		   [(20201018 538)
		    ((cl-lib
		      (0 5)))
		    "Multiple cursors for Emacs." tar
		    ((:commit . "83abb0533a9d9635bc86d6d52a4e7641b0eaaf63"))])
 (nameless .
	   [(20190429 1202)
	    ((emacs
	      (24 4)))
	    "Hide package namespace in your emacs-lisp code" single
	    ((:commit . "a3a1ce3ec0c5724bcbfe553d831bd4f6b3fe863a")
	     (:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	     (:keywords "convenience" "lisp")
	     (:url . "https://github.com/Malabarba/nameless"))])
 (navi-mode .
	    [(20190720 2003)
	     ((outshine
	       (2 0))
	      (outorg
	       (2 0)))
	     "major-mode for easy buffer-navigation" single
	     ((:commit . "7eb7cf0c4a6ee537ec462f5ec90f00d12e3ca9c2")
	      (:maintainer "Adam Porter" . "adam@alphapapa.net")
	      (:url . "https://github.com/alphapapa/navi"))])
 (nodejs-repl .
	      [(20200802 1310)
	       nil "Run Node.js REPL" single
	       ((:commit . "3b841055cad00f442e4a9159b1056f59411b6646")
		(:authors
		 ("Takeshi Arabiki"))
		(:maintainer "Takeshi Arabiki"))])
 (noflet .
	 [(20141102 1454)
	  nil "locally override functions" single
	  ((:commit . "7ae84dc3257637af7334101456dafe1759c6b68a")
	   (:authors
	    ("Nic Ferrier" . "nferrier@ferrier.me.uk"))
	   (:maintainer "Nic Ferrier" . "nferrier@ferrier.me.uk")
	   (:keywords "lisp")
	   (:url . "https://github.com/nicferrier/emacs-noflet"))])
 (ob-elixir .
	    [(20170725 1419)
	     ((org
	       (8)))
	     "org-babel functions for elixir evaluation" single
	     ((:commit . "8990a8178b2f7bd93504a9ab136622aab6e82e32")
	      (:authors
	       ("ZHOU Feng" . "zf.pascal@gmail.com"))
	      (:maintainer "ZHOU Feng" . "zf.pascal@gmail.com")
	      (:keywords "org" "babel" "elixir")
	      (:url . "http://github.com/zweifisch/ob-elixir"))])
 (open-junk-file .
		 [(20161210 1114)
		  nil "Open a junk (memo) file to try-and-error" single
		  ((:commit . "558bec7372b0fed4c4cb6074ab906535fae615bd")
		   (:authors
		    ("rubikitch" . "rubikitch@ruby-lang.org"))
		   (:maintainer "rubikitch" . "rubikitch@ruby-lang.org")
		   (:keywords "convenience" "tools")
		   (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/open-junk-file.el"))])
 (org-brain .
	    [(20200930 2103)
	     ((emacs
	       (25 1))
	      (org
	       (9 2)))
	     "Org-mode concept mapping" single
	     ((:commit . "e703ae0f3fbdf488bf7442276a90fcb52e11cde7")
	      (:authors
	       ("Erik Sjöstrand" . "sjostrand.erik@gmail.com"))
	      (:maintainer "Erik Sjöstrand" . "sjostrand.erik@gmail.com")
	      (:keywords "outlines" "hypermedia")
	      (:url . "http://github.com/Kungsgeten/org-brain"))])
 (org-bullets .
	      [(20200317 1740)
	       nil "Show bullets in org-mode as UTF-8 characters" single
	       ((:commit . "767f55feb58b840a5a04eabfc3fbbf0d257c4792")
		(:authors
		 ("sabof"))
		(:maintainer "D. Williams" . "d.williams@posteo.net")
		(:url . "https://github.com/integral-dw/org-bullets"))])
 (org-category-capture .
		       [(20200329 313)
			((org
			  (9 0 0))
			 (emacs
			  (24)))
			"Contextualy capture of org-mode TODOs." single
			((:commit . "96a57a43555e24e5e0d81e79f0fbb47001c41bac")
			 (:authors
			  ("Ivan Malison" . "IvanMalison@gmail.com"))
			 (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
			 (:keywords "org-mode" "todo" "tools" "outlines")
			 (:url . "https://github.com/IvanMalison/org-projectile"))])
 (org-cliplink .
	       [(20190608 2134)
		((emacs
		  (24 4)))
		"insert org-mode links from the clipboard" tar
		((:commit . "82402cae7e118d67de7328417fd018a18f95fac2")
		 (:authors
		  ("Alexey Kutepov" . "reximkut@gmail.com"))
		 (:maintainer "Alexey Kutepov" . "reximkut@gmail.com")
		 (:url . "http://github.com/rexim/org-cliplink"))])
 (org-download .
	       [(20200914 1558)
		((emacs
		  (24 3))
		 (async
		  (1 2)))
		"Image drag-and-drop for Org-mode." single
		((:commit . "42ac361ef5502017e6fc1bceb00333eba90402f4")
		 (:authors
		  ("Oleh Krehel"))
		 (:maintainer "Oleh Krehel")
		 (:keywords "multimedia" "images" "screenshots" "download")
		 (:url . "https://github.com/abo-abo/org-download"))])
 (org-jira .
	   [(20200928 1715)
	    ((emacs
	      (24 5))
	     (cl-lib
	      (0 5))
	     (request
	      (0 2 0))
	     (dash
	      (2 14 1)))
	    "Syncing between Jira and Org-mode." tar
	    ((:commit . "f5c3f76f6e67ebee4bc1494fd32cc3e9034ae582")
	     (:maintainer "Matthew Carter" . "m@ahungry.com")
	     (:keywords "ahungry" "jira" "org" "bug" "tracker")
	     (:url . "https://github.com/ahungry/org-jira"))])
 (org-mime .
	   [(20201101 2330)
	    ((emacs
	      (25 1))
	     (cl-lib
	      (0 5)))
	    "org html export for text/html MIME emails" single
	    ((:commit . "744f5f33150e9dcbf9c54ed3ff87fe1b92bf92ee")
	     (:authors
	      ("Eric Schulte"))
	     (:maintainer "Chen Bin (redguardtoo)")
	     (:keywords "mime" "mail" "email" "html")
	     (:url . "http://github.com/org-mime/org-mime"))])
 (org-pomodoro .
	       [(20190530 1445)
		((alert
		  (0 5 10))
		 (cl-lib
		  (0 5)))
		"Pomodoro implementation for org-mode." tar
		((:commit . "aa07c11318f91219336197e62c47bc7a3d090479")
		 (:authors
		  ("Arthur Leonard Andersen" . "leoc.git@gmail.com"))
		 (:maintainer "Arthur Leonard Andersen" . "leoc.git@gmail.com")
		 (:url . "https://github.com/lolownia/org-pomodoro"))])
 (org-present .
	      [(20200204 1647)
	       ((org
		 (7)))
	       "Minimalist presentation minor-mode for Emacs org-mode." single
	       ((:commit . "9709ca2d04a59959354222ac4d3f8b750785739a")
		(:authors
		 ("Ric Lister"))
		(:maintainer "Ric Lister")
		(:url . "https://github.com/rlister/org-present"))])
 (org-projectile .
		 [(20190130 1439)
		  ((projectile
		    (0 11 0))
		   (dash
		    (2 10 0))
		   (emacs
		    (24))
		   (s
		    (1 9 0))
		   (org-category-capture
		    (0 0 0)))
		  "Repository todo management for org-mode" single
		  ((:commit . "96a57a43555e24e5e0d81e79f0fbb47001c41bac")
		   (:authors
		    ("Ivan Malison" . "IvanMalison@gmail.com"))
		   (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
		   (:keywords "org-mode" "projectile" "todo" "tools" "outlines")
		   (:url . "https://github.com/IvanMalison/org-projectile"))])
 (org-ql .
	 [(20200713 309)
	  ((emacs
	    (26 1))
	   (dash
	    (2 13))
	   (dash-functional
	    (1 2 0))
	   (f
	    (0 17 2))
	   (map
	    (2 1))
	   (org
	    (9 0))
	   (org-super-agenda
	    (1 2 -1))
	   (ov
	    (1 0 6))
	   (peg
	    (0 6))
	   (s
	    (1 12 0))
	   (transient
	    (0 1))
	   (ts
	    (0 2 -1)))
	  "Org Query Language, search command, and agenda-like view" tar
	  ((:commit . "65cc3fc24e10c10e2b667b3a3a629317bae410c3")
	   (:authors
	    ("Adam Porter" . "adam@alphapapa.net"))
	   (:maintainer "Adam Porter" . "adam@alphapapa.net")
	   (:keywords "hypermedia" "outlines" "org" "agenda")
	   (:url . "https://github.com/alphapapa/org-ql"))])
 (org-re-reveal .
		[(20201018 1457)
		 ((emacs
		   (24 4))
		  (org
		   (8 3))
		  (htmlize
		   (1 34)))
		 "Org export to reveal.js presentations" tar
		 ((:commit . "2035217ae9f9dbd20bf054daa8dabf7c6aa3938d")
		  (:keywords "tools" "outlines" "hypermedia" "slideshow" "presentation" "oer")
		  (:url . "https://gitlab.com/oer/org-re-reveal"))])
 (org-rich-yank .
		[(20181120 1354)
		 ((emacs
		   (24 4)))
		 "paste with org-mode markup and link to source" single
		 ((:commit . "d2f350c5296cf05d6c84b02762ba44f09a02b4e3")
		  (:authors
		   ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))
		  (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org")
		  (:keywords "convenience" "hypermedia" "org")
		  (:url . "https://github.com/unhammer/org-rich-yank"))])
 (org-roam .
	   [(20201030 623)
	    ((emacs
	      (26 1))
	     (dash
	      (2 13))
	     (f
	      (0 17 2))
	     (s
	      (1 12 0))
	     (org
	      (9 3))
	     (emacsql
	      (3 0 0))
	     (emacsql-sqlite3
	      (1 0 2)))
	    "Roam Research replica with Org-mode" tar
	    ((:commit . "56c47fbff81922fae3a41d15a43faa3eefe30e45")
	     (:authors
	      ("Jethro Kuan" . "jethrokuan95@gmail.com"))
	     (:maintainer "Jethro Kuan" . "jethrokuan95@gmail.com")
	     (:keywords "org-mode" "roam" "convenience")
	     (:url . "https://github.com/org-roam/org-roam"))])
 (org-super-agenda .
		   [(20200310 1337)
		    ((emacs
		      (26 1))
		     (s
		      (1 10 0))
		     (dash
		      (2 13))
		     (org
		      (9 0))
		     (ht
		      (2 2))
		     (ts
		      (0 2)))
		    "Supercharge your agenda" tar
		    ((:commit . "3264255989021b8563ea42b5d26acbc2a024f14d")
		     (:authors
		      ("Adam Porter" . "adam@alphapapa.net"))
		     (:maintainer "Adam Porter" . "adam@alphapapa.net")
		     (:keywords "hypermedia" "outlines" "org" "agenda")
		     (:url . "http://github.com/alphapapa/org-super-agenda"))])
 (org-superstar .
		[(20200818 2257)
		 ((org
		   (9 1 9))
		  (emacs
		   (26 1)))
		 "Prettify headings and plain lists in Org mode" single
		 ((:commit . "7f83636db215bf5a10edbfdf11d12a132864a914")
		  (:authors
		   ("D. Williams" . "d.williams@posteo.net"))
		  (:maintainer "D. Williams" . "d.williams@posteo.net")
		  (:keywords "faces" "outlines")
		  (:url . "https://github.com/integral-dw/org-superstar-mode"))])
 (orgit .
	[(20200714 1943)
	 ((emacs
	   (25 1))
	  (magit
	   (2 90 1))
	  (org
	   (9 3)))
	 "support for Org links to Magit buffers" single
	 ((:commit . "ac9b1a42863a864fde9d225890ef5464bffdc646")
	  (:authors
	   ("Jonas Bernoulli" . "jonas@bernoul.li"))
	  (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	  (:url . "https://github.com/magit/orgit"))])
 (origami .
	  [(20200331 1019)
	   ((s
	     (1 9 0))
	    (dash
	     (2 5 0))
	    (emacs
	     (24))
	    (cl-lib
	     (0 5)))
	   "Flexible text folding" tar
	   ((:commit . "e558710a975e8511b9386edc81cd6bdd0a5bda74")
	    (:authors
	     ("Greg Sexton" . "gregsexton@gmail.com"))
	    (:maintainer "Greg Sexton" . "gregsexton@gmail.com")
	    (:keywords "folding")
	    (:url . "https://github.com/gregsexton/origami.el"))])
 (outorg .
	 [(20190720 2002)
	  ((emacs
	    (24 4)))
	  "Org-style comment editing" single
	  ((:commit . "ef0f86f4b893b30be8bcf8b43a5ec357a6c70f07")
	   (:maintainer "Adam Porter" . "adam@alphapapa.net")
	   (:url . "https://github.com/alphapapa/outorg"))])
 (outshine .
	   [(20191112 1414)
	    ((outorg
	      (2 0))
	     (cl-lib
	      (0 5)))
	    "outline with outshine outshines outline" tar
	    ((:commit . "9334b555aaf1426a9e405a57b80809a1615627b3")
	     (:authors
	      ("Thorsten Jolitz"))
	     (:maintainer "Thibault Polge" . "thibault@thb.lt")
	     (:keywords "convenience" "outlines" "org")
	     (:url . "https://github.com/alphapapa/outshine"))])
 (ov .
     [(20200326 1042)
      ((emacs
	(24 3)))
      "Overlay library for Emacs Lisp" single
      ((:commit . "c5b9aa4e1b00d702eb2caedd61c69a22a5fa1fab")
       (:authors
	("Shingo Fukuyama - http://fukuyama.co"))
       (:maintainer "Shingo Fukuyama - http://fukuyama.co")
       (:keywords "convenience" "overlay")
       (:url . "https://github.com/ShingoFukuyama/ov.el"))])
 (overseer .
	   [(20180226 619)
	    ((emacs
	      (24))
	     (dash
	      (2 10 0))
	     (pkg-info
	      (0 4))
	     (f
	      (0 18 1)))
	    "Ert-runner Integration Into Emacs" single
	    ((:commit . "02d49f582e80e36b4334c9187801c5ecfb027789")
	     (:authors
	      ("Samuel Tonini" . "tonini.samuel@gmail.com"))
	     (:maintainer "Samuel Tonini" . "tonini.samuel@gmail.com")
	     (:url . "http://www.github.com/tonini/overseer.el"))])
 (ox-gfm .
	 [(20161114 1408)
	  nil "Github Flavored Markdown Back-End for Org Export Engine" single
	  ((:commit . "352ab00a5e06d042700bf7955f9ace48c503c1c8")
	   (:authors
	    ("Lars Tveito"))
	   (:maintainer "Lars Tveito")
	   (:keywords "org" "wp" "markdown" "github"))])
 (ox-jira .
	  [(20200920 1119)
	   ((org
	     (8 3)))
	   "JIRA Backend for Org Export Engine" single
	   ((:commit . "64d364cf08109e6877b74c0aa2c4ef690fe9501b")
	    (:authors
	     ("Stig Brautaset" . "stig@brautaset.org"))
	    (:maintainer "Stig Brautaset" . "stig@brautaset.org")
	    (:keywords "outlines" "hypermedia" "wp")
	    (:url . "https://github.com/stig/ox-jira.el"))])
 (ox-reveal .
	    [(20201025 952)
	     ((org
	       (8 3)))
	     "reveal.js Presentation Back-End for Org Export Engine" single
	     ((:commit . "6542658d67965a24c0641845ca7cc0759c4a1fd2")
	      (:authors
	       ("Yujie Wen <yjwen.ty at gmail dot com>"))
	      (:maintainer "Yujie Wen <yjwen.ty at gmail dot com>")
	      (:keywords "outlines" "hypermedia" "slideshow" "presentation"))])
 (p4 .
     [(20150721 1937)
      nil "Simple Perforce-Emacs Integration" single
      ((:commit . "eff047caa75dbe4965defca9d1212454cdb755d5")
       (:authors
	("Gareth Rees" . "gdr@garethrees.org"))
       (:maintainer "Gareth Rees" . "gdr@garethrees.org")
       (:url . "https://github.com/gareth-rees/p4.el"))])
 (package-build .
		[(20201102 1954)
		 ((cl-lib
		   (0 5))
		  (emacs
		   (25 1)))
		 "Tools for assembling a package archive" tar
		 ((:commit . "3242f009e390083d782f283b6451888947db3967")
		  (:authors
		   ("Donald Ephraim Curtis" . "dcurtis@milkbox.net"))
		  (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net")
		  (:keywords "tools")
		  (:url . "https://github.com/melpa/package-build"))])
 (package-lint .
	       [(20200906 512)
		((cl-lib
		  (0 5))
		 (emacs
		  (24 1))
		 (let-alist
		     (1 0 6)))
		"A linting library for elisp package authors" tar
		((:commit . "05596996286089acc7693b700c7c31780439e39f")
		 (:authors
		  ("Steve Purcell" . "steve@sanityinc.com")
		  ("Fanael Linithien" . "fanael4@gmail.com"))
		 (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		 (:keywords "lisp")
		 (:url . "https://github.com/purcell/package-lint"))])
 (packed .
	 [(20201024 954)
	  ((emacs
	    (24 3)))
	  "package manager agnostic Emacs Lisp package utilities" single
	  ((:commit . "394efe60bc7ba4f45f355d820b26bfe5494b01f8")
	   (:authors
	    ("Jonas Bernoulli" . "jonas@bernoul.li"))
	   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	   (:keywords "compile" "convenience" "lisp" "package" "library")
	   (:url . "https://github.com/emacscollective/packed"))])
 (paradox .
	  [(20191011 1111)
	   ((emacs
	     (24 4))
	    (seq
	     (1 7))
	    (let-alist
		(1 0 3))
	    (spinner
	     (1 7 3))
	    (hydra
	     (0 13 2)))
	   "A modern Packages Menu. Colored, with package ratings, and customizable." tar
	   ((:commit . "339fe3518d1d102b2295670340e75caf4f01a29a")
	    (:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:keywords "package" "packages")
	    (:url . "https://github.com/Malabarba/paradox"))])
 (paredit .
	  [(20191121 2328)
	   nil "minor mode for editing parentheses" single
	   ((:commit . "8330a41e8188fe18d3fa805bb9aa529f015318e8")
	    (:authors
	     ("Taylor R. Campbell" . "campbell+paredit@mumble.net"))
	    (:maintainer "Taylor R. Campbell" . "campbell+paredit@mumble.net")
	    (:keywords "lisp"))])
 (parent-mode .
	      [(20150824 2300)
	       nil "get major mode's parent modes" single
	       ((:commit . "db692cf08deff2f0e973e6e86e26662b44813d1b")
		(:authors
		 ("Fanael Linithien" . "fanael4@gmail.com"))
		(:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		(:url . "https://github.com/Fanael/parent-mode"))])
 (parseclj .
	   [(20201012 712)
	    ((emacs
	      (25))
	     (a
	      (0 1 0 -3 4)))
	    "Clojure/EDN parser" tar
	    ((:commit . "eff941126859bc9e949eae5cd6c2592e731629f2")
	     (:authors
	      ("Arne Brasseur" . "arne@arnebrasseur.net"))
	     (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net")
	     (:keywords "lisp" "clojure" "edn" "parser"))])
 (parseedn .
	   [(20200419 1124)
	    ((emacs
	      (25))
	     (a
	      (0 1 0 -3 4))
	     (parseclj
	      (0 1 0)))
	    "Clojure/EDN parser" single
	    ((:commit . "90cfe3df51b96f85e346f336c0a0ee6bf7fee508")
	     (:authors
	      ("Arne Brasseur" . "arne@arnebrasseur.net"))
	     (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net")
	     (:keywords "lisp" "clojure" "edn" "parser"))])
 (password-generator .
		     [(20150222 2040)
		      nil "Password generator for humans. Good, Bad, Phonetic passwords included." single
		      ((:commit . "904cdb591a04305ba882ce19e1d117f5fa60f7d3")
		       (:authors
			("Zargener" . "zargener@gmail.com"))
		       (:maintainer "Zargener" . "zargener@gmail.com")
		       (:url . "http://github.com/zargener/emacs-password-genarator"))])
 (password-store .
		 [(20200328 1214)
		  ((emacs
		    (25))
		   (s
		    (1 9 0))
		   (with-editor
		    (2 5 11))
		   (auth-source-pass
		    (5 0 0)))
		  "Password store (pass) support" single
		  ((:commit . "f152064da9832d6d3d2b4e75f43f63bf2d50716f")
		   (:authors
		    ("Svend Sorensen" . "svend@svends.net"))
		   (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
		   (:keywords "tools" "pass" "password" "password-store")
		   (:url . "https://www.passwordstore.org/"))])
 (pcache .
	 [(20170105 2214)
	  ((eieio
	    (1 3)))
	  "persistent caching for Emacs." single
	  ((:commit . "1f31433ad0b37a2e68d60ee043a8188ef1ce3176")
	   (:authors
	    ("Yann Hodique" . "yann.hodique@gmail.com"))
	   (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (pcmpl-git .
	    [(20170121 59)
	     nil "pcomplete for git" tar
	     ((:commit . "9472ac70baeda025ef7becd1cf141d72aec93f32")
	      (:authors
	       ("Leo Liu" . "sdl.web@gmail.com"))
	      (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	      (:keywords "tools"))])
 (pcre2el .
	  [(20161120 2103)
	   ((emacs
	     (24))
	    (cl-lib
	     (0 3)))
	   "regexp syntax converter" single
	   ((:commit . "0b5b2a2c173aab3fd14aac6cf5e90ad3bf58fa7d")
	    (:authors
	     ("joddie <jonxfield at gmail.com>"))
	    (:maintainer "joddie <jonxfield at gmail.com>")
	    (:url . "https://github.com/joddie/pcre2el"))])
 (pdf-tools .
	    [(20200512 1524)
	     ((emacs
	       (24 3))
	      (tablist
	       (1 0))
	      (let-alist
		  (1 0 4)))
	     "Support library for PDF documents." tar
	     ((:commit . "c510442ab89c8a9e9881230eeb364f4663f59e76")
	      (:authors
	       ("Andreas Politz" . "politza@fh-trier.de"))
	      (:maintainer "Andreas Politz" . "politza@fh-trier.de")
	      (:keywords "files" "multimedia"))])
 (persp-mode .
	     [(20200920 1506)
	      ((emacs
		(24 3)))
	      "windows/buffers sets shared among frames + save/load." single
	      ((:commit . "c132efe3094ce1368f54195028b29b82c65a64dc")
	       (:authors
		("Constantin Kulikov (Bad_ptr)" . "zxnotdead@gmail.com"))
	       (:maintainer "Constantin Kulikov (Bad_ptr)" . "zxnotdead@gmail.com")
	       (:keywords "perspectives" "session" "workspace" "persistence" "windows" "buffers" "convenience")
	       (:url . "https://github.com/Bad-ptr/persp-mode.el"))])
 (pfuture .
	  [(20200425 1357)
	   ((emacs
	     (25 2)))
	   "a simple wrapper around asynchronous processes" single
	   ((:commit . "d7926de3ba0105a36cfd00811fd6278aea903eef")
	    (:authors
	     ("Alexander Miller" . "alexanderm@web.de"))
	    (:maintainer "Alexander Miller" . "alexanderm@web.de")
	    (:url . "https://github.com/Alexander-Miller/pfuture"))])
 (pip-requirements .
		   [(20181027 1629)
		    ((dash
		      (2 8 0)))
		    "A major mode for editing pip requirements files." single
		    ((:commit . "216cd1690f80cc965d4ae47b8753fc185f778ff6")
		     (:authors
		      ("Wilfred Hughes" . "me@wilfred.me.uk"))
		     (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (pipenv .
	 [(20190919 2147)
	  ((emacs
	    (25 1))
	   (f
	    (0 19 0))
	   (s
	    (1 12 0))
	   (pyvenv
	    (1 20)))
	  "A Pipenv porcelain." single
	  ((:commit . "b730bb509e8b60af9f5ab1f1e6c3458d1d95d789")
	   (:authors
	    ("Paul Walsh" . "paulywalsh@gmail.com"))
	   (:maintainer "Paul Walsh" . "paulywalsh@gmail.com")
	   (:url . "https://github.com/pwalsh/pipenv.el"))])
 (pippel .
	 [(20180710 856)
	  ((emacs
	    (25 1))
	   (s
	    (1 11 0))
	   (dash
	    (2 12 0)))
	  "Frontend to python package manager pip" tar
	  ((:commit . "21a5200e8e5ccaa1911abb4ebf090b76ca839756")
	   (:authors
	    ("Fritz Stelzer" . "brotzeitmacher@gmail.com"))
	   (:maintainer "Fritz Stelzer" . "brotzeitmacher@gmail.com")
	   (:url . "https://github.com/brotzeitmacher/pippel"))])
 (pkg-info .
	   [(20150517 1143)
	    ((epl
	      (0 8)))
	    "Information about packages" single
	    ((:commit . "76ba7415480687d05a4353b27fea2ae02b8d9d61")
	     (:authors
	      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	     (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
	     (:keywords "convenience")
	     (:url . "https://github.com/lunaryorn/pkg-info.el"))])
 (popup .
	[(20200610 317)
	 ((cl-lib
	   (0 5)))
	 "Visual Popup User Interface" single
	 ((:commit . "13364d7674535db225789b03da766746734a4f28")
	  (:authors
	   ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	  (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	  (:keywords "lisp"))])
 (popwin .
	 [(20200908 816)
	  ((emacs
	    (24 3)))
	  "Popup Window Manager" single
	  ((:commit . "215d6cb509b11c63394a20666565cd9e9b2c2eab")
	   (:authors
	    ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	   (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	   (:keywords "convenience")
	   (:url . "https://github.com/emacsorphanage/popwin"))])
 (pos-tip .
	  [(20191227 1356)
	   nil "Show tooltip at point" single
	   ((:commit . "179cc126b363f72ca12fab1e0dc462ce0ee79742")
	    (:authors
	     ("S. Irie"))
	    (:maintainer "S. Irie")
	    (:keywords "tooltip"))])
 (powerline .
	    [(20200817 1321)
	     ((cl-lib
	       (0 2)))
	     "Rewrite of Powerline" tar
	     ((:commit . "e15e77ab2e589bd73f9e90498747d77d042789ea")
	      (:authors
	       ("Donald Ephraim Curtis" . "dcurtis@milkbox.net"))
	      (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net")
	      (:keywords "mode-line")
	      (:url . "http://github.com/milkypostman/powerline/"))])
 (powerthesaurus .
		 [(20200720 1546)
		  ((emacs
		    (24))
		   (request
		    (0 3 0))
		   (s
		    (1 12 0))
		   (jeison
		    (1 0 0)))
		  "Powerthesaurus integration" single
		  ((:commit . "93036d3b111925ebc34f747ff846cb0b8669b92e")
		   (:keywords "convenience" "writing")
		   (:url . "http://github.com/SavchenkoValeriy/emacs-powerthesaurus"))])
 (prettier-js .
	      [(20180109 726)
	       nil "Minor mode to format JS code on file save" single
	       ((:commit . "e9b73e81d3e1642aec682195f127a42dfb0b5774")
		(:authors
		 ("James Long and contributors"))
		(:maintainer "James Long and contributors")
		(:keywords "convenience" "wp" "edit" "js")
		(:url . "https://github.com/prettier/prettier-emacs"))])
 (pretty-hydra .
	       [(20190930 2106)
		((hydra
		  (0 15 0))
		 (s
		  (1 12 0))
		 (dash
		  (2 15 0))
		 (dash-functional
		  (1 2 0))
		 (emacs
		  (24)))
		"A macro for creating nice-looking hydras" single
		((:commit . "20362323f66883c1336ffe70be24f91509addf54")
		 (:authors
		  ("Jerry Peng" . "pr2jerry@gmail.com"))
		 (:maintainer "Jerry Peng" . "pr2jerry@gmail.com")
		 (:url . "https://github.com/jerrypnz/major-mode-hydra.el"))])
 (projectile .
	     [(20201030 1132)
	      ((emacs
		(25 1))
	       (pkg-info
		(0 4)))
	      "Manage and navigate projects in Emacs easily" single
	      ((:commit . "d1daf274e8ca2eb0f20475b8f314bb955167c6a1")
	       (:authors
		("Bozhidar Batsov" . "bozhidar@batsov.com"))
	       (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com")
	       (:keywords "project" "convenience")
	       (:url . "https://github.com/bbatsov/projectile"))])
 (pug-mode .
	   [(20180513 2126)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "Major mode for jade/pug template files" single
	    ((:commit . "685fd3414d89736bf232f5d1a6bed9e0353b98fe")
	     (:authors
	      ("Nathan Weizenbaum"))
	     (:maintainer "Henrik Lissner" . "henrik@lissner.net")
	     (:keywords "markup" "language" "jade" "pug")
	     (:url . "https://github.com/hlissner/emacs-pug-mode"))])
 (py-isort .
	   [(20160925 1018)
	    nil "Use isort to sort the imports in a Python buffer" single
	    ((:commit . "e67306f459c47c53a65604e4eea88a3914596560")
	     (:authors
	      ("Friedrich Paetzke" . "paetzke@fastmail.fm"))
	     (:maintainer "Friedrich Paetzke" . "paetzke@fastmail.fm")
	     (:url . "http://paetzke.me/project/py-isort.el"))])
 (pyenv-mode .
	     [(20200518 1521)
	      ((pythonic
		(0 1 0)))
	      "Integrate pyenv with python-mode" single
	      ((:commit . "b818901b8eac0e260ced66a6a5acabdbf6f5ba99")
	       (:authors
		("Artem Malyshev" . "proofit404@gmail.com"))
	       (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	       (:url . "https://github.com/proofit404/pyenv-mode"))])
 (pytest .
	 [(20200330 41)
	  ((s
	    (1 9 0)))
	  "Easy Python test running in Emacs" single
	  ((:commit . "6934047242db79b1c53e9fe3e0734cc9719ed1c4")
	   (:keywords "pytest" "python" "testing")
	   (:url . "https://github.com/ionrock/pytest-el"))])
 (python-info .
	      [(20151228 1852)
	       nil "Python info manual for Emacs" tar
	       ((:commit . "306f15441b54b25757cdfd3b327b84024ea21ed7"))])
 (pythonic .
	   [(20200806 434)
	    ((emacs
	      (25 1))
	     (s
	      (1 9))
	     (f
	      (0 17 2)))
	    "Utility functions for writing pythonic emacs package." single
	    ((:commit . "51233ec7ec9fbafd13e2b0479c7b2ee0930ccca5")
	     (:authors
	      ("Artem Malyshev" . "proofit404@gmail.com"))
	     (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	     (:url . "https://github.com/proofit404/pythonic"))])
 (pyvenv .
	 [(20191202 1039)
	  nil "Python virtual environment interface" single
	  ((:commit . "861998b6d157ae73b829f02a5a6c8a9118310831")
	   (:authors
	    ("Jorgen Schaefer" . "contact@jorgenschaefer.de"))
	   (:maintainer "Jorgen Schaefer" . "contact@jorgenschaefer.de")
	   (:keywords "python" "virtualenv" "tools")
	   (:url . "http://github.com/jorgenschaefer/pyvenv"))])
 (quelpa .
	 [(20201022 638)
	  ((emacs
	    (25 1)))
	  "Emacs Lisp packages built directly from source" tar
	  ((:commit . "61977a45b4c6edca77078732631d999c82a8544e")
	   (:authors
	    ("steckerhalter"))
	   (:maintainer "steckerhalter")
	   (:keywords "tools" "package" "management" "build" "source" "elpa")
	   (:url . "https://github.com/quelpa/quelpa"))])
 (rainbow-delimiters .
		     [(20200827 321)
		      nil "Highlight brackets according to their depth" single
		      ((:commit . "f43d48a24602be3ec899345a3326ed0247b960c6")
		       (:authors
			("Jeremy Rayman" . "opensource@jeremyrayman.com")
			("Fanael Linithien" . "fanael4@gmail.com"))
		       (:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		       (:keywords "faces" "convenience" "lisp" "tools")
		       (:url . "https://github.com/Fanael/rainbow-delimiters"))])
 (request .
	  [(20201026 2324)
	   ((emacs
	     (24 4)))
	   "Compatible layer for URL request in Emacs" single
	   ((:commit . "0183da84cb45eb94da996cd2eab714ef0d7504cc")
	    (:authors
	     ("Takafumi Arakaki <aka.tkf at gmail.com>"))
	    (:maintainer "Takafumi Arakaki <aka.tkf at gmail.com>")
	    (:url . "https://github.com/tkf/emacs-request"))])
 (request-deferred .
		   [(20181129 317)
		    ((deferred
		       (0 3 1))
		     (request
		      (0 2 0)))
		    "Wrap request.el by deferred" single
		    ((:commit . "0183da84cb45eb94da996cd2eab714ef0d7504cc")
		     (:authors
		      ("Takafumi Arakaki <aka.tkf at gmail.com>"))
		     (:maintainer "Takafumi Arakaki <aka.tkf at gmail.com>")
		     (:url . "https://github.com/tkf/emacs-request"))])
 (restart-emacs .
		[(20180601 1031)
		 nil "Restart emacs from within emacs" single
		 ((:commit . "9aa90d3df9e08bc420e1c9845ee3ff568e911bd9")
		  (:authors
		   ("Iqbal Ansari" . "iqbalansari02@yahoo.com"))
		  (:maintainer "Iqbal Ansari" . "iqbalansari02@yahoo.com")
		  (:keywords "convenience")
		  (:url . "https://github.com/iqbalansari/restart-emacs"))])
 (reveal-in-osx-finder .
		       [(20150802 1657)
			nil "Reveal file associated with buffer in OS X Finder" single
			((:commit . "5710e5936e47139a610ec9a06899f72e77ddc7bc")
			 (:authors
			  ("Kazuki YOSHIDA"))
			 (:maintainer "Kazuki YOSHIDA")
			 (:keywords "os x" "finder")
			 (:url . "https://github.com/kaz-yos/reveal-in-osx-finder"))])
 (rklisp .
	 [(20201101 1737)
	  nil "No description available." tar
	  ((:commit . "57f17956f099ea8f296f9d252a7b2efdf01a668d"))])
 (rtags .
	[(20201008 1707)
	 ((emacs
	   (24 3)))
	 "A front-end for rtags" single
	 ((:commit . "63a7d9b733def9fe76568f81321a65a450829575")
	  (:authors
	   ("Jan Erik Hanssen" . "jhanssen@gmail.com")
	   ("Anders Bakken" . "agbakken@gmail.com"))
	  (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	  (:url . "https://github.com/Andersbakken/rtags"))])
 (s .
    [(20180406 808)
     nil "The long lost Emacs string manipulation library." single
     ((:commit . "43ba8b563bee3426cead0e6d4ddc09398e1a349d")
      (:authors
       ("Magnar Sveen" . "magnars@gmail.com"))
      (:maintainer "Magnar Sveen" . "magnars@gmail.com")
      (:keywords "strings"))])
 (sass-mode .
	    [(20190502 53)
	     ((haml-mode
	       (3 0 15))
	      (cl-lib
	       (0 5)))
	     "Major mode for editing Sass files" single
	     ((:commit . "247a0d4b509f10b28e4687cd8763492bca03599b")
	      (:authors
	       ("Natalie Weizenbaum"))
	      (:maintainer "Natalie Weizenbaum")
	      (:keywords "markup" "language" "css")
	      (:url . "http://github.com/nex3/haml/tree/master"))])
 (scss-mode .
	    [(20180123 1708)
	     nil "Major mode for editing SCSS files" single
	     ((:commit . "cf58dbec5394280503eb5502938f3b5445d1b53d")
	      (:authors
	       ("Anton Johansson" . "anton.johansson@gmail.com"))
	      (:maintainer "Anton Johansson" . "anton.johansson@gmail.com")
	      (:keywords "scss" "css" "mode")
	      (:url . "https://github.com/antonj/scss-mode"))])
 (sesman .
	 [(20190909 1754)
	  ((emacs
	    (25)))
	  "Generic Session Manager" tar
	  ((:commit . "edee869c209c016e5f0c5cbb8abb9f3ccd2d1e05")
	   (:authors
	    ("Vitalie Spinu"))
	   (:maintainer "Vitalie Spinu")
	   (:keywords "process")
	   (:url . "https://github.com/vspinu/sesman"))])
 (shell-pop .
	    [(20200315 1139)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "helps you to use shell easily on Emacs. Only one key action to work." single
	     ((:commit . "4b4394037940a890a313d715d203d9ead2d156a6")
	      (:authors
	       ("Kazuo YAGI" . "kazuo.yagi@gmail.com"))
	      (:maintainer "Kazuo YAGI" . "kazuo.yagi@gmail.com")
	      (:keywords "shell" "terminal" "tools")
	      (:url . "http://github.com/kyagi/shell-pop-el"))])
 (shrink-path .
	      [(20190208 1335)
	       ((emacs
		 (24))
		(s
		 (1 6 1))
		(dash
		 (1 8 0))
		(f
		 (0 10 0)))
	       "fish-style path" single
	       ((:commit . "c14882c8599aec79a6e8ef2d06454254bb3e1e41")
		(:authors
		 ("Benjamin Andresen"))
		(:maintainer "Benjamin Andresen")
		(:url . "https://gitlab.com/bennya/shrink-path.el"))])
 (shut-up .
	  [(20180628 1830)
	   ((cl-lib
	     (0 3))
	    (emacs
	     (24)))
	   "Shut up would you!" single
	   ((:commit . "081d6b01e3ba0e60326558e545c4019219e046ce")
	    (:authors
	     ("Johan Andersson" . "johan.rejeep@gmail.com"))
	    (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
	    (:url . "http://github.com/rejeep/shut-up.el"))])
 (simple-httpd .
	       [(20191103 1446)
		((cl-lib
		  (0 3)))
		"pure elisp HTTP server" single
		((:commit . "22ce66ea43e0eadb9ec1d691a35d9695fc29cee6")
		 (:authors
		  ("Christopher Wellons" . "wellons@nullprogram.com"))
		 (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
		 (:url . "https://github.com/skeeto/emacs-http-server"))])
 (skewer-mode .
	      [(20200304 1142)
	       ((simple-httpd
		 (1 4 0))
		(js2-mode
		 (20090723))
		(emacs
		 (24)))
	       "live browser JavaScript, CSS, and HTML interaction" tar
	       ((:commit . "e5bed351939c92a1f788f78398583c2f83f1bb3c"))])
 (slim-mode .
	    [(20170728 1348)
	     nil "Major mode for editing Slim files" single
	     ((:commit . "3636d18ab1c8b316eea71c4732eb44743e2ded87")
	      (:authors
	       ("Nathan Weizenbaum"))
	      (:maintainer "Nathan Weizenbaum")
	      (:keywords "markup" "language")
	      (:url . "http://github.com/slim-template/emacs-slim"))])
 (smartparens .
	      [(20201007 1753)
	       ((dash
		 (2 13 0))
		(cl-lib
		 (0 3)))
	       "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar
	       ((:commit . "c59bfef7e8f1687ac77b0afaaaed86d8051d3de1"))])
 (smeargle .
	   [(20200323 533)
	    ((emacs
	      (24 3)))
	    "Highlighting region by last updated time" single
	    ((:commit . "a0e9bc2ea694aa2940102e1f4cfd8db8be437931")
	     (:authors
	      ("Syohei YOSHIDA" . "syohex@gmail.com"))
	     (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com")
	     (:url . "https://github.com/emacsorphanage/smeargle"))])
 (smex .
       [(20151212 2209)
	((emacs
	  (24)))
	"M-x interface with Ido-style fuzzy matching." single
	((:commit . "55aaebe3d793c2c990b39a302eb26c184281c42c")
	 (:authors
	  ("Cornelius Mika" . "cornelius.mika@gmail.com"))
	 (:maintainer "Cornelius Mika" . "cornelius.mika@gmail.com")
	 (:keywords "convenience" "usability")
	 (:url . "http://github.com/nonsequitur/smex/"))])
 (spaceline .
	    [(20201016 1043)
	     ((emacs
	       (24 4))
	      (cl-lib
	       (0 5))
	      (powerline
	       (2 3))
	      (dash
	       (2 11 0))
	      (s
	       (1 10 0)))
	     "Modeline configuration library for powerline" tar
	     ((:commit . "50cc5b26d823bbfd347becd7da03cd29c2a2a0dc")
	      (:authors
	       ("Eivind Fonn" . "evfonn@gmail.com"))
	      (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
	      (:keywords "mode-line" "powerline" "spacemacs")
	      (:url . "https://github.com/TheBB/spaceline"))])
 (spaceline-all-the-icons .
			  [(20190325 1602)
			   ((emacs
			     (24 4))
			    (all-the-icons
			     (2 6 0))
			    (spaceline
			     (2 0 0))
			    (memoize
			     (1 0 1)))
			   "A Spaceline theme using All The Icons" tar
			   ((:commit . "5afd48c10f1bd42d9b9648c5e64596b72f3e9042")
			    (:authors
			     ("Dominic Charlesworth" . "dgc336@gmail.com"))
			    (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com")
			    (:keywords "convenience" "lisp" "tools")
			    (:url . "https://github.com/domtronn/spaceline-all-the-icons.el"))])
 (sphinx-doc .
	     [(20160116 1117)
	      ((s
		(1 9 0))
	       (cl-lib
		(0 5))
	       (dash
		(2 10 0)))
	      "Sphinx friendly docstrings for Python functions" single
	      ((:commit . "f39da2e6cae55d5d7c7ce887e69755b7529bcd67")
	       (:authors
		("Vineet Naik" . "naikvin@gmail.com"))
	       (:maintainer "Vineet Naik" . "naikvin@gmail.com")
	       (:keywords "sphinx" "python")
	       (:url . "https://github.com/naiquevin/sphinx-doc.el"))])
 (string-inflection .
		    [(20200927 747)
		     nil "underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" single
		     ((:commit . "c4a519be102cb99dd86be3ee8c387f008d097635")
		      (:authors
		       ("akicho8" . "akicho8@gmail.com"))
		      (:maintainer "akicho8" . "akicho8@gmail.com")
		      (:keywords "elisp"))])
 (swiper .
	 [(20201023 1053)
	  ((emacs
	    (24 5))
	   (ivy
	    (0 13 0)))
	  "Isearch with an overview. Oh, man!" single
	  ((:commit . "e58bfc162a2df5b67a820d0311c313d3db522073")
	   (:authors
	    ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	   (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	   (:keywords "matching")
	   (:url . "https://github.com/abo-abo/swiper"))])
 (symbol-overlay .
		 [(20200828 425)
		  ((emacs
		    (24 3))
		   (seq
		    (2 2)))
		  "Highlight symbols with keymap-enabled overlays" single
		  ((:commit . "39f772b531117edba596e7a1210b3dbb87d56adb")
		   (:authors
		    ("wolray" . "wolray@foxmail.com"))
		   (:maintainer "wolray" . "wolray@foxmail.com")
		   (:keywords "faces" "matching")
		   (:url . "https://github.com/wolray/symbol-overlay/"))])
 (symon .
	[(20170224 833)
	 nil "tiny graphical system monitor" single
	 ((:commit . "8dd8b6df49b03cd7d31b85aedbe9dd08fb922335")
	  (:authors
	   ("zk_phi"))
	  (:maintainer "zk_phi")
	  (:url . "http://hins11.yu-yake.com/"))])
 (tablist .
	  [(20200427 2205)
	   ((emacs
	     (24 3)))
	   "Extended tabulated-list-mode" tar
	   ((:commit . "faab7a035ef2258cc4ea2182f67e3aedab7e2af9")
	    (:authors
	     ("Andreas Politz" . "politza@fh-trier.de"))
	    (:maintainer "Andreas Politz" . "politza@fh-trier.de")
	    (:keywords "extensions" "lisp"))])
 (tagedit .
	  [(20161121 855)
	   ((s
	     (1 3 1))
	    (dash
	     (1 0 3)))
	   "Some paredit-like features for html-mode" single
	   ((:commit . "b3a70101a0dcf85498c92b7fcfa7fdbac869746c")
	    (:authors
	     ("Magnar Sveen" . "magnars@gmail.com"))
	    (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	    (:keywords "convenience"))])
 (terminal-here .
		[(20200617 714)
		 ((emacs
		   (24 3))
		  (cl-lib
		   (0 5)))
		 "Run an external terminal in current directory" single
		 ((:commit . "d8b95302abe6e4a8a91a4526441a1c5d51b886a6")
		  (:authors
		   ("David Shepherd" . "davidshepherd7@gmail.com"))
		  (:maintainer "David Shepherd" . "davidshepherd7@gmail.com")
		  (:keywords "tools" "frames")
		  (:url . "https://github.com/davidshepherd7/terminal-here"))])
 (tern .
       [(20181108 722)
	((json
	  (1 2))
	 (cl-lib
	  (0 5))
	 (emacs
	  (24)))
	"Tern-powered JavaScript integration" single
	((:commit . "ef50c6f0269a6fd9ce742d0a87647d60a0ef850f")
	 (:authors
	  ("Marijn Haverbeke"))
	 (:maintainer "Marijn Haverbeke")
	 (:url . "http://ternjs.net/"))])
 (tldr .
       [(20200330 1025)
	((emacs
	  (24 3))
	 (request
	  (0 3 0)))
	"tldr client for Emacs" single
	((:commit . "269bda7001613c0b70c0662d2a74d200765c1dcb")
	 (:authors
	  ("Ono Hiroko" . "azazabc123@gmail.com"))
	 (:maintainer "Ono Hiroko" . "azazabc123@gmail.com")
	 (:keywords "tools" "docs")
	 (:url . "https://github.com/kuanyui/tldr.el"))])
 (toc-org .
	  [(20201013 552)
	   nil "add table of contents to org-mode files (formerly, org-toc)" single
	   ((:commit . "ff8d49c2c7daab0061250b581d3eebc7265ee267")
	    (:authors
	     ("Sergei Nosov <sergei.nosov [at] gmail.com>"))
	    (:maintainer "Sergei Nosov <sergei.nosov [at] gmail.com>")
	    (:keywords "org-mode" "org-toc" "toc-org" "org" "toc" "table" "of" "contents")
	    (:url . "https://github.com/snosov1/toc-org"))])
 (transient .
	    [(20201031 1243)
	     ((emacs
	       (25 1)))
	     "Transient commands" tar
	     ((:commit . "cb740f5a4e71c20b32d01c6e28ba35b064f27fee")
	      (:authors
	       ("Jonas Bernoulli" . "jonas@bernoul.li"))
	      (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	      (:keywords "bindings")
	      (:url . "https://github.com/magit/transient"))])
 (tree-mode .
	    [(20151104 1331)
	     nil "A mode to manage tree widgets" single
	     ((:commit . "b06078826d5875d74b0e7b7ac47b0d0917610534")
	      (:authors
	       (nil . "wenbinye@163.com"))
	      (:maintainer nil . "wenbinye@163.com")
	      (:keywords "help" "convenience" "widget"))])
 (treemacs .
	   [(20201026 2006)
	    ((emacs
	      (25 2))
	     (cl-lib
	      (0 5))
	     (dash
	      (2 11 0))
	     (s
	      (1 12 0))
	     (f
	      (0 11 0))
	     (ace-window
	      (0 9 0))
	     (pfuture
	      (1 7))
	     (hydra
	      (0 13 2))
	     (ht
	      (2 2)))
	    "A tree style file explorer package" tar
	    ((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
	     (:authors
	      ("Alexander Miller" . "alexanderm@web.de"))
	     (:maintainer "Alexander Miller" . "alexanderm@web.de")
	     (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-evil .
		[(20200716 2041)
		 ((emacs
		   (25))
		  (evil
		   (1 2 12))
		  (treemacs
		   (0 0)))
		 "Evil mode integration for treemacs" single
		 ((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
		  (:authors
		   ("Alexander Miller" . "alexanderm@web.de"))
		  (:maintainer "Alexander Miller" . "alexanderm@web.de")
		  (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-icons-dired .
		       [(20201005 1309)
			((treemacs
			  (0 0))
			 (emacs
			  (25 2)))
			"Treemacs icons for dired" single
			((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
			 (:authors
			  ("Alexander Miller" . "alexanderm@web.de"))
			 (:maintainer "Alexander Miller" . "alexanderm@web.de")
			 (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-magit .
		 [(20201025 957)
		  ((emacs
		    (25 2))
		   (treemacs
		    (0 0))
		   (pfuture
		    (1 3))
		   (magit
		    (2 90 0)))
		  "Magit integration for treemacs" single
		  ((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
		   (:authors
		    ("Alexander Miller" . "alexanderm@web.de"))
		   (:maintainer "Alexander Miller" . "alexanderm@web.de")
		   (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-persp .
		 [(20200901 1550)
		  ((emacs
		    (25 2))
		   (treemacs
		    (0 0))
		   (persp-mode
		    (2 9 7))
		   (dash
		    (2 11 0)))
		  "Persp-mode integration for treemacs" single
		  ((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
		   (:authors
		    ("Alexander Miller" . "alexanderm@web.de"))
		   (:maintainer "Alexander Miller" . "alexanderm@web.de")
		   (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-projectile .
		      [(20200530 2129)
		       ((emacs
			 (25 2))
			(projectile
			 (0 14 0))
			(treemacs
			 (0 0)))
		       "Projectile integration for treemacs" single
		       ((:commit . "ed7de5d0a25b19d9ad5f376b5e447123b418964b")
			(:authors
			 ("Alexander Miller" . "alexanderm@web.de"))
			(:maintainer "Alexander Miller" . "alexanderm@web.de")
			(:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treepy .
	 [(20191108 2217)
	  ((emacs
	    (25 1)))
	  "Generic tree traversal tools" single
	  ((:commit . "3ac940e97f3d03e48ca9d7fcd74916a9b01c72f3")
	   (:authors
	    ("Daniel Barreto" . "daniel.barreto.n@gmail.com"))
	   (:maintainer "Daniel Barreto" . "daniel.barreto.n@gmail.com")
	   (:keywords "lisp" "maint" "tools")
	   (:url . "https://github.com/volrath/treepy.el"))])
 (ts .
     [(20191010 210)
      ((emacs
	(26 1))
       (dash
	(2 14 1))
       (s
	(1 12 0)))
      "Timestamp and date/time library" single
      ((:commit . "df48734ef046547c1aa0de0f4c07d11964ef1f7f")
       (:authors
	(nil . "Adam Porter <adam@alphapapa.net"))
       (:maintainer nil . "Adam Porter <adam@alphapapa.net")
       (:keywords "date" "time" "timestamp")
       (:url . "http://github.com/alphapapa/ts.el"))])
 (use-package .
	      [(20200721 2156)
	       ((emacs
		 (24 3))
		(bind-key
		 (2 4)))
	       "A configuration macro for simplifying your .emacs" tar
	       ((:commit . "4fb1f9a68f1e7e7d614652afc017a6652fd029f1")
		(:authors
		 ("John Wiegley" . "johnw@newartisans.com"))
		(:maintainer "John Wiegley" . "johnw@newartisans.com")
		(:keywords "dotemacs" "startup" "speed" "config" "package")
		(:url . "https://github.com/jwiegley/use-package"))])
 (uuidgen .
	  [(20200816 1308)
	   nil "Provides various UUID generating functions" single
	   ((:commit . "b50e6fef2de4199a8f207b46588c2cb3890ddd85")
	    (:authors
	     ("Kan-Ru Chen" . "kanru@kanru.info"))
	    (:maintainer "Kan-Ru Chen" . "kanru@kanru.info")
	    (:keywords "extensions" "lisp" "tools"))])
 (vi-tilde-fringe .
		  [(20141028 242)
		   ((emacs
		     (24)))
		   "Displays tildes in the fringe on empty lines a la Vi." single
		   ((:commit . "f1597a8d54535bb1d84b442577b2024e6f910308")
		    (:authors
		     ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		    (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		    (:keywords "emulation")
		    (:url . "https://github.com/syl20bnr/vi-tilde-fringe"))])
 (visual-fill-column .
		     [(20201008 919)
		      ((emacs
			(25 1)))
		      "fill-column for visual-line-mode" single
		      ((:commit . "598bc992f050575c48db6fb9ea50794a5ce5d065")
		       (:authors
			("Joost Kremers" . "joostkremers@fastmail.fm"))
		       (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm")
		       (:url . "https://github.com/joostkremers/visual-fill-column"))])
 (volatile-highlights .
		      [(20160612 155)
		       nil "Minor mode for visual feedback on some operations." single
		       ((:commit . "9a20091f0ce7fc0a6b3e641a6a46d5f3ac4d8392")
			(:authors
			 ("K-talo Miyazaki <Keitaro dot Miyazaki at gmail dot com>"))
			(:maintainer "K-talo Miyazaki <Keitaro dot Miyazaki at gmail dot com>")
			(:keywords "emulations" "convenience" "wp")
			(:url . "http://www.emacswiki.org/emacs/download/volatile-highlights.el"))])
 (vterm .
	[(20201004 2057)
	 ((emacs
	   (25 1)))
	 "Fully-featured terminal emulator" tar
	 ((:commit . "01a1332ebb11daca5408f7fcb8a08454b0176e79")
	  (:authors
	   ("Lukas Fürmetz" . "fuermetz@mailbox.org"))
	  (:maintainer "Lukas Fürmetz" . "fuermetz@mailbox.org")
	  (:keywords "terminals")
	  (:url . "https://github.com/akermu/emacs-libvterm"))])
 (web-beautify .
	       [(20161115 2247)
		nil "Format HTML, CSS and JavaScript/JSON" single
		((:commit . "e1b45321d8c11b404b12c8e55afe55eaa7c84ee9")
		 (:authors
		  ("Yasuyuki Oka" . "yasuyk@gmail.com"))
		 (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com")
		 (:url . "https://github.com/yasuyk/web-beautify"))])
 (web-completion-data .
		      [(20160318 848)
		       nil "Shared completion data for ac-html and company-web" tar
		       ((:commit . "c272c94e8a71b779c29653a532f619acad433a4f")
			(:authors
			 ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))
			(:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com")
			(:keywords "html" "auto-complete" "company")
			(:url . "https://github.com/osv/web-completion-data"))])
 (web-mode .
	   [(20201031 1125)
	    ((emacs
	      (23 1)))
	    "major mode for editing web templates" single
	    ((:commit . "dc422e14907d592aa1a6bc3af453238ef4e41c11")
	     (:authors
	      ("François-Xavier Bois <fxbois AT Google Mail Service>"))
	     (:maintainer "François-Xavier Bois")
	     (:keywords "languages")
	     (:url . "http://web-mode.org"))])
 (wgrep .
	[(20200217 1030)
	 nil "Writable grep buffer and apply the changes to files" single
	 ((:commit . "f0ef9bfa44db503cdb2f83fcfbd2fa4e2382ef1f")
	  (:authors
	   ("Masahiro Hayashi" . "mhayashi1120@gmail.com"))
	  (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com")
	  (:keywords "grep" "edit" "extensions")
	  (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep.el"))])
 (wgrep-ag .
	   [(20200217 1028)
	    ((wgrep
	      (2 3 2)))
	    "Writable ag buffer and apply the changes to files" single
	    ((:commit . "f0ef9bfa44db503cdb2f83fcfbd2fa4e2382ef1f")
	     (:authors
	      ("Masahiro Hayashi" . "mhayashi1120@gmail.com"))
	     (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com")
	     (:keywords "grep" "edit" "extensions")
	     (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ag.el"))])
 (which-key .
	    [(20200908 2301)
	     ((emacs
	       (24 4)))
	     "Display available keybindings in popup" single
	     ((:commit . "c011b268196b8356c70f668506a1133086bc9477")
	      (:authors
	       ("Justin Burkett" . "justin@burkett.cc"))
	      (:maintainer "Justin Burkett" . "justin@burkett.cc")
	      (:url . "https://github.com/justbur/emacs-which-key"))])
 (window-purpose .
		 [(20190628 1827)
		  ((emacs
		    (24 4))
		   (let-alist
		       (1 0 3))
		   (imenu-list
		    (0 1)))
		  "Purpose-based window management for Emacs" tar
		  ((:commit . "f6421966761ad911fe8861aba2b110c5dd60d1ea")
		   (:authors
		    ("Bar Magal"))
		   (:maintainer "Bar Magal")
		   (:keywords "frames")
		   (:url . "https://github.com/bmag/emacs-purpose"))])
 (winum .
	[(20190911 1607)
	 ((cl-lib
	   (0 5))
	  (dash
	   (2 13 0)))
	 "Navigate windows and frames using numbers." single
	 ((:commit . "c5455e866e8a5f7eab6a7263e2057aff5f1118b9")
	  (:authors
	   ("Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com"))
	  (:maintainer "Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com")
	  (:keywords "convenience" "frames" "windows" "multi-screen")
	  (:url . "http://github.com/deb0ch/winum.el"))])
 (with-editor .
	      [(20201030 1232)
	       ((emacs
		 (24 4))
		(async
		 (1 9)))
	       "Use the Emacsclient as $EDITOR" tar
	       ((:commit . "6735180e73e787b79535c245b162249b70dbf841")
		(:authors
		 ("Jonas Bernoulli" . "jonas@bernoul.li"))
		(:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		(:keywords "tools")
		(:url . "https://github.com/magit/with-editor"))])
 (worf .
       [(20200121 1629)
	((swiper
	  (0 11 0))
	 (ace-link
	  (0 1 0))
	 (hydra
	  (0 13 0))
	 (zoutline
	  (0 1 0)))
	"A warrior does not press so many keys! (in org-mode)" tar
	((:commit . "bdc8240ff4188c7403a020eb58dc10eea104b7df")
	 (:authors
	  ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	 (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	 (:keywords "lisp")
	 (:url . "https://github.com/abo-abo/worf"))])
 (writeroom-mode .
		 [(20201008 918)
		  ((emacs
		    (25 1))
		   (visual-fill-column
		    (1 9)))
		  "Minor mode for distraction-free writing" tar
		  ((:commit . "e7fba5c6dd6db28fface74d6a3de7245aff50df7")
		   (:authors
		    ("Joost Kremers" . "joostkremers@fastmail.fm"))
		   (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm")
		   (:keywords "text")
		   (:url . "https://github.com/joostkremers/writeroom-mode"))])
 (ws-butler .
	    [(20170111 2334)
	     nil "Unobtrusively remove trailing whitespace." single
	     ((:commit . "52321b99be69aa1b661da7743c4421a30d8b6bcb")
	      (:authors
	       ("Le Wang"))
	      (:maintainer "Le Wang")
	      (:url . "https://github.com/lewang/ws-butler"))])
 (xah-lookup .
	     [(20200420 1528)
	      ((emacs
		(24 1)))
	      "look up word on internet." single
	      ((:commit . "c97a43dc0cebbfc519d0cce5b547dcc5e22b2085")
	       (:authors
		("Xah Lee ( http://xahlee.info/ )"))
	       (:maintainer "Xah Lee ( http://xahlee.info/ )")
	       (:keywords "help" "docs" "convenience")
	       (:url . "http://ergoemacs.org/emacs/xah-lookup.html"))])
 (xterm-color .
	      [(20200605 2017)
	       ((emacs
		 (24 4)))
	       "ANSI, XTERM 256 and Truecolor support" single
	       ((:commit . "b9b1f84fb10fff5261702e38bf15b3ae75a4b6bb")
		(:authors
		 ("xristos" . "xristos@sdf.org"))
		(:maintainer "xristos" . "xristos@sdf.org")
		(:keywords "faces")
		(:url . "https://github.com/atomontage/xterm-color"))])
 (yaml-mode .
	    [(20201031 1448)
	     ((emacs
	       (24 1)))
	     "Major mode for editing YAML files" single
	     ((:commit . "831ef3a04e4d32ec3fa3d77a54dc7e7bc5b6fd81")
	      (:authors
	       ("Yoshiki Kurihara" . "clouder@gmail.com")
	       ("Marshall T. Vandegrift" . "llasram@gmail.com"))
	      (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de")
	      (:keywords "data" "yaml"))])
 (yapfify .
	  [(20200406 830)
	   nil "(automatically) format python buffers using YAPF." single
	   ((:commit . "3df4e8ce65f55fd69479b3417525ce83a2b00b45")
	    (:authors
	     ("Joris Engbers" . "info@jorisengbers.nl"))
	    (:maintainer "Joris Engbers" . "info@jorisengbers.nl")
	    (:url . "https://github.com/JorisE/yapfify"))])
 (yasnippet .
	    [(20200604 246)
	     ((cl-lib
	       (0 5)))
	     "Yet another snippet extension for Emacs" single
	     ((:commit . "5cbdbf0d2015540c59ed8ee0fcf4788effdf75b6")
	      (:maintainer "Noam Postavsky" . "npostavs@gmail.com")
	      (:keywords "convenience" "emulation")
	      (:url . "http://github.com/joaotavora/yasnippet"))])
 (yasnippet-snippets .
		     [(20201025 1809)
		      ((yasnippet
			(0 8 0)))
		      "Collection of yasnippet snippets" tar
		      ((:commit . "7716da98b773f3e25a8a1b1949e24b4f3e855d17")
		       (:authors
			("Andrea Crotti" . "andrea.crotti.0@gmail.com"))
		       (:maintainer "Andrea Crotti" . "andrea.crotti.0@gmail.com")
		       (:keywords "snippets"))])
 (ycmd .
       [(20190416 807)
	((emacs
	  (24 4))
	 (dash
	  (2 13 0))
	 (s
	  (1 11 0))
	 (deferred
	   (0 5 1))
	 (cl-lib
	  (0 6 1))
	 (let-alist
	     (1 0 5))
	 (request
	  (0 3 0))
	 (request-deferred
	  (0 3 0))
	 (pkg-info
	  (0 6)))
	"emacs bindings to the ycmd completion server" tar
	((:commit . "c17ff9e0250a9b39d23af37015a2b300e2f36fed")
	 (:url . "https://github.com/abingham/emacs-ycmd"))])
 (zeal-at-point .
		[(20180131 2354)
		 nil "Search the word at point with Zeal" single
		 ((:commit . "0fc3263f44e95acd3e9d91057677621ce4d297ee")
		  (:authors
		   ("Jinzhu" . "wosmvp@gmail.com"))
		  (:maintainer "Jinzhu" . "wosmvp@gmail.com")
		  (:url . "https://github.com/jinzhu/zeal-at-point"))])
 (zoutline .
	   [(20190520 1819)
	    nil "Simple outline library." single
	    ((:commit . "63756846f8540b6faf89d885438186e4fe1c7d8a")
	     (:authors
	      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	     (:keywords "outline")
	     (:url . "https://github.com/abo-abo/zoutline"))]))
