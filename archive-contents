(1
 (zoutline .
	   [(20190520 1819)
	    nil "Simple outline library." single
	    ((:commit . "63756846f8540b6faf89d885438186e4fe1c7d8a")
	     (:authors
	      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	     (:keywords "outline")
	     (:url . "https://github.com/abo-abo/zoutline"))])
 (zeal-at-point .
		[(20180131 2354)
		 nil "Search the word at point with Zeal" single
		 ((:commit . "0fc3263f44e95acd3e9d91057677621ce4d297ee")
		  (:authors
		   ("Jinzhu" . "wosmvp@gmail.com"))
		  (:maintainer "Jinzhu" . "wosmvp@gmail.com")
		  (:url . "https://github.com/jinzhu/zeal-at-point"))])
 (yasnippet-snippets .
		     [(20190926 1252)
		      ((yasnippet
			(0 8 0)))
		      "Collection of yasnippet snippets" tar
		      ((:commit . "52e4be5acd0a531f455ab77b02cfa6a5160cf129")
		       (:authors
			("Andrea Crotti" . "andrea.crotti.0@gmail.com"))
		       (:maintainer "Andrea Crotti" . "andrea.crotti.0@gmail.com")
		       (:keywords "snippets"))])
 (yasnippet .
	    [(20190724 1204)
	     ((cl-lib
	       (0 5)))
	     "Yet another snippet extension for Emacs" single
	     ((:commit . "d91dd66f2aed9bbaef32813a68b105ea77e83890")
	      (:maintainer "Noam Postavsky" . "npostavs@gmail.com")
	      (:keywords "convenience" "emulation")
	      (:url . "http://github.com/joaotavora/yasnippet"))])
 (yapfify .
	  [(20180830 733)
	   nil "(automatically) format python buffers using YAPF." single
	   ((:commit . "b858225e1debe6734ee718e5c3c209152652a8b3")
	    (:authors
	     ("Joris Engbers" . "info@jorisengbers.nl"))
	    (:maintainer "Joris Engbers" . "info@jorisengbers.nl")
	    (:url . "https://github.com/JorisE/yapfify"))])
 (yaml-mode .
	    [(20190625 1740)
	     ((emacs
	       (24 1)))
	     "Major mode for editing YAML files" single
	     ((:commit . "5b4a0db384f996554454b5642e4531c502421de8")
	      (:authors
	       ("Yoshiki Kurihara" . "clouder@gmail.com")
	       ("Marshall T. Vandegrift" . "llasram@gmail.com"))
	      (:maintainer "Vasilij Schneidermann" . "v.schneidermann@gmail.com")
	      (:keywords "data" "yaml"))])
 (xterm-color .
	      [(20190816 941)
	       ((cl-lib
		 (0 5)))
	       "ANSI & XTERM 256 color support" single
	       ((:commit . "44e6df835bd4173ee4ccc7e29842e9dae76f2668")
		(:authors
		 ("xristos" . "xristos@sdf.lonestar.org"))
		(:maintainer "xristos" . "xristos@sdf.lonestar.org")
		(:keywords "faces")
		(:url . "https://github.com/atomontage/xterm-color"))])
 (xah-lookup .
	     [(20181225 1942)
	      ((emacs
		(24 1)))
	      "look up word on internet." single
	      ((:commit . "2cafbf3605a8f2ac4c56392c5b1f75adc3b11f24")
	       (:authors
		("Xah Lee ( http://xahlee.info/ )"))
	       (:maintainer "Xah Lee ( http://xahlee.info/ )")
	       (:keywords "help" "docs" "convenience")
	       (:url . "http://ergoemacs.org/emacs/xah-lookup.html"))])
 (xah-find .
	   [(20190314 2039)
	    ((emacs
	      (24 1)))
	    "find replace in pure emacs lisp. Purpose similar to grep/sed." single
	    ((:commit . "a39f1ff9a7cf56e92b56c6f179741569b9172a48")
	     (:authors
	      ("Xah Lee ( http://xahlee.info/ )"))
	     (:maintainer "Xah Lee ( http://xahlee.info/ )")
	     (:keywords "convenience" "extensions" "files" "tools" "unix")
	     (:url . "http://ergoemacs.org/emacs/elisp-xah-find-text.html"))])
 (ws-butler .
	    [(20170111 2334)
	     nil "Unobtrusively remove trailing whitespace." single
	     ((:commit . "52321b99be69aa1b661da7743c4421a30d8b6bcb")
	      (:authors
	       ("Le Wang"))
	      (:maintainer "Le Wang")
	      (:url . "https://github.com/lewang/ws-butler"))])
 (writeroom-mode .
		 [(20190406 2135)
		  ((emacs
		    (24 1))
		   (visual-fill-column
		    (1 9)))
		  "Minor mode for distraction-free writing" tar
		  ((:commit . "ebe522ba5a0367cf82ed03ffeb63fe597b84f4a1")
		   (:authors
		    ("Joost Kremers" . "joostkremers@fastmail.fm"))
		   (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm")
		   (:keywords "text"))])
 (worf .
       [(20190519 1648)
	((swiper
	  (0 11 0))
	 (ace-link
	  (0 1 0))
	 (hydra
	  (0 13 0))
	 (zoutline
	  (0 1 0)))
	"A warrior does not press so many keys! (in org-mode)" tar
	((:commit . "00d191b347397bd7ad1f5b95cfe39fa3fce9fc91")
	 (:authors
	  ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	 (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	 (:keywords "lisp")
	 (:url . "https://github.com/abo-abo/worf"))])
 (with-editor .
	      [(20190715 2007)
	       ((emacs
		 (24 4))
		(async
		 (1 9)))
	       "Use the Emacsclient as $EDITOR" tar
	       ((:commit . "45c29f9bfb7f2df93426ce1571e2f4f41ed4e492")
		(:authors
		 ("Jonas Bernoulli" . "jonas@bernoul.li"))
		(:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		(:keywords "tools")
		(:url . "https://github.com/magit/with-editor"))])
 (winum .
	[(20190911 1607)
	 ((cl-lib
	   (0 5))
	  (dash
	   (2 13 0)))
	 "Navigate windows and frames using numbers." single
	 ((:commit . "c5455e866e8a5f7eab6a7263e2057aff5f1118b9")
	  (:authors
	   ("Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com"))
	  (:maintainer "Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com")
	  (:keywords "convenience" "frames" "windows" "multi-screen")
	  (:url . "http://github.com/deb0ch/winum.el"))])
 (window-purpose .
		 [(20190628 1827)
		  ((emacs
		    (24 4))
		   (let-alist
		       (1 0 3))
		   (imenu-list
		    (0 1)))
		  "Purpose-based window management for Emacs" tar
		  ((:commit . "f6421966761ad911fe8861aba2b110c5dd60d1ea")
		   (:authors
		    ("Bar Magal"))
		   (:maintainer "Bar Magal")
		   (:keywords "frames")
		   (:url . "https://github.com/bmag/emacs-purpose"))])
 (which-key .
	    [(20190802 240)
	     ((emacs
	       (24 4)))
	     "Display available keybindings in popup" single
	     ((:commit . "42a25055163141165aa0269dbca69735e704825c")
	      (:authors
	       ("Justin Burkett" . "justin@burkett.cc"))
	      (:maintainer "Justin Burkett" . "justin@burkett.cc")
	      (:url . "https://github.com/justbur/emacs-which-key"))])
 (wgrep-ag .
	   [(20181229 124)
	    ((wgrep
	      (2 1 5)))
	    "Writable ag buffer and apply the changes to files" single
	    ((:commit . "379afd89ebd76f63842c8589127d66096a8bb595")
	     (:authors
	      ("Masahiro Hayashi" . "mhayashi1120@gmail.com"))
	     (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com")
	     (:keywords "grep" "edit" "extensions")
	     (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ag.el"))])
 (wgrep .
	[(20181229 40)
	 nil "Writable grep buffer and apply the changes to files" single
	 ((:commit . "379afd89ebd76f63842c8589127d66096a8bb595")
	  (:authors
	   ("Masahiro Hayashi" . "mhayashi1120@gmail.com"))
	  (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com")
	  (:keywords "grep" "edit" "extensions")
	  (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep.el"))])
 (websocket .
	    [(20190621 54)
	     ((cl-lib
	       (0 5)))
	     "Emacs WebSocket client and server" single
	     ((:commit . "d91a9aef5a3ec5af985e5185c3b237fdd24605e0")
	      (:authors
	       ("Andrew Hyatt" . "ahyatt@gmail.com"))
	      (:maintainer "Andrew Hyatt" . "ahyatt@gmail.com")
	      (:keywords "communication" "websocket" "server"))])
 (web-mode .
	   [(20190916 1858)
	    ((emacs
	      (23 1)))
	    "major mode for editing web templates" single
	    ((:commit . "a31eb8592f09d789c4b08ccecfdaca6fd2f06a69")
	     (:authors
	      ("François-Xavier Bois <fxbois AT Google Mail Service>"))
	     (:maintainer "François-Xavier Bois")
	     (:keywords "languages")
	     (:url . "http://web-mode.org"))])
 (web-completion-data .
		      [(20160318 848)
		       nil "Shared completion data for ac-html and company-web" tar
		       ((:commit . "c272c94e8a71b779c29653a532f619acad433a4f")
			(:authors
			 ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))
			(:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com")
			(:keywords "html" "auto-complete" "company")
			(:url . "https://github.com/osv/web-completion-data"))])
 (web-beautify .
	       [(20161115 2247)
		nil "Format HTML, CSS and JavaScript/JSON" single
		((:commit . "e1b45321d8c11b404b12c8e55afe55eaa7c84ee9")
		 (:authors
		  ("Yasuyuki Oka" . "yasuyk@gmail.com"))
		 (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com")
		 (:url . "https://github.com/yasuyk/web-beautify"))])
 (vterm .
	[(20190822 1225)
	 ((emacs
	   (25 1)))
	 "This package implements a terminal via libvterm" tar
	 ((:commit . "097d9806ffab9120f078bea22e9b49502807786b")
	  (:authors
	   ("Lukas Fürmetz" . "fuermetz@mailbox.org"))
	  (:maintainer "Lukas Fürmetz" . "fuermetz@mailbox.org")
	  (:keywords "terminals")
	  (:url . "https://github.com/akermu/emacs-libvterm"))])
 (volatile-highlights .
		      [(20160612 155)
		       nil "Minor mode for visual feedback on some operations." single
		       ((:commit . "9a20091f0ce7fc0a6b3e641a6a46d5f3ac4d8392")
			(:authors
			 ("K-talo Miyazaki <Keitaro dot Miyazaki at gmail dot com>"))
			(:maintainer "K-talo Miyazaki <Keitaro dot Miyazaki at gmail dot com>")
			(:keywords "emulations" "convenience" "wp")
			(:url . "http://www.emacswiki.org/emacs/download/volatile-highlights.el"))])
 (voca-builder .
	       [(20161101 1645)
		((popup
		  (0 5 2)))
		"Helps you build up your vocabulary" single
		((:commit . "51573beec8cd8308477b0faf453aad93e17f57c5")
		 (:authors
		  ("Yi Tang" . "yi.tang.uk@me.com"))
		 (:maintainer "Yi Tang" . "yi.tang.uk@me.com")
		 (:keywords "english" "vocabulary")
		 (:url . "https://github.com/yitang/voca-builder"))])
 (visual-fill-column .
		     [(20190422 2154)
		      ((emacs
			(24 3)))
		      "fill-column for visual-line-mode" single
		      ((:commit . "772d4b25ba19f57409cd03524be0f5bfdc2e8da1")
		       (:authors
			("Joost Kremers" . "joostkremers@fastmail.fm"))
		       (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (vimrc-mode .
	     [(20181116 1919)
	      nil "Major mode for vimrc files" single
	      ((:commit . "13bc150a870d5d4a95f1111e4740e2b22813c30e")
	       (:keywords "languages" "vim")
	       (:url . "https://github.com/mcandre/vimrc-mode"))])
 (vi-tilde-fringe .
		  [(20141028 242)
		   ((emacs
		     (24)))
		   "Displays tildes in the fringe on empty lines a la Vi." single
		   ((:commit . "f1597a8d54535bb1d84b442577b2024e6f910308")
		    (:authors
		     ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		    (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		    (:keywords "emulation")
		    (:url . "https://github.com/syl20bnr/vi-tilde-fringe"))])
 (uuidgen .
	  [(20140918 2301)
	   nil "Provides various UUID generating functions" single
	   ((:commit . "7eb96415484c3854a3f383d1a3e10b87ae674e22")
	    (:authors
	     ("Kan-Ru Chen" . "koster@debian.org"))
	    (:maintainer "Kan-Ru Chen" . "koster@debian.org")
	    (:keywords "extensions" "lisp" "tools"))])
 (use-package .
	      [(20190716 1829)
	       ((emacs
		 (24 3))
		(bind-key
		 (2 4)))
	       "A configuration macro for simplifying your .emacs" tar
	       ((:commit . "4714d73b61bdb378f6e9e3f3838cae1abbf65ea0")
		(:authors
		 ("John Wiegley" . "johnw@newartisans.com"))
		(:maintainer "John Wiegley" . "johnw@newartisans.com")
		(:keywords "dotemacs" "startup" "speed" "config" "package")
		(:url . "https://github.com/jwiegley/use-package"))])
 (typit .
	[(20190713 1336)
	 ((emacs
	   (24 4))
	  (f
	   (0 18))
	  (mmt
	   (0 1 1)))
	 "Typing game similar to tests on 10 fast fingers" tar
	 ((:commit . "2adb0e0df4689b5abaa89a71808ec7993ecfaf9b")
	  (:authors
	   ("Mark Karpov" . "markkarpov92@gmail.com"))
	  (:maintainer "Mark Karpov" . "markkarpov92@gmail.com")
	  (:keywords "games")
	  (:url . "https://github.com/mrkkrp/typit"))])
 (typescript-mode .
		  [(20190918 1042)
		   ((emacs
		     (24 3)))
		   "Major mode for editing typescript" tar
		   ((:commit . "2405090403e2907d7751770bab4a40865ef043ff")
		    (:keywords "typescript" "languages")
		    (:url . "http://github.com/ananthakumaran/typescript.el"))])
 (treepy .
	 [(20180724 656)
	  ((emacs
	    (25 1)))
	  "Generic tree traversal tools" single
	  ((:commit . "b40e6b09eb9be45da67b8c9e4990a5a0d7a2a09d")
	   (:authors
	    ("Daniel Barreto" . "daniel.barreto.n@gmail.com"))
	   (:maintainer "Daniel Barreto" . "daniel.barreto.n@gmail.com")
	   (:keywords "lisp" "maint" "tools")
	   (:url . "https://github.com/volrath/treepy.el"))])
 (treemacs-projectile .
		      [(20190619 1516)
		       ((projectile
			 (0 14 0))
			(treemacs
			 (0 0)))
		       "Projectile integration for treemacs" single
		       ((:commit . "6a0b1fce801bf0791bc3eee7b0dc4bbbcf95e6a7")
			(:authors
			 ("Alexander Miller" . "alexanderm@web.de"))
			(:maintainer "Alexander Miller" . "alexanderm@web.de")
			(:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-magit .
		 [(20190731 540)
		  ((emacs
		    (25 2))
		   (treemacs
		    (0 0))
		   (pfuture
		    (1 3))
		   (magit
		    (2 90 0)))
		  "Magit integration for treemacs" single
		  ((:commit . "6a0b1fce801bf0791bc3eee7b0dc4bbbcf95e6a7")
		   (:authors
		    ("Alexander Miller" . "alexanderm@web.de"))
		   (:maintainer "Alexander Miller" . "alexanderm@web.de")
		   (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs-evil .
		[(20190619 1516)
		 ((evil
		   (1 2 12))
		  (treemacs
		   (0 0)))
		 "Evil mode integration for treemacs" single
		 ((:commit . "6a0b1fce801bf0791bc3eee7b0dc4bbbcf95e6a7")
		  (:authors
		   ("Alexander Miller" . "alexanderm@web.de"))
		  (:maintainer "Alexander Miller" . "alexanderm@web.de")
		  (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (treemacs .
	   [(20190922 1026)
	    ((emacs
	      (25 2))
	     (cl-lib
	      (0 5))
	     (dash
	      (2 11 0))
	     (s
	      (1 10 0))
	     (f
	      (0 11 0))
	     (ace-window
	      (0 9 0))
	     (pfuture
	      (1 7))
	     (hydra
	      (0 13 2))
	     (ht
	      (2 2)))
	    "A tree style file explorer package" tar
	    ((:commit . "6a0b1fce801bf0791bc3eee7b0dc4bbbcf95e6a7")
	     (:authors
	      ("Alexander Miller" . "alexanderm@web.de"))
	     (:maintainer "Alexander Miller" . "alexanderm@web.de")
	     (:url . "https://github.com/Alexander-Miller/treemacs"))])
 (tree-mode .
	    [(20151104 1331)
	     nil "A mode to manage tree widgets" single
	     ((:commit . "b06078826d5875d74b0e7b7ac47b0d0917610534")
	      (:authors
	       (nil . "wenbinye@163.com"))
	      (:maintainer nil . "wenbinye@163.com")
	      (:keywords "help" "convenience" "widget"))])
 (transient .
	    [(20190928 1749)
	     ((emacs
	       (25 1))
	      (dash
	       (2 15 0)))
	     "Transient commands" tar
	     ((:commit . "89e6941a8527e43302833778b3ff45ffb9af6847")
	      (:authors
	       ("Jonas Bernoulli" . "jonas@bernoul.li"))
	      (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	      (:keywords "bindings")
	      (:url . "https://github.com/magit/transient"))])
 (toc-org .
	  [(20190902 1055)
	   nil "add table of contents to org-mode files (formerly, org-toc)" single
	   ((:commit . "379b457fcff091d2fa47223ade58f457fd6eed28")
	    (:authors
	     ("Sergei Nosov <sergei.nosov [at] gmail.com>"))
	    (:maintainer "Sergei Nosov <sergei.nosov [at] gmail.com>")
	    (:keywords "org-mode" "org-toc" "toc-org" "org" "toc" "table" "of" "contents")
	    (:url . "https://github.com/snosov1/toc-org"))])
 (tldr .
       [(20190425 749)
	((emacs
	  (24 3))
	 (request
	  (0 3 0)))
	"tldr client for Emacs" single
	((:commit . "2ff0834bc58590f98bfece3efc5656d1b47c325d")
	 (:authors
	  ("Ono Hiroko" . "azazabc123@gmail.com"))
	 (:maintainer "Ono Hiroko" . "azazabc123@gmail.com")
	 (:keywords "tools" "docs")
	 (:url . "https://github.com/kuanyui/tldr.el"))])
 (tern .
       [(20181108 722)
	((json
	  (1 2))
	 (cl-lib
	  (0 5))
	 (emacs
	  (24)))
	"Tern-powered JavaScript integration" single
	((:commit . "556f5559255518865456af0b228f86bfabd43e6b")
	 (:authors
	  ("Marijn Haverbeke"))
	 (:maintainer "Marijn Haverbeke")
	 (:url . "http://ternjs.net/"))])
 (tagedit .
	  [(20161121 855)
	   ((s
	     (1 3 1))
	    (dash
	     (1 0 3)))
	   "Some paredit-like features for html-mode" single
	   ((:commit . "b3a70101a0dcf85498c92b7fcfa7fdbac869746c")
	    (:authors
	     ("Magnar Sveen" . "magnars@gmail.com"))
	    (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	    (:keywords "convenience"))])
 (symon .
	[(20170224 833)
	 nil "tiny graphical system monitor" single
	 ((:commit . "8dd8b6df49b03cd7d31b85aedbe9dd08fb922335")
	  (:authors
	   ("zk_phi"))
	  (:maintainer "zk_phi")
	  (:url . "http://hins11.yu-yake.com/"))])
 (symbol-overlay .
		 [(20190608 442)
		  ((emacs
		    (24 3)))
		  "Highlight symbols with keymap-enabled overlays" single
		  ((:commit . "e40a7c407f24158c45eaa5f54ed41f5e416a51dc")
		   (:authors
		    ("wolray" . "wolray@foxmail.com"))
		   (:maintainer "wolray" . "wolray@foxmail.com")
		   (:keywords "faces" "matching")
		   (:url . "https://github.com/wolray/symbol-overlay/"))])
 (swiper .
	 [(20190822 1708)
	  ((emacs
	    (24 1))
	   (ivy
	    (0 12 0)))
	  "Isearch with an overview. Oh, man!" single
	  ((:commit . "79333e9edfee38ec3b367c33711a68bdf7783259")
	   (:authors
	    ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	   (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	   (:keywords "matching")
	   (:url . "https://github.com/abo-abo/swiper"))])
 (sudoku .
	 [(20161111 706)
	  ((emacs
	    (24 4)))
	  "Simple sudoku game, can download puzzles" single
	  ((:commit . "77c11b5041b58fc943cf1668b44b40bae039cb5b")
	   (:authors
	    ("Zajcev Evgeny" . "zevlg@yandex.ru"))
	   (:maintainer "Zajcev Evgeny" . "zevlg@yandex.ru")
	   (:keywords "games"))])
 (string-inflection .
		    [(20180827 1301)
		     nil "underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" single
		     ((:commit . "e9a50855a4c718592c28a5a892f164ecf46e39a8")
		      (:authors
		       ("akicho8" . "akicho8@gmail.com"))
		      (:maintainer "akicho8" . "akicho8@gmail.com")
		      (:keywords "elisp"))])
 (sql-indent .
	     [(20190620 942)
	      ((cl-lib
		(0 5)))
	      "Support for indenting code in SQL files." single
	      ((:commit . "08f0417fd739a789991d739be7d524c419558741")
	       (:authors
		("Alex Harsanyi" . "AlexHarsanyi@gmail.com"))
	       (:maintainer "Alex Harsanyi" . "AlexHarsanyi@gmail.com")
	       (:keywords "languages" "sql")
	       (:url . "https://github.com/alex-hhh/emacs-sql-indent"))])
 (spaceline-all-the-icons .
			  [(20190325 1602)
			   ((emacs
			     (24 4))
			    (all-the-icons
			     (2 6 0))
			    (spaceline
			     (2 0 0))
			    (memoize
			     (1 0 1)))
			   "A Spaceline theme using All The Icons" tar
			   ((:commit . "5afd48c10f1bd42d9b9648c5e64596b72f3e9042")
			    (:authors
			     ("Dominic Charlesworth" . "dgc336@gmail.com"))
			    (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com")
			    (:keywords "convenience" "lisp" "tools")
			    (:url . "https://github.com/domtronn/spaceline-all-the-icons.el"))])
 (spaceline .
	    [(20181223 2024)
	     ((emacs
	       (24 4))
	      (cl-lib
	       (0 5))
	      (powerline
	       (2 3))
	      (dash
	       (2 11 0))
	      (s
	       (1 10 0)))
	     "Modeline configuration library for powerline" tar
	     ((:commit . "ae45a819ea7ae52febb4d7d82170af44dff10f19")
	      (:authors
	       ("Eivind Fonn" . "evfonn@gmail.com"))
	      (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
	      (:keywords "mode-line" "powerline" "spacemacs")
	      (:url . "https://github.com/TheBB/spaceline"))])
 (smex .
       [(20151212 2209)
	((emacs
	  (24)))
	"M-x interface with Ido-style fuzzy matching." single
	((:commit . "55aaebe3d793c2c990b39a302eb26c184281c42c")
	 (:authors
	  ("Cornelius Mika" . "cornelius.mika@gmail.com"))
	 (:maintainer "Cornelius Mika" . "cornelius.mika@gmail.com")
	 (:keywords "convenience" "usability")
	 (:url . "http://github.com/nonsequitur/smex/"))])
 (smeargle .
	   [(20161212 2358)
	    ((emacs
	      (24 3)))
	    "Highlighting region by last updated time" single
	    ((:commit . "0665b1ff5109731898bc4a0ca6d939933b804777")
	     (:authors
	      ("Syohei YOSHIDA" . "syohex@gmail.com"))
	     (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	     (:url . "https://github.com/syohex/emacs-smeargle"))])
 (smartparens .
	      [(20190904 1742)
	       ((dash
		 (2 13 0))
		(cl-lib
		 (0 3)))
	       "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar
	       ((:commit . "12856838cf9b0e6a635a6ceb14a22fdc03b04728"))])
 (slim-mode .
	    [(20170728 1348)
	     nil "Major mode for editing Slim files" single
	     ((:commit . "3636d18ab1c8b316eea71c4732eb44743e2ded87")
	      (:authors
	       ("Nathan Weizenbaum"))
	      (:maintainer "Nathan Weizenbaum")
	      (:keywords "markup" "language")
	      (:url . "http://github.com/slim-template/emacs-slim"))])
 (slideview .
	    [(20150324 2240)
	     ((cl-lib
	       (0 3)))
	     "File slideshow" single
	     ((:commit . "b6d170bda139aedf81b47dc55cbd1a3af512fb4c")
	      (:authors
	       ("Masahiro Hayashi" . "mhayashi1120@gmail.com"))
	      (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com")
	      (:keywords "files")
	      (:url . "https://github.com/mhayashi1120/Emacs-slideview"))])
 (skewer-mode .
	      [(20180706 1807)
	       ((simple-httpd
		 (1 4 0))
		(js2-mode
		 (20090723))
		(emacs
		 (24)))
	       "live browser JavaScript, CSS, and HTML interaction" tar
	       ((:commit . "a381049acc4fa2087615b4b3b26c0865841386bd"))])
 (simple-httpd .
	       [(20190110 1505)
		((cl-lib
		  (0 3)))
		"pure elisp HTTP server" single
		((:commit . "08535d0fad6a32fdc03d725ec74e10a754bb9c7a")
		 (:authors
		  ("Christopher Wellons" . "wellons@nullprogram.com"))
		 (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
		 (:url . "https://github.com/skeeto/emacs-http-server"))])
 (simple-call-tree .
		   [(20180224 2056)
		    ((emacs
		      (24 3))
		     (anaphora
		      (1 0 0)))
		    "analyze source code based on font-lock text-properties" single
		    ((:commit . "20059eb5549408def76aeb03d0d20839903dedef")
		     (:authors
		      ("Joe Bloggs" . "vapniks@yahoo.com"))
		     (:maintainer "Joe Bloggs" . "vapniks@yahoo.com")
		     (:keywords "programming")
		     (:url . "http://www.emacswiki.org/emacs/download/simple-call-tree.el"))])
 (signature .
	    [(20140730 1949)
	     nil "Signature Survey" tar
	     ((:commit . "c47df2e1189a84505f9224aa78e87b6c65d13d37")
	      (:authors
	       ("Peter Stiernström" . "peter@stiernstrom.se"))
	      (:maintainer "Peter Stiernström" . "peter@stiernstrom.se"))])
 (shrink-path .
	      [(20190208 1335)
	       ((emacs
		 (24))
		(s
		 (1 6 1))
		(dash
		 (1 8 0))
		(f
		 (0 10 0)))
	       "fish-style path" single
	       ((:commit . "c14882c8599aec79a6e8ef2d06454254bb3e1e41")
		(:authors
		 ("Benjamin Andresen"))
		(:maintainer "Benjamin Andresen")
		(:url . "https://gitlab.com/bennya/shrink-path.el"))])
 (shell-pop .
	    [(20170304 1416)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "helps you to use shell easily on Emacs. Only one key action to work." single
	     ((:commit . "4a3a9d093ad1add792bba764c601aa28de302b34")
	      (:authors
	       ("Kazuo YAGI" . "kazuo.yagi@gmail.com"))
	      (:maintainer "Kazuo YAGI" . "kazuo.yagi@gmail.com")
	      (:keywords "shell" "terminal" "tools")
	      (:url . "http://github.com/kyagi/shell-pop-el"))])
 (scss-mode .
	    [(20180123 1708)
	     nil "Major mode for editing SCSS files" single
	     ((:commit . "cf58dbec5394280503eb5502938f3b5445d1b53d")
	      (:authors
	       ("Anton Johansson" . "anton.johansson@gmail.com"))
	      (:maintainer "Anton Johansson" . "anton.johansson@gmail.com")
	      (:keywords "scss" "css" "mode")
	      (:url . "https://github.com/antonj/scss-mode"))])
 (sass-mode .
	    [(20190502 53)
	     ((haml-mode
	       (3 0 15))
	      (cl-lib
	       (0 5)))
	     "Major mode for editing Sass files" single
	     ((:commit . "247a0d4b509f10b28e4687cd8763492bca03599b")
	      (:authors
	       ("Natalie Weizenbaum"))
	      (:maintainer "Natalie Weizenbaum")
	      (:keywords "markup" "language" "css")
	      (:url . "http://github.com/nex3/haml/tree/master"))])
 (s .
    [(20180406 808)
     nil "The long lost Emacs string manipulation library." single
     ((:commit . "03410e6a7a2b11e47e1fea3b7d9899c7df26435e")
      (:authors
       ("Magnar Sveen" . "magnars@gmail.com"))
      (:maintainer "Magnar Sveen" . "magnars@gmail.com")
      (:keywords "strings"))])
 (rtags .
	[(20190918 505)
	 nil "A front-end for rtags" single
	 ((:commit . "d3d4bc9b7b829d39628a1af96f06eb23ba48670c")
	  (:authors
	   ("Jan Erik Hanssen" . "jhanssen@gmail.com")
	   ("Anders Bakken" . "agbakken@gmail.com"))
	  (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	  (:url . "http://rtags.net"))])
 (rmsbolt .
	  [(20190508 609)
	   ((emacs
	     (25 1)))
	   "A compiler output viewer" tar
	   ((:commit . "7045b8116a0bf899a51e6d91a373a693faa310e1")
	    (:authors
	     ("Jay Kamat" . "jaygkamat@gmail.com"))
	    (:maintainer "Jay Kamat" . "jaygkamat@gmail.com")
	    (:keywords "compilation" "tools")
	    (:url . "http://gitlab.com/jgkamat/rmsbolt"))])
 (restart-emacs .
		[(20180601 1031)
		 nil "Restart emacs from within emacs" single
		 ((:commit . "9aa90d3df9e08bc420e1c9845ee3ff568e911bd9")
		  (:authors
		   ("Iqbal Ansari" . "iqbalansari02@yahoo.com"))
		  (:maintainer "Iqbal Ansari" . "iqbalansari02@yahoo.com")
		  (:keywords "convenience")
		  (:url . "https://github.com/iqbalansari/restart-emacs"))])
 (request-deferred .
		   [(20181129 317)
		    ((deferred
		       (0 3 1))
		     (request
		      (0 2 0)))
		    "Wrap request.el by deferred" single
		    ((:commit . "61b29734d7c44a594598a7674f2c6c575462dd4b")
		     (:authors
		      ("Takafumi Arakaki <aka.tkf at gmail.com>"))
		     (:maintainer "Takafumi Arakaki <aka.tkf at gmail.com>")
		     (:url . "https://github.com/tkf/emacs-request"))])
 (request .
	  [(20190923 1502)
	   ((emacs
	     (24 4)))
	   "Compatible layer for URL request in Emacs" single
	   ((:commit . "61b29734d7c44a594598a7674f2c6c575462dd4b")
	    (:authors
	     ("Takafumi Arakaki <aka.tkf at gmail.com>"))
	    (:maintainer "Takafumi Arakaki <aka.tkf at gmail.com>")
	    (:url . "https://github.com/tkf/emacs-request"))])
 (realgud .
	  [(20190912 744)
	   ((load-relative
	     (1 3 1))
	    (loc-changes
	     (1 2))
	    (test-simple
	     (1 3 0))
	    (emacs
	     (25)))
	   "A modular front-end for interacting with external debuggers" tar
	   ((:commit . "cc5d1236879a2dcdd91c9a842987f2f5a3accd11")
	    (:authors
	     ("Rocky Bernstein" . "rocky@gnu.org"))
	    (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
	    (:keywords "debugger" "gdb" "python" "perl" "go" "bash" "zsh" "bashdb" "zshdb" "remake" "trepan" "perldb" "pdb")
	    (:url . "http://github.com/realgud/realgud/"))])
 (rcirc-styles .
	       [(20160207 250)
		((cl-lib
		  (0 5)))
		"support mIRC-style color and attribute codes" single
		((:commit . "f313bf6a7470bed314b27c7a40558cb787d7bc67"))])
 (rainbow-delimiters .
		     [(20170929 1132)
		      nil "Highlight brackets according to their depth" single
		      ((:commit . "e561cff4abf97d00d9b2b5f10256d417182e2772")
		       (:authors
			("Jeremy Rayman" . "opensource@jeremyrayman.com")
			("Fanael Linithien" . "fanael4@gmail.com"))
		       (:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		       (:keywords "faces" "convenience" "lisp" "tools")
		       (:url . "https://github.com/Fanael/rainbow-delimiters"))])
 (quelpa-use-package .
		     [(20190210 1838)
		      ((emacs
			(24 3))
		       (quelpa
			(0))
		       (use-package
			(2)))
		      "quelpa handler for use-package" single
		      ((:commit . "6f3cc87caa6cb8795079c5cab3c6665970859098")
		       (:authors
			("steckerhalter"))
		       (:maintainer "steckerhalter")
		       (:keywords "package" "management" "elpa" "use-package")
		       (:url . "https://framagit.org/steckerhalter/quelpa-use-package"))])
 (pyvenv .
	 [(20190916 1037)
	  nil "Python virtual environment interface" single
	  ((:commit . "392e28dad42dc6cc9507e496391a32482f9f1881")
	   (:authors
	    ("Jorgen Schaefer" . "contact@jorgenschaefer.de"))
	   (:maintainer "Jorgen Schaefer" . "contact@jorgenschaefer.de")
	   (:keywords "python" "virtualenv" "tools")
	   (:url . "http://github.com/jorgenschaefer/pyvenv"))])
 (pythonic .
	   [(20190725 1258)
	    ((emacs
	      (25))
	     (s
	      (1 9))
	     (f
	      (0 17 2)))
	    "Utility functions for writing pythonic emacs package." single
	    ((:commit . "1ba07048cffa0f95d7d1c75eab2d2be175e67cb6")
	     (:authors
	      ("Artem Malyshev" . "proofit404@gmail.com"))
	     (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	     (:url . "https://github.com/proofit404/pythonic"))])
 (python-info .
	      [(20151228 1852)
	       nil "Python info manual for Emacs" tar
	       ((:commit . "306f15441b54b25757cdfd3b327b84024ea21ed7"))])
 (pytest .
	 [(20181005 1524)
	  ((s
	    (1 9 0)))
	  "Easy Python test running in Emacs" single
	  ((:commit . "1bfa7549001e61ecd59cd6eae7c6656a924d1ba4")
	   (:keywords "pytest" "python" "testing")
	   (:url . "https://github.com/ionrock/pytest-el"))])
 (pyenv-mode .
	     [(20170801 2348)
	      ((pythonic
		(0 1 0)))
	      "Integrate pyenv with python-mode" single
	      ((:commit . "aec6f2aa289f6aed974f053c081143758dd142fb")
	       (:authors
		("Artem Malyshev" . "proofit404@gmail.com"))
	       (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	       (:url . "https://github.com/proofit404/pyenv-mode"))])
 (py-isort .
	   [(20160925 1018)
	    nil "Use isort to sort the imports in a Python buffer" single
	    ((:commit . "e67306f459c47c53a65604e4eea88a3914596560")
	     (:authors
	      ("Friedrich Paetzke" . "paetzke@fastmail.fm"))
	     (:maintainer "Friedrich Paetzke" . "paetzke@fastmail.fm")
	     (:url . "http://paetzke.me/project/py-isort.el"))])
 (pug-mode .
	   [(20180513 2126)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "Major mode for jade/pug template files" single
	    ((:commit . "685fd3414d89736bf232f5d1a6bed9e0353b98fe")
	     (:authors
	      ("Nathan Weizenbaum"))
	     (:maintainer "Henrik Lissner" . "henrik@lissner.net")
	     (:keywords "markup" "language" "jade" "pug")
	     (:url . "https://github.com/hlissner/emacs-pug-mode"))])
 (promise .
	  [(20190711 328)
	   ((emacs
	     (25))
	    (async
	     (1 9)))
	   "Promises/A+" tar
	   ((:commit . "99fdb3b7efb813af41f825b24d0615d603baeede")
	    (:authors
	     ("chuntaro" . "chuntaro@sakura-games.jp"))
	    (:maintainer "chuntaro" . "chuntaro@sakura-games.jp")
	    (:keywords "async" "promise" "convenience")
	    (:url . "https://github.com/chuntaro/emacs-promise"))])
 (projectile .
	     [(20190904 1025)
	      ((emacs
		(25 1))
	       (pkg-info
		(0 4)))
	      "Manage and navigate projects in Emacs easily" single
	      ((:commit . "0707fc4fd6cb10959bede0d321a915a959c466aa")
	       (:authors
		("Bozhidar Batsov" . "bozhidar@batsov.com"))
	       (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com")
	       (:keywords "project" "convenience")
	       (:url . "https://github.com/bbatsov/projectile"))])
 (pretty-hydra .
	       [(20190715 937)
		((hydra
		  (0 15 0))
		 (s
		  (1 12 0))
		 (dash
		  (2 15 0))
		 (dash-functional
		  (1 2 0))
		 (emacs
		  (24)))
		"A macro for creating nice-looking hydras" single
		((:commit . "d9fb688dae3e134bb1ff7f35474c58f33a5bb992")
		 (:authors
		  ("Jerry Peng" . "pr2jerry@gmail.com"))
		 (:maintainer "Jerry Peng" . "pr2jerry@gmail.com")
		 (:url . "https://github.com/jerrypnz/major-mode-hydra.el"))])
 (prettier-js .
	      [(20180109 726)
	       nil "Minor mode to format JS code on file save" single
	       ((:commit . "e9b73e81d3e1642aec682195f127a42dfb0b5774")
		(:authors
		 ("James Long and contributors"))
		(:maintainer "James Long and contributors")
		(:keywords "convenience" "wp" "edit" "js")
		(:url . "https://github.com/prettier/prettier-emacs"))])
 (powerthesaurus .
		 [(20190721 805)
		  ((emacs
		    (24))
		   (request
		    (0 3 0))
		   (s
		    (1 12 0))
		   (jeison
		    (1 0 0)))
		  "Powerthesaurus integration" single
		  ((:commit . "81a262ec0c9294ad377bafc6cc4e6d91b461acb6")
		   (:keywords "convenience" "writing")
		   (:url . "http://github.com/SavchenkoValeriy/emacs-powerthesaurus"))])
 (powerline .
	    [(20190323 213)
	     ((cl-lib
	       (0 2)))
	     "Rewrite of Powerline" tar
	     ((:commit . "6ef4a06c3c583045accbc957b6f449b7c0c57cd8")
	      (:authors
	       ("Donald Ephraim Curtis" . "dcurtis@milkbox.net"))
	      (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net")
	      (:keywords "mode-line")
	      (:url . "http://github.com/milkypostman/powerline/"))])
 (pos-tip .
	  [(20150318 1513)
	   nil "Show tooltip at point" single
	   ((:commit . "051e08fec5cf30b7574bdf439f79fef7d42d689d")
	    (:authors
	     ("S. Irie"))
	    (:maintainer "S. Irie")
	    (:keywords "tooltip"))])
 (popwin .
	 [(20150315 1300)
	  nil "Popup Window Manager." single
	  ((:commit . "95dea14c60019d6cccf9a3b33e0dec4e1f22c304")
	   (:authors
	    ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	   (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	   (:keywords "convenience"))])
 (popup .
	[(20160709 1429)
	 ((cl-lib
	   (0 5)))
	 "Visual Popup User Interface" single
	 ((:commit . "80829dd46381754639fb764da11c67235fe63282")
	  (:authors
	   ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	  (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	  (:keywords "lisp"))])
 (polymode .
	   [(20190714 2017)
	    ((emacs
	      (25)))
	    "Extensible framework for multiple major modes" tar
	    ((:commit . "01232ad3800e974938199c9ac07fad57fcec540c")
	     (:authors
	      ("Vitalie Spinu"))
	     (:maintainer "Vitalie Spinu")
	     (:keywords "languages" "multi-modes" "processes")
	     (:url . "https://github.com/vitoshka/polymode"))])
 (pkg-info .
	   [(20150517 1143)
	    ((epl
	      (0 8)))
	    "Information about packages" single
	    ((:commit . "76ba7415480687d05a4353b27fea2ae02b8d9d61")
	     (:authors
	      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	     (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
	     (:keywords "convenience")
	     (:url . "https://github.com/lunaryorn/pkg-info.el"))])
 (pippel .
	 [(20180710 856)
	  ((emacs
	    (25 1))
	   (s
	    (1 11 0))
	   (dash
	    (2 12 0)))
	  "Frontend to python package manager pip" tar
	  ((:commit . "21a5200e8e5ccaa1911abb4ebf090b76ca839756")
	   (:authors
	    ("Fritz Stelzer" . "brotzeitmacher@gmail.com"))
	   (:maintainer "Fritz Stelzer" . "brotzeitmacher@gmail.com")
	   (:url . "https://github.com/brotzeitmacher/pippel"))])
 (pipenv .
	 [(20190919 2147)
	  ((emacs
	    (25 1))
	   (f
	    (0 19 0))
	   (s
	    (1 12 0))
	   (pyvenv
	    (1 20)))
	  "A Pipenv porcelain." single
	  ((:commit . "b730bb509e8b60af9f5ab1f1e6c3458d1d95d789")
	   (:authors
	    ("Paul Walsh" . "paulywalsh@gmail.com"))
	   (:maintainer "Paul Walsh" . "paulywalsh@gmail.com")
	   (:url . "https://github.com/pwalsh/pipenv.el"))])
 (pip-requirements .
		   [(20181027 1629)
		    ((dash
		      (2 8 0)))
		    "A major mode for editing pip requirements files." single
		    ((:commit . "216cd1690f80cc965d4ae47b8753fc185f778ff6")
		     (:authors
		      ("Wilfred Hughes" . "me@wilfred.me.uk"))
		     (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (pfuture .
	  [(20190505 1006)
	   ((emacs
	     (25 2)))
	   "a simple wrapper around asynchronous processes" single
	   ((:commit . "368254ee30692c709400db413c347e18e76a8a55")
	    (:authors
	     ("Alexander Miller" . "alexanderm@web.de"))
	    (:maintainer "Alexander Miller" . "alexanderm@web.de")
	    (:url . "https://github.com/Alexander-Miller/pfuture"))])
 (persp-mode .
	     [(20190511 1402)
	      nil "windows/buffers sets shared among frames + save/load." single
	      ((:commit . "e330e6240bbb82589077f30472b05b95d1ff430d")
	       (:authors
		("Constantin Kulikov (Bad_ptr)" . "zxnotdead@gmail.com"))
	       (:maintainer "Constantin Kulikov (Bad_ptr)" . "zxnotdead@gmail.com")
	       (:keywords "perspectives" "session" "workspace" "persistence" "windows" "buffers" "convenience")
	       (:url . "https://github.com/Bad-ptr/persp-mode.el"))])
 (pcre2el .
	  [(20161120 2103)
	   ((emacs
	     (24))
	    (cl-lib
	     (0 3)))
	   "regexp syntax converter" single
	   ((:commit . "0b5b2a2c173aab3fd14aac6cf5e90ad3bf58fa7d")
	    (:authors
	     ("joddie <jonxfield at gmail.com>"))
	    (:maintainer "joddie <jonxfield at gmail.com>")
	    (:url . "https://github.com/joddie/pcre2el"))])
 (pcmpl-git .
	    [(20170121 59)
	     nil "pcomplete for git" tar
	     ((:commit . "9472ac70baeda025ef7becd1cf141d72aec93f32")
	      (:authors
	       ("Leo Liu" . "sdl.web@gmail.com"))
	      (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	      (:keywords "tools"))])
 (pcache .
	 [(20170105 2214)
	  ((eieio
	    (1 3)))
	  "persistent caching for Emacs." single
	  ((:commit . "1f8086077d770e524492e6fa59b07856e85a6fea")
	   (:authors
	    ("Yann Hodique" . "yann.hodique@gmail.com"))
	   (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (password-store .
		 [(20190916 2027)
		  ((emacs
		    (25))
		   (f
		    (0 11 0))
		   (s
		    (1 9 0))
		   (with-editor
		    (2 5 11))
		   (auth-source-pass
		    (5 0 0)))
		  "Password store (pass) support" single
		  ((:commit . "e74a1c738f7cda65c7a308e30e8d122f853d6f70")
		   (:authors
		    ("Svend Sorensen" . "svend@svends.net"))
		   (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
		   (:keywords "tools" "pass" "password" "password-store")
		   (:url . "https://www.passwordstore.org/"))])
 (password-generator .
		     [(20150222 2040)
		      nil "Password generator for humans. Good, Bad, Phonetic passwords included." single
		      ((:commit . "904cdb591a04305ba882ce19e1d117f5fa60f7d3")
		       (:authors
			("Zargener" . "zargener@gmail.com"))
		       (:maintainer "Zargener" . "zargener@gmail.com")
		       (:url . "http://github.com/zargener/emacs-password-genarator"))])
 (parent-mode .
	      [(20150824 2300)
	       nil "get major mode's parent modes" single
	       ((:commit . "db692cf08deff2f0e973e6e86e26662b44813d1b")
		(:authors
		 ("Fanael Linithien" . "fanael4@gmail.com"))
		(:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		(:url . "https://github.com/Fanael/parent-mode"))])
 (paredit .
	  [(20171127 205)
	   nil "minor mode for editing parentheses" single
	   ((:commit . "acbe10fdd85d2e91831adf70b6a828bc7e900da0")
	    (:authors
	     ("Taylor R. Campbell" . "campbell+paredit@mumble.net"))
	    (:maintainer "Taylor R. Campbell" . "campbell+paredit@mumble.net")
	    (:keywords "lisp"))])
 (paradox .
	  [(20190624 41)
	   ((emacs
	     (24 4))
	    (seq
	     (1 7))
	    (let-alist
		(1 0 3))
	    (spinner
	     (1 7 3))
	    (hydra
	     (0 13 2)))
	   "A modern Packages Menu. Colored, with package ratings, and customizable." tar
	   ((:commit . "1b9e4b198e0a02773b52f6fe4fd03a82340c6cbc")
	    (:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:keywords "package" "packages")
	    (:url . "https://github.com/Malabarba/paradox"))])
 (pacmacs .
	  [(20160131 832)
	   ((emacs
	     (24 4))
	    (dash
	     (2 11 0))
	    (dash-functional
	     (1 2 0))
	    (cl-lib
	     (0 5))
	    (f
	     (0 18 0)))
	   "Pacman for Emacs" tar
	   ((:commit . "d813e9c62c2540fe619234824fc60e128c786442")
	    (:authors
	     ("Codingteam" . "codingteam@conference.jabber.ru"))
	    (:maintainer "Alexey Kutepov" . "reximkut@gmail.com")
	    (:url . "http://github.com/codingteam/pacmacs.el"))])
 (packed .
	 [(20180318 1729)
	  ((emacs
	    (24 3)))
	  "package manager agnostic Emacs Lisp package utilities" single
	  ((:commit . "f350cc446c65b85bcc213265cd6dcadee1568762")
	   (:authors
	    ("Jonas Bernoulli" . "jonas@bernoul.li"))
	   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	   (:keywords "compile" "convenience" "lisp" "package" "library")
	   (:url . "https://github.com/emacscollective/packed"))])
 (package-lint .
	       [(20190923 8)
		((cl-lib
		  (0 5))
		 (emacs
		  (24)))
		"A linting library for elisp package authors" single
		((:commit . "f2899cac84689d687cf62c61ae9ec587febaf225")
		 (:authors
		  ("Steve Purcell" . "steve@sanityinc.com")
		  ("Fanael Linithien" . "fanael4@gmail.com"))
		 (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		 (:keywords "lisp")
		 (:url . "https://github.com/purcell/package-lint"))])
 (p4 .
     [(20150721 1937)
      nil "Simple Perforce-Emacs Integration" single
      ((:commit . "eff047caa75dbe4965defca9d1212454cdb755d5")
       (:authors
	("Gareth Rees" . "gdr@garethrees.org"))
       (:maintainer "Gareth Rees" . "gdr@garethrees.org")
       (:url . "https://github.com/gareth-rees/p4.el"))])
 (ox-reveal .
	    [(20190918 1627)
	     ((org
	       (8 3)))
	     "reveal.js Presentation Back-End for Org Export Engine" single
	     ((:commit . "9f9da186716b1d4fc6f3af78f3c57af636699e22")
	      (:authors
	       ("Yujie Wen <yjwen.ty at gmail dot com>"))
	      (:maintainer "Yujie Wen <yjwen.ty at gmail dot com>")
	      (:keywords "outlines" "hypermedia" "slideshow" "presentation"))])
 (ox-gfm .
	 [(20170628 1402)
	  nil "Github Flavored Markdown Back-End for Org Export Engine" single
	  ((:commit . "99f93011b069e02b37c9660b8fcb45dab086a07f")
	   (:keywords "org" "wp" "markdown" "github")
	   (:authors
	    ("Lars Tveito"))
	   (:maintainer "Lars Tveito"))])
 (overseer .
	   [(20180226 619)
	    ((emacs
	      (24))
	     (dash
	      (2 10 0))
	     (pkg-info
	      (0 4))
	     (f
	      (0 18 1)))
	    "Ert-runner Integration Into Emacs" single
	    ((:commit . "02d49f582e80e36b4334c9187801c5ecfb027789")
	     (:authors
	      ("Samuel Tonini" . "tonini.samuel@gmail.com"))
	     (:maintainer "Samuel Tonini" . "tonini.samuel@gmail.com")
	     (:url . "http://www.github.com/tonini/overseer.el"))])
 (outshine .
	   [(20190717 1147)
	    ((outorg
	      (2 0))
	     (cl-lib
	      (0 5)))
	    "outline with outshine outshines outline" tar
	    ((:commit . "4c6107da8fd6119ba1b2379cd2f68c8c7374e8d5")
	     (:authors
	      ("Thorsten Jolitz"))
	     (:maintainer "Thibault Polge" . "thibault@thb.lt")
	     (:keywords "convenience" "outlines" "org")
	     (:url . "https://github.com/alphapapa/outshine"))])
 (outorg .
	 [(20190720 2002)
	  ((emacs
	    (24 4)))
	  "Org-style comment editing" single
	  ((:commit . "ef0f86f4b893b30be8bcf8b43a5ec357a6c70f07")
	   (:maintainer "Adam Porter" . "adam@alphapapa.net")
	   (:url . "https://github.com/alphapapa/outorg"))])
 (osx-lib .
	  [(20160920 0)
	   ((emacs
	     (24 4)))
	   "Basic function for Apple/OSX." single
	   ((:commit . "fdbbb41e07ba64d6a09b54bd142a7c7b83bfd09f")
	    (:authors
	     ("Raghav Kumar Gautam" . "raghav@apache.org"))
	    (:maintainer "Raghav Kumar Gautam" . "raghav@apache.org")
	    (:keywords "apple" "applescript" "osx" "finder" "emacs" "elisp" "vpn" "speech"))])
 (orgit .
	[(20190717 1526)
	 ((emacs
	   (25 1))
	  (dash
	   (2 14 1))
	  (magit
	   (2 90 0))
	  (org
	   (9 3)))
	 "support for Org links to Magit buffers" single
	 ((:commit . "1e578f8cf97b07835f02858f05a094ae9a5e99bb")
	  (:authors
	   ("Jonas Bernoulli" . "jonas@bernoul.li"))
	  (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	  (:url . "https://github.com/magit/orgit"))])
 (org-tree-slide .
		 [(20190729 1550)
		  nil "A presentation tool for org-mode" single
		  ((:commit . "036a36eec1cf712d3db155572aed325daa372eb5")
		   (:authors
		    ("Takaaki ISHIKAWA <takaxp at ieee dot org>"))
		   (:maintainer "Takaaki ISHIKAWA <takaxp at ieee dot org>")
		   (:keywords "convenience" "org-mode" "presentation" "narrowing")
		   (:url . "https://github.com/takaxp/org-tree-slide"))])
 (org-tanglesync .
		 [(20190926 1345)
		  ((emacs
		    (24 4)))
		  "Syncing org src blocks with tangled external files" single
		  ((:commit . "d99181f173b4e55b4e835d99fcd415e62beb047f")
		   (:authors
		    ("Mehmet Tekman"))
		   (:maintainer "Mehmet Tekman")
		   (:keywords "outlines")
		   (:url . "https://github.com/mtekman/org-tanglesync.el"))])
 (org-super-agenda .
		   [(20190925 958)
		    ((emacs
		      (26 1))
		     (s
		      (1 10 0))
		     (dash
		      (2 13))
		     (org
		      (9 0))
		     (ht
		      (2 2))
		     (ts
		      (0 2)))
		    "Supercharge your agenda" tar
		    ((:commit . "a87ca11fbbe72ab6c1c4c3b55ae9e1e93ebfb8ba")
		     (:authors
		      ("Adam Porter" . "adam@alphapapa.net"))
		     (:maintainer "Adam Porter" . "adam@alphapapa.net")
		     (:keywords "hypermedia" "outlines" "org" "agenda")
		     (:url . "http://github.com/alphapapa/org-super-agenda"))])
 (org-re-reveal .
		[(20190928 1343)
		 ((emacs
		   (24 4))
		  (org
		   (8 3))
		  (htmlize
		   (1 34)))
		 "Org export to reveal.js presentations" tar
		 ((:commit . "26e18f65b461ed347436029cd10c6bf39a281c1a")
		  (:keywords "tools" "outlines" "hypermedia" "slideshow" "presentation" "oer")
		  (:url . "https://gitlab.com/oer/org-re-reveal"))])
 (org-projectile .
		 [(20190130 1439)
		  ((projectile
		    (0 11 0))
		   (dash
		    (2 10 0))
		   (emacs
		    (24))
		   (s
		    (1 9 0))
		   (org-category-capture
		    (0 0 0)))
		  "Repository todo management for org-mode" single
		  ((:commit . "de37d0094791ab1146276904f3a37eba699e0b60")
		   (:authors
		    ("Ivan Malison" . "IvanMalison@gmail.com"))
		   (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
		   (:keywords "org-mode" "projectile" "todo" "tools" "outlines")
		   (:url . "https://github.com/IvanMalison/org-projectile"))])
 (org-present .
	      [(20180303 2330)
	       ((org
		 (7)))
	       "Minimalist presentation minor-mode for Emacs org-mode." single
	       ((:commit . "d13acd70eff6a1608bc991920232146a0de76b21")
		(:authors
		 ("Ric Lister"))
		(:maintainer "Ric Lister")
		(:url . "https://github.com/rlister/org-present"))])
 (org-pomodoro .
	       [(20190530 1445)
		((alert
		  (0 5 10))
		 (cl-lib
		  (0 5)))
		"Pomodoro implementation for org-mode." tar
		((:commit . "aa07c11318f91219336197e62c47bc7a3d090479")
		 (:authors
		  ("Arthur Leonard Andersen" . "leoc.git@gmail.com"))
		 (:maintainer "Arthur Leonard Andersen" . "leoc.git@gmail.com")
		 (:url . "https://github.com/lolownia/org-pomodoro"))])
 (org-pdfview .
	      [(20180225 1006)
	       ((org
		 (8 2 10))
		(pdf-tools
		 (0 80)))
	       "Support for links to documents in pdfview mode" single
	       ((:commit . "8b71f313634b95a1fac42fc701934fd796565f3b")
		(:authors
		 ("Markus Hauck" . "markus1189@gmail.com"))
		(:maintainer "Markus Hauck" . "markus1189@gmail.com")
		(:keywords "org" "pdf-view" "pdf-tools"))])
 (org-mime .
	   [(20190805 57)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "org html export for text/html MIME emails" single
	    ((:commit . "4bd5d55ba9bca84ffd938b477c72d701cf3736df")
	     (:authors
	      ("Eric Schulte"))
	     (:maintainer "Chen Bin (redguardtoo)")
	     (:keywords "mime" "mail" "email" "html")
	     (:url . "http://github.com/org-mime/org-mime"))])
 (org-download .
	       [(20190830 1448)
		((async
		  (1 2)))
		"Image drag-and-drop for Emacs org-mode" single
		((:commit . "10c9d7c8eed928c88a896310c882e3af4d8d0f61")
		 (:authors
		  ("Oleh Krehel"))
		 (:maintainer "Oleh Krehel")
		 (:keywords "images" "screenshots" "download")
		 (:url . "https://github.com/abo-abo/org-download"))])
 (org-cliplink .
	       [(20190608 2134)
		((emacs
		  (24 4)))
		"insert org-mode links from the clipboard" tar
		((:commit . "82402cae7e118d67de7328417fd018a18f95fac2")
		 (:authors
		  ("Alexey Kutepov" . "reximkut@gmail.com"))
		 (:maintainer "Alexey Kutepov" . "reximkut@gmail.com")
		 (:url . "http://github.com/rexim/org-cliplink"))])
 (org-category-capture .
		       [(20180601 242)
			((org
			  (9 0 0))
			 (emacs
			  (24)))
			"Contextualy capture of org-mode TODOs." single
			((:commit . "de37d0094791ab1146276904f3a37eba699e0b60")
			 (:authors
			  ("Ivan Malison" . "IvanMalison@gmail.com"))
			 (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
			 (:keywords "org-mode" "todo" "tools" "outlines")
			 (:url . "https://github.com/IvanMalison/org-projectile"))])
 (org-bullets .
	      [(20190802 927)
	       nil "Show bullets in org-mode as UTF-8 characters" single
	       ((:commit . "c19b13be00df8d8dc596e4f1aef4a094b08ac801")
		(:authors
		 ("sabof"))
		(:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		(:url . "https://github.com/emacsorphanage/org-bullets"))])
 (org-brain .
	    [(20190922 1414)
	     ((emacs
	       (25))
	      (org
	       (9 2)))
	     "Org-mode concept mapping" single
	     ((:commit . "1f86e92c72cf52b75695c99572eeace7405caf96")
	      (:authors
	       ("Erik Sjöstrand" . "sjostrand.erik@gmail.com"))
	      (:maintainer "Erik Sjöstrand" . "sjostrand.erik@gmail.com")
	      (:keywords "outlines" "hypermedia")
	      (:url . "http://github.com/Kungsgeten/org-brain"))])
 (open-junk-file .
		 [(20161210 1114)
		  nil "Open a junk (memo) file to try-and-error" single
		  ((:commit . "558bec7372b0fed4c4cb6074ab906535fae615bd")
		   (:authors
		    ("rubikitch" . "rubikitch@ruby-lang.org"))
		   (:maintainer "rubikitch" . "rubikitch@ruby-lang.org")
		   (:keywords "convenience" "tools")
		   (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/open-junk-file.el"))])
 (ob-ipython .
	     [(20180224 953)
	      ((s
		(1 9 0))
	       (dash
		(2 10 0))
	       (dash-functional
		(1 2 0))
	       (f
		(0 17 2))
	       (emacs
		(24)))
	      "org-babel functions for IPython evaluation" tar
	      ((:commit . "7147455230841744fb5b95dcbe03320313a77124")
	       (:authors
		("Greg Sexton" . "gregsexton@gmail.com"))
	       (:maintainer "Greg Sexton" . "gregsexton@gmail.com")
	       (:keywords "literate programming" "reproducible research")
	       (:url . "http://www.gregsexton.org"))])
 (nose .
       [(20140520 1648)
	nil "Easy Python test running in Emacs" single
	((:commit . "194d7789bf797f31ea0adc45f08beb66ae9ea98e")
	 (:keywords "nose" "python" "testing"))])
 (nodejs-repl .
	      [(20190616 1753)
	       nil "Run Node.js REPL" single
	       ((:commit . "d43b8b276a90ccf980150a7d6fbb1f4d2a7cbe20")
		(:authors
		 ("Takeshi Arabiki"))
		(:maintainer "Takeshi Arabiki"))])
 (neotree .
	  [(20181121 2026)
	   ((cl-lib
	     (0 5)))
	   "A tree plugin like NerdTree for Vim" tar
	   ((:commit . "c2420a4b344a9337760981c451783f0ff9df8bbf")
	    (:authors
	     ("jaypei" . "jaypei97159@gmail.com"))
	    (:maintainer "jaypei" . "jaypei97159@gmail.com")
	    (:url . "https://github.com/jaypei/emacs-neotree"))])
 (navi-mode .
	    [(20190720 2003)
	     ((outshine
	       (2 0))
	      (outorg
	       (2 0)))
	     "major-mode for easy buffer-navigation" single
	     ((:commit . "7eb7cf0c4a6ee537ec462f5ec90f00d12e3ca9c2")
	      (:maintainer "Adam Porter" . "adam@alphapapa.net")
	      (:url . "https://github.com/alphapapa/navi"))])
 (nameless .
	   [(20190429 1202)
	    ((emacs
	      (24 4)))
	    "Hide package namespace in your emacs-lisp code" single
	    ((:commit . "a3a1ce3ec0c5724bcbfe553d831bd4f6b3fe863a")
	     (:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	     (:keywords "convenience" "lisp")
	     (:url . "https://github.com/Malabarba/nameless"))])
 (multiple-cursors .
		   [(20190820 749)
		    ((cl-lib
		      (0 5)))
		    "Multiple cursors for Emacs." tar
		    ((:commit . "b9b851a7670f4348f3a08b11ef12ed99676c8b84"))])
 (multi-term .
	     [(20190624 1147)
	      nil "Managing multiple terminal buffers in Emacs." single
	      ((:commit . "0804b11e52b960c80f5cd0712ee1e53ae70d83a4")
	       (:authors
		("Andy Stewart" . "lazycat.manatee@gmail.com"))
	       (:maintainer "Andy Stewart" . "lazycat.manatee@gmail.com")
	       (:keywords "term" "terminal" "multiple buffer")
	       (:url . "http://www.emacswiki.org/emacs/download/multi-term.el"))])
 (move-text .
	    [(20170909 330)
	     nil "Move current line or region with M-up or M-down." single
	     ((:commit . "7cbc941a9150468609010a93c429117da2523903")
	      (:authors
	       ("Jason Milkins" . "jasonm23@gmail.com"))
	      (:maintainer "Jason Milkins" . "jasonm23@gmail.com")
	      (:keywords "edit")
	      (:url . "https://github.com/emacsfodder/move-text"))])
 (memoize .
	  [(20190915 37)
	   nil "Memoization functions" single
	   ((:commit . "8c1e5569550e783dd7814735e22c935416c4462d")
	    (:authors
	     ("Christopher Wellons" . "mosquitopsu@gmail.com"))
	    (:maintainer "Christopher Wellons" . "mosquitopsu@gmail.com")
	    (:url . "https://github.com/skeeto/emacs-memoize"))])
 (marshal .
	  [(20180124 1239)
	   ((eieio
	     (1 4))
	    (json
	     (1 3))
	    (ht
	     (2 1)))
	   "eieio extension for automatic (un)marshalling" single
	   ((:commit . "f038689cbd5b3680b80b44edd0c7a63ca3038e26")
	    (:authors
	     ("Yann Hodique" . "hodiquey@vmware.com"))
	    (:maintainer "Yann Hodique" . "hodiquey@vmware.com")
	    (:keywords "eieio")
	    (:url . "https://github.com/sigma/marshal.el"))])
 (markdown-toc .
	       [(20170711 1949)
		((s
		  (1 9 0))
		 (dash
		  (2 11 0))
		 (markdown-mode
		  (2 1)))
		"A simple TOC generator for markdown file" tar
		((:commit . "7038f4f6d5c2bc7e4aea89699a607ac2b7dd16a8"))])
 (markdown-mode .
		[(20190802 2215)
		 ((emacs
		   (24 4))
		  (cl-lib
		   (0 5)))
		 "Major mode for Markdown-formatted text" single
		 ((:commit . "f3c54e34cc5228001af36a5301883325319f21d4")
		  (:authors
		   ("Jason R. Blevins" . "jblevins@xbeta.org"))
		  (:maintainer "Jason R. Blevins" . "jblevins@xbeta.org")
		  (:keywords "markdown" "github flavored markdown" "itex")
		  (:url . "https://jblevins.org/projects/markdown-mode/"))])
 (manage-minor-mode .
		    [(20140310 1600)
		     ((emacs
		       (24 3)))
		     "Manage your minor-modes easily" single
		     ((:commit . "1bed33b0752380b548b822fe72e6858c5fe70c8e")
		      (:authors
		       ("Shingo Fukuyama - http://fukuyama.co"))
		      (:maintainer "Shingo Fukuyama - http://fukuyama.co")
		      (:keywords "minor-mode" "manage" "emacs")
		      (:url . "https://github.com/ShingoFukuyama/manage-minor-mode"))])
 (major-mode-hydra .
		   [(20190814 952)
		    ((dash
		      (2 15 0))
		     (pretty-hydra
		      (0 2 0))
		     (emacs
		      (25)))
		    "Major mode keybindings managed by Hydra" single
		    ((:commit . "d9fb688dae3e134bb1ff7f35474c58f33a5bb992")
		     (:authors
		      ("Jerry Peng" . "pr2jerry@gmail.com"))
		     (:maintainer "Jerry Peng" . "pr2jerry@gmail.com")
		     (:url . "https://github.com/jerrypnz/major-mode-hydra.el"))])
 (magithub .
	   [(20190512 2316)
	    ((emacs
	      (25))
	     (magit
	      (2 12))
	     (s
	      (1 12 0))
	     (ghub+
	      (0 3))
	     (git-commit
	      (2 12))
	     (markdown-mode
	      (2 3)))
	    "Magit interfaces for GitHub" tar
	    ((:commit . "9fb9c653d0dad3da7ccff3ae321fa6e54c08f41b")
	     (:authors
	      ("Sean Allred" . "code@seanallred.com"))
	     (:maintainer "Sean Allred" . "code@seanallred.com")
	     (:keywords "git" "tools" "vc")
	     (:url . "https://github.com/vermiculus/magithub"))])
 (magit-svn .
	    [(20190821 1455)
	     ((emacs
	       (24 4))
	      (magit
	       (2 1 0)))
	     "Git-Svn extension for Magit" single
	     ((:commit . "2cff1a30a30f2b3963342a7d185ec13fc12279c3")
	      (:authors
	       ("Phil Jackson" . "phil@shellarchive.co.uk"))
	      (:maintainer "Phil Jackson" . "phil@shellarchive.co.uk")
	      (:keywords "vc" "tools"))])
 (magit-popup .
	      [(20190223 2234)
	       ((emacs
		 (24 4))
		(async
		 (1 9 2))
		(dash
		 (2 13 0)))
	       "Define prefix-infix-suffix command combos" tar
	       ((:commit . "4250c3a606011e3ff2477e3b5bbde2b493f3c85c")
		(:authors
		 ("Jonas Bernoulli" . "jonas@bernoul.li"))
		(:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		(:keywords "bindings")
		(:url . "https://github.com/magit/magit-popup"))])
 (magit-gitflow .
		[(20170929 824)
		 ((magit
		   (2 1 0))
		  (magit-popup
		   (2 2 0)))
		 "gitflow extension for magit" single
		 ((:commit . "cc41b561ec6eea947fe9a176349fb4f771ed865b")
		  (:authors
		   ("Jan Tatarik" . "Jan.Tatarik@gmail.com"))
		  (:maintainer "Jan Tatarik" . "Jan.Tatarik@gmail.com")
		  (:keywords "vc" "tools")
		  (:url . "https://github.com/jtatarik/magit-gitflow"))])
 (magit .
	[(20190928 1729)
	 ((emacs
	   (25 1))
	  (async
	   (20180527))
	  (dash
	   (20180910))
	  (git-commit
	   (20181104))
	  (transient
	   (20190812))
	  (with-editor
	   (20181103)))
	 "A Git porcelain inside Emacs." tar
	 ((:commit . "3add5310ba98b74bb3e7fb82dd259713a0c6606c")
	  (:keywords "git" "tools" "vc"))])
 (macrostep .
	    [(20161120 2106)
	     ((cl-lib
	       (0 5)))
	     "interactive macro expander" tar
	     ((:commit . "424e3734a1ee526a1bd7b5c3cd1d3ef19d184267")
	      (:authors
	       ("joddie" . "j.j.oddie@gmail.com"))
	      (:maintainer "joddie" . "j.j.oddie@gmail.com")
	      (:keywords "lisp" "languages" "macro" "debugging")
	      (:url . "https://github.com/joddie/macrostep"))])
 (lv .
     [(20190821 947)
      nil "Other echo area" single
      ((:commit . "435c55e9f75a8cf3ae6a4ba0c7725e3dc4e5963f")
       (:authors
	("Oleh Krehel"))
       (:maintainer "Oleh Krehel"))])
 (lsp-ui .
	 [(20190915 856)
	  ((emacs
	    (25 1))
	   (dash
	    (2 14))
	   (dash-functional
	    (1 2 0))
	   (lsp-mode
	    (6 0))
	   (markdown-mode
	    (2 3)))
	  "UI modules for lsp-mode" tar
	  ((:commit . "c8fa40c0f9c65877d1cabe1739e5f787adb24898")
	   (:authors
	    ("Sebastien Chapuis <sebastien@chapu.is>, Fangrui Song" . "i@maskray.me"))
	   (:maintainer "Sebastien Chapuis <sebastien@chapu.is>, Fangrui Song" . "i@maskray.me")
	   (:keywords "lsp")
	   (:url . "https://github.com/emacs-lsp/lsp-ui"))])
 (lsp-treemacs .
	       [(20190924 1757)
		((emacs
		  (25 1))
		 (dash
		  (2 14 1))
		 (dash-functional
		  (2 14 1))
		 (f
		  (0 20 0))
		 (ht
		  (2 0))
		 (treemacs
		  (2 5))
		 (lsp-mode
		  (6 0)))
		"LSP treemacs" tar
		((:commit . "76c304df80256bb3314b177af3db27cf2f527b87")
		 (:authors
		  ("Ivan Yonchovski"))
		 (:maintainer "Ivan Yonchovski")
		 (:keywords "languages")
		 (:url . "https://github.com/emacs-lsp/lsp-treemacs"))])
 (lsp-python-ms .
		[(20190911 1324)
		 ((cl-lib
		   (0 6 1))
		  (lsp-mode
		   (6 0))
		  (python
		   (0 26 1))
		  (json
		   (1 4))
		  (emacs
		   (24 4)))
		 "lsp-mode client for Microsoft python-language-server" single
		 ((:commit . "42222bacf09c4ca18302ac39d50ea09d196e2816")
		  (:authors
		   ("Charl Botha"))
		  (:maintainer "Andrew Christianson, Vincent Zhang")
		  (:keywords "languages" "tools")
		  (:url . "https://github.com/andrew-christianson/lsp-python-ms"))])
 (lsp-python .
	     [(20181107 2354)
	      ((lsp-mode
		(3 0)))
	      "Python support for lsp-mode" single
	      ((:commit . "9b67b63c4c8c53c77eda8b8081b8d458e655ba55")
	       (:keywords "python")
	       (:authors
		("Vibhav Pant" . "vibhavp@gmail.com"))
	       (:maintainer "Vibhav Pant" . "vibhavp@gmail.com")
	       (:url . "https://github.com/emacs-lsp/lsp-python"))])
 (lsp-mode .
	   [(20190927 1911)
	    ((emacs
	      (25 1))
	     (dash
	      (2 14 1))
	     (dash-functional
	      (2 14 1))
	     (f
	      (0 20 0))
	     (ht
	      (2 0))
	     (spinner
	      (1 7 3))
	     (markdown-mode
	      (2 3)))
	    "LSP mode" tar
	    ((:commit . "1899e6b05d1c9a21b20ff486f514a3c3fc03e079")
	     (:authors
	      ("Vibhav Pant, Fangrui Song, Ivan Yonchovski"))
	     (:maintainer "Vibhav Pant, Fangrui Song, Ivan Yonchovski")
	     (:keywords "languages")
	     (:url . "https://github.com/emacs-lsp/lsp-mode"))])
 (lsp-javascript-typescript .
			    [(20181218 2042)
			     ((lsp-mode
			       (3 0))
			      (typescript-mode
			       (0 1))
			      (emacs
			       (25 1)))
			     "Javascript/Typescript support for lsp-mode" single
			     ((:commit . "0a67626c383fa1ca64be3b994e5df3fe115c6f44")
			      (:keywords "languages" "tools")
			      (:authors
			       ("George Pittarelli" . "g@gjp.cc"))
			      (:maintainer "George Pittarelli" . "g@gjp.cc")
			      (:url . "https://github.com/emacs-lsp/lsp-javascript"))])
 (lorem-ipsum .
	      [(20190819 2042)
	       nil "Insert dummy pseudo Latin text." single
	       ((:commit . "da75c155da327c7a7aedb80f5cfe409984787049")
		(:authors
		 ("Jean-Philippe Theberge" . "jphil21@sourceforge.net"))
		(:maintainer "Joe Schafer" . "joe@jschaf.com")
		(:keywords "tools" "language" "convenience"))])
 (logito .
	 [(20120225 2055)
	  ((eieio
	    (1 3)))
	  "logging library for Emacs" single
	  ((:commit . "824acb89d2cc18cb47281a4fbddd81ad244a2052")
	   (:authors
	    ("Yann Hodique" . "yann.hodique@gmail.com"))
	   (:maintainer "Yann Hodique" . "yann.hodique@gmail.com")
	   (:keywords "lisp" "tool"))])
 (log4e .
	[(20170401 1304)
	 nil "provide logging framework for elisp" single
	 ((:commit . "c69424e407be0d9d0e54b427d8b18b1ac5a607e2")
	  (:authors
	   ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))
	  (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com")
	  (:keywords "log")
	  (:url . "https://github.com/aki2o/log4e"))])
 (livid-mode .
	     [(20131116 1344)
	      ((skewer-mode
		(1 5 3))
	       (s
		(1 8 0)))
	      "Live browser eval of JavaScript every time a buffer changes" single
	      ((:commit . "dfe5212fa64738bc4138bfebf349fbc8bc237c26")
	       (:authors
		("Murphy McMahon"))
	       (:maintainer "Murphy McMahon")
	       (:url . "https://github.com/pandeiro/livid-mode"))])
 (live-py-mode .
	       [(20190614 433)
		((emacs
		  (24 3)))
		"Live Coding in Python" tar
		((:commit . "4c378e4afdffb09ab3ca338d3b37d9a2b69d9584")
		 (:authors
		  ("Don Kirkby http://donkirkby.github.io"))
		 (:maintainer "Don Kirkby http://donkirkby.github.io")
		 (:keywords "live" "coding")
		 (:url . "http://donkirkby.github.io/live-py-plugin/"))])
 (lispy .
	[(20190925 1020)
	 ((emacs
	   (24 3))
	  (ace-window
	   (0 9 0))
	  (iedit
	   (0 9 9))
	  (counsel
	   (0 11 0))
	  (hydra
	   (0 14 0))
	  (zoutline
	   (0 1 0)))
	 "vi-like Paredit" tar
	 ((:commit . "17cfa867ae81d2024a242b17d7b61f5840c22ec0"))])
 (linum-relative .
		 [(20180124 1047)
		  nil "display relative line number in emacs." single
		  ((:commit . "c74a6981b688a5e1e6b8e0809363963ff558ce4d")
		   (:authors
		    ("coldnew" . "coldnew.tw@gmail.com"))
		   (:maintainer "coldnew" . "coldnew.tw@gmail.com")
		   (:keywords "converience")
		   (:url . "http://github.com/coldnew/linum-relative"))])
 (link-hint .
	    [(20190721 1844)
	     ((avy
	       (0 4 0))
	      (emacs
	       (24 1))
	      (cl-lib
	       (0 5)))
	     "Use avy to open, copy, etc. visible links." single
	     ((:commit . "4db4e6fb82bfffd00f540e3a489013f6a8173871")
	      (:authors
	       ("Fox Kiester" . "noct@posteo.net"))
	      (:maintainer "Fox Kiester" . "noct@posteo.net")
	      (:keywords "convenience" "url" "avy" "link" "links" "hyperlink")
	      (:url . "https://github.com/noctuid/link-hint.el"))])
 (levenshtein .
	      [(20090830 1040)
	       nil "Edit distance between two strings." single
	       ((:commit . "070925197ebf6b704e6e00c4f2d2ec783f3df38c")
		(:authors
		 ("Aaron S. Hawley <ashawley at uvm dot edu>,")
		 ("Art Taylor"))
		(:maintainer "Aaron S. Hawley <ashawley at uvm dot edu>,")
		(:keywords "lisp"))])
 (less-css-mode .
		[(20161001 453)
		 nil "Major mode for editing LESS CSS files (lesscss.org)" single
		 ((:commit . "c7fa3d56d83206b28657f2e56439dc62280a2bf2")
		  (:authors
		   ("Steve Purcell" . "steve@sanityinc.com"))
		  (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		  (:keywords "less" "css" "mode")
		  (:url . "https://github.com/purcell/less-css-mode"))])
 (key-chord .
	    [(20160227 1238)
	     nil "map pairs of simultaneously pressed keys to commands" single
	     ((:commit . "72443e9ff3c4f1c3ccaced3130236801efde3d83")
	      (:authors
	       ("David Andersson <l.david.andersson(at)sverige.nu>"))
	      (:maintainer "David Andersson <l.david.andersson(at)sverige.nu>")
	      (:keywords "keyboard" "chord" "input"))])
 (json-snatcher .
		[(20150512 347)
		 ((emacs
		   (24)))
		 "Grabs the path to JSON values in a JSON file" single
		 ((:commit . "c4cecc0a5051bd364373aa499c47a1bb7a5ac51c")
		  (:authors
		   ("Sterling Graham" . "sterlingrgraham@gmail.com"))
		  (:maintainer "Sterling Graham" . "sterlingrgraham@gmail.com")
		  (:url . "http://github.com/sterlingg/json-snatcher"))])
 (json-reformat .
		[(20160212 853)
		 nil "Reformatting tool for JSON" single
		 ((:commit . "8eb6668ed447988aea06467ba8f42e1f2178246f")
		  (:authors
		   ("Wataru MIYAGUNI" . "gonngo@gmail.com"))
		  (:maintainer "Wataru MIYAGUNI" . "gonngo@gmail.com")
		  (:keywords "json")
		  (:url . "https://github.com/gongo/json-reformat"))])
 (json-navigator .
		 [(20190131 1031)
		  ((emacs
		    (24 3))
		   (hierarchy
		    (0 6 0)))
		  "View and navigate JSON structures" single
		  ((:commit . "f4cde60c4203fc70cc7ff22ed1d6579159ce2598")
		   (:authors
		    ("Damien Cassou" . "damien@cassou.me"))
		   (:maintainer "Damien Cassou" . "damien@cassou.me")
		   (:url . "https://github.com/DamienCassou/json-navigator"))])
 (json-mode .
	    [(20190123 422)
	     ((json-reformat
	       (0 0 5))
	      (json-snatcher
	       (1 0 0)))
	     "Major mode for editing JSON files." single
	     ((:commit . "0e819e519ae17a2686e0881c4ca51fa873fa9b83")
	      (:authors
	       ("Josh Johnston"))
	      (:maintainer "Josh Johnston")
	      (:url . "https://github.com/joshwnj/json-mode"))])
 (js2-refactor .
	       [(20190630 2108)
		((js2-mode
		  (20101228))
		 (s
		  (1 9 0))
		 (multiple-cursors
		  (1 0 0))
		 (dash
		  (1 0 0))
		 (s
		  (1 0 0))
		 (yasnippet
		  (0 9 0 1)))
		"A JavaScript refactoring library for emacs." tar
		((:commit . "d4c40b5fc86d3edd7c6a7d83ac86483ee1cb7a28"))])
 (js2-mode .
	   [(20190815 1327)
	    ((emacs
	      (24 1))
	     (cl-lib
	      (0 5)))
	    "Improved JavaScript editing mode" tar
	    ((:commit . "b3841a7a304d9d1328fdb0868fbbecf0c2f9831f")
	     (:authors
	      ("Steve Yegge" . "steve.yegge@gmail.com")
	      ("mooz" . "stillpedant@gmail.com")
	      ("Dmitry Gutov" . "dgutov@yandex.ru"))
	     (:maintainer "Steve Yegge" . "steve.yegge@gmail.com")
	     (:keywords "languages" "javascript")
	     (:url . "https://github.com/mooz/js2-mode/"))])
 (js-doc .
	 [(20160715 434)
	  nil "Insert JsDoc style comment easily" single
	  ((:commit . "f0606e89d5aa89146f96edb38cf69af0068a9d1e")
	   (:authors
	    ("mooz" . "stillpedant@gmail.com"))
	   (:maintainer "mooz" . "stillpedant@gmail.com")
	   (:keywords "document" "comment")
	   (:url . "https://github.com/mooz/js-doc"))])
 (jeison .
	 [(20190721 1651)
	  ((emacs
	    (25 1))
	   (dash
	    (2 16 0)))
	  "A library for declarative JSON parsing" single
	  ((:commit . "66e276c1f2f08ca54d2cd60f2c9f974c662aae8b")
	   (:keywords "lisp" "json" "data-types")
	   (:url . "http://github.com/SavchenkoValeriy/jeison"))])
 (ivy-yasnippet .
		[(20181002 1655)
		 ((emacs
		   (24))
		  (ivy
		   (0 10 0))
		  (yasnippet
		   (0 12 2))
		  (dash
		   (2 14 1))
		  (cl-lib
		   (0)))
		 "Preview yasnippets with ivy" single
		 ((:commit . "32580b4fd23ebf9ca7dde96704f7d53df6e253cd")
		  (:authors
		   ("Michał Krzywkowski" . "k.michal@zoho.com"))
		  (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com")
		  (:keywords "convenience")
		  (:url . "https://github.com/mkcms/ivy-yasnippet"))])
 (ivy-xref .
	   [(20190611 1305)
	    ((emacs
	      (25 1))
	     (ivy
	      (0 10 0)))
	    "Ivy interface for xref results" single
	    ((:commit . "1a35fc0f070388701b05b0a455cbe262e924d547")
	     (:authors
	      ("Alex Murray" . "murray.alex@gmail.com"))
	     (:maintainer "Alex Murray" . "murray.alex@gmail.com")
	     (:url . "https://github.com/alexmurray/ivy-xref"))])
 (ivy-rtags .
	    [(20190821 1946)
	     ((ivy
	       (0 7 0))
	      (rtags
	       (2 10)))
	     "RTags completion back-end for ivy" single
	     ((:commit . "d3d4bc9b7b829d39628a1af96f06eb23ba48670c")
	      (:authors
	       ("Jan Erik Hanssen" . "jhanssen@gmail.com")
	       ("Anders Bakken" . "agbakken@gmail.com"))
	      (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	      (:url . "http://rtags.net"))])
 (ivy-purpose .
	      [(20160724 1003)
	       ((emacs
		 (24))
		(ivy
		 (0 8))
		(window-purpose
		 (1 5)))
	       "Ivy Interface for Purpose" single
	       ((:commit . "0495f2f3aed64d7e0028125e76a9a68f8fc4107e")
		(:authors
		 ("Bar Magal (2016)"))
		(:maintainer "Bar Magal (2016)")
		(:url . "https://github.com/bmag/ivy-purpose"))])
 (ivy-hydra .
	    [(20190829 630)
	     ((emacs
	       (24 1))
	      (ivy
	       (0 12 0))
	      (hydra
	       (0 13 4)))
	     "Additional key bindings for Ivy" single
	     ((:commit . "79333e9edfee38ec3b367c33711a68bdf7783259")
	      (:authors
	       ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	      (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	      (:keywords "convenience")
	      (:url . "https://github.com/abo-abo/swiper"))])
 (ivy .
      [(20190825 1023)
       ((emacs
	 (24 1)))
       "Incremental Vertical completYon" tar
       ((:commit . "79333e9edfee38ec3b367c33711a68bdf7783259")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:keywords "matching")
	(:url . "https://github.com/abo-abo/swiper"))])
 (irony-eldoc .
	      [(20170502 1908)
	       ((emacs
		 (24))
		(cl-lib
		 (0 5))
		(irony
		 (0 1)))
	       "irony-mode support for eldoc-mode" single
	       ((:commit . "0df5831eaae264a25422b061eb2792aadde8b3f2")
		(:authors
		 ("Kirill Ignatiev <github.com/ikirill>"))
		(:maintainer "Kirill Ignatiev <github.com/ikirill>")
		(:keywords "c" "c++" "objc" "convenience" "tools")
		(:url . "https://github.com/ikirill/irony-eldoc"))])
 (irony .
	[(20190703 1732)
	 ((cl-lib
	   (0 5))
	  (json
	   (1 2)))
	 "C/C++ minor mode powered by libclang" tar
	 ((:commit . "c7cca52b197babd023fd4745704ae4b695af0d10")
	  (:authors
	   ("Guillaume Papin" . "guillaume.papin@epitech.eu"))
	  (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu")
	  (:keywords "c" "convenience" "tools")
	  (:url . "https://github.com/Sarcasm/irony-mode"))])
 (insert-shebang .
		 [(20180403 1214)
		  nil "Insert shebang line automatically." single
		  ((:commit . "7bfea92ba1dae9d13d442e2f84f9fb6c05a0a9bd")
		   (:authors
		    ("Sachin Patil" . "iclcoolster@gmail.com"))
		   (:maintainer "Sachin Patil" . "iclcoolster@gmail.com")
		   (:keywords "shebang" "tool" "convenience")
		   (:url . "http://github.com/psachin/insert-shebang"))])
 (indent-guide .
	       [(20170221 1127)
		nil "show vertical lines to guide indentation" single
		((:commit . "d64f43011c72068e008621e620009ec592b35913")
		 (:authors
		  ("zk_phi"))
		 (:maintainer "zk_phi")
		 (:url . "http://hins11.yu-yake.com/"))])
 (importmagic .
	      [(20180520 303)
	       ((f
		 (0 11 0))
		(epc
		 (0 1 0))
		(emacs
		 (24 3)))
	       "Fix Python imports using importmagic." tar
	       ((:commit . "bbc131278f8cd62f3e71b6f4a86b0c91792a3524")
		(:authors
		 ("Nicolás Salas V." . "nikosalas@gmail.com"))
		(:maintainer "Nicolás Salas V." . "nikosalas@gmail.com")
		(:keywords "languages" "convenience")
		(:url . "https://github.com/anachronic/importmagic.el"))])
 (import-js .
	    [(20180709 1833)
	     ((grizzl
	       (0 1 0))
	      (emacs
	       (24)))
	     "Import Javascript dependencies" single
	     ((:commit . "fb1f167e33c388b09a2afd32fbda90a67bfb2e40")
	      (:authors
	       ("Kevin Kehl" . "kevin.kehl@gmail.com"))
	      (:maintainer "Kevin Kehl" . "kevin.kehl@gmail.com")
	      (:keywords "javascript")
	      (:url . "http://github.com/Galooshi/emacs-import-js/"))])
 (impatient-mode .
		 [(20181002 1231)
		  ((cl-lib
		    (0 3))
		   (simple-httpd
		    (1 5 0))
		   (htmlize
		    (1 40)))
		  "Serve buffers live over HTTP" tar
		  ((:commit . "96f6a05f8de74e19d570217fe83f0734623ddb0c")
		   (:authors
		    ("Brian Taylor" . "el.wubo@gmail.com"))
		   (:maintainer "Brian Taylor" . "el.wubo@gmail.com")
		   (:url . "https://github.com/netguy204/imp.el"))])
 (imenu-list .
	     [(20190115 2130)
	      ((cl-lib
		(0 5)))
	      "Show imenu entries in a separate buffer" single
	      ((:commit . "46008738f8fef578a763c308cf6695e5b4d4aa77")
	       (:authors
		("Bar Magal (2015)"))
	       (:maintainer "Bar Magal (2015)")
	       (:url . "https://github.com/bmag/imenu-list"))])
 (iedit .
	[(20190419 803)
	 nil "Edit multiple regions in the same way simultaneously." tar
	 ((:commit . "e2c100cdd67b7d82835d281ac2cd1bf4f374bc8f")
	  (:authors
	   ("Victor Ren" . "victorhge@gmail.com"))
	  (:maintainer "Victor Ren" . "victorhge@gmail.com")
	  (:keywords "occurrence" "region" "simultaneous" "refactoring")
	  (:url . "https://www.emacswiki.org/emacs/Iedit"))])
 (ido-vertical-mode .
		    [(20180618 2101)
		     nil "Makes ido-mode display vertically." single
		     ((:commit . "16c4c1a112796ee0bcf401ea39d3e2643a89feaf")
		      (:authors
		       ("Steven Degutis"))
		      (:maintainer "Christopher Reichert" . "creichert07@gmail.com")
		      (:keywords "convenience")
		      (:url . "https://github.com/creichert/ido-vertical-mode.el"))])
 (hydra .
	[(20190821 939)
	 ((cl-lib
	   (0 5))
	  (lv
	   (0)))
	 "Make bindings that stick around." tar
	 ((:commit . "435c55e9f75a8cf3ae6a4ba0c7725e3dc4e5963f")
	  (:authors
	   ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	  (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	  (:keywords "bindings")
	  (:url . "https://github.com/abo-abo/hydra"))])
 (hy-mode .
	  [(20190620 1804)
	   ((dash
	     (2 13 0))
	    (dash-functional
	     (1 2 0))
	    (s
	     (1 11 0))
	    (emacs
	     (24)))
	   "Major mode for Hylang" tar
	   ((:commit . "8699b744c03e0399c049757b7819d69768cac3bc")
	    (:keywords "languages" "lisp" "python")
	    (:url . "http://github.com/hylang/hy-mode"))])
 (hungry-delete .
		[(20170412 102)
		 nil "hungry delete minor mode" single
		 ((:commit . "0434458d3f6b2b585f332271feaa054bf4ec96d7")
		  (:authors
		   ("Nathaniel Flath" . "flat0103@gmail.com"))
		  (:maintainer "Nathaniel Flath" . "flat0103@gmail.com")
		  (:url . "http://github.com/nflath/hungry-delete"))])
 (htmlize .
	  [(20180923 1829)
	   nil "Convert buffer text and decorations to HTML." single
	   ((:commit . "8db0aa6aab77475a732b7363f0d57bd3933c18fd")
	    (:authors
	     ("Hrvoje Niksic" . "hniksic@gmail.com"))
	    (:maintainer "Hrvoje Niksic" . "hniksic@gmail.com")
	    (:keywords "hypermedia" "extensions"))])
 (ht .
     [(20190924 704)
      ((dash
	(2 12 0)))
      "The missing hash table library for Emacs" single
      ((:commit . "66c5f9131242697fabaede5566d87ecda4c14b1f")
       (:authors
	("Wilfred Hughes" . "me@wilfred.me.uk"))
       (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk")
       (:keywords "hash table" "hash map" "hash"))])
 (howdoyou .
	   [(20190921 259)
	    ((emacs
	      (25 1))
	     (promise
	      (1 1))
	     (request
	      (0 3 0))
	     (org
	      (9 2)))
	    "A stackoverflow and its sisters' sites reader" single
	    ((:commit . "8ebfcb2b8f708110040c5a3e6f4f0d46f33b025c")
	     (:authors
	      ("Thanh Vuong" . "thanhvg@gmail.com"))
	     (:maintainer "Thanh Vuong" . "thanhvg@gmail.com")
	     (:url . "https://github.com/thanhvg/howdoyou/"))])
 (hl-todo .
	  [(20190918 2149)
	   ((emacs
	     (25)))
	   "highlight TODO and similar keywords" single
	   ((:commit . "d7673363ef318a417adc28e36cafb78d01a671af")
	    (:authors
	     ("Jonas Bernoulli" . "jonas@bernoul.li"))
	    (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	    (:keywords "convenience")
	    (:url . "https://github.com/tarsius/hl-todo"))])
 (history .
	  [(20160821 1602)
	   ((emacs
	     (24 3)))
	   "History utility for source code navigation" tar
	   ((:commit . "5317663fb45bbd5e96d258cb0807dcc266ce67ff")
	    (:authors
	     ("boyw165"))
	    (:maintainer "boyw165")
	    (:url . "https://github.com/boyw165/history"))])
 (highlight-thing .
		  [(20181229 1301)
		   nil "Minimalistic minor mode to highlight current thing under point." single
		   ((:commit . "561d08a26f78f18d405d4f371f1c813db094e2f3")
		    (:authors
		     ("Felix Geller" . "fgeller@gmail.com"))
		    (:maintainer "Felix Geller" . "fgeller@gmail.com")
		    (:keywords "highlight" "thing" "symbol")
		    (:url . "https://github.com/fgeller/highlight-thing.el"))])
 (highlight-parentheses .
			[(20180704 1102)
			 nil "highlight surrounding parentheses" single
			 ((:commit . "f0bd58c8dadd2db703b7bfd09e911b5fda05b3df")
			  (:authors
			   ("Nikolaj Schumacher <bugs * nschum de>"))
			  (:maintainer "Tassilo Horn" . "tsdh@gnu.org")
			  (:keywords "faces" "matching")
			  (:url . "https://github.com/tsdh/highlight-parentheses.el"))])
 (highlight-numbers .
		    [(20181013 1744)
		     ((emacs
		       (24))
		      (parent-mode
		       (2 0)))
		     "Highlight numbers in source code" single
		     ((:commit . "8b4744c7f46c72b1d3d599d4fb75ef8183dee307")
		      (:authors
		       ("Fanael Linithien" . "fanael4@gmail.com"))
		      (:maintainer "Fanael Linithien" . "fanael4@gmail.com")
		      (:url . "https://github.com/Fanael/highlight-numbers"))])
 (highlight-indentation .
			[(20181204 839)
			 nil "Minor modes for highlighting indentation" single
			 ((:commit . "d03803f2c06749c430443a3d24e039cbafc9c58f")
			  (:authors
			   ("Anton Johansson" . "anton.johansson@gmail.com"))
			  (:maintainer "Anton Johansson" . "anton.johansson@gmail.com")
			  (:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs"))])
 (highlight .
	    [(20190710 1527)
	     nil "Highlighting commands." single
	     ((:commit . "9258a2b8362d737115cbd87618f947eadb140411")
	      (:authors
	       ("Drew Adams"))
	      (:maintainer nil . "Drew Adams (concat \"drew.adams\" \"@\" \"oracle\" \".com\")")
	      (:keywords "faces" "help" "local")
	      (:url . "https://www.emacswiki.org/emacs/download/highlight.el"))])
 (hierarchy .
	    [(20190425 842)
	     ((emacs
	       (25 1)))
	     "Library to create and display hierarchy structures" single
	     ((:commit . "a1d13c40102e833192c3bd6acf930013bdcbc819")
	      (:authors
	       ("Damien Cassou" . "damien@cassou.me"))
	      (:maintainer "Damien Cassou" . "damien@cassou.me")
	      (:url . "https://github.com/DamienCassou/hierarchy"))])
 (helm-xref .
	    [(20190916 1544)
	     ((emacs
	       (25 1))
	      (helm
	       (1 9 4)))
	     "Helm interface for xref results" single
	     ((:commit . "316e1bdb877ec4634addc422cdb9572ee3e2afe0")
	      (:authors
	       ("Fritz Stelzer" . "brotzeitmacher@gmail.com"))
	      (:maintainer "Fritz Stelzer" . "brotzeitmacher@gmail.com")
	      (:url . "https://github.com/brotzeit/helm-xref"))])
 (helm-themes .
	      [(20160918 545)
	       ((helm-core
		 (2 0))
		(emacs
		 (24 4)))
	       "Color theme selection with helm interface" single
	       ((:commit . "1160af42590b0d845a55e65e1e782d9e4027fd6e")
		(:authors
		 ("Syohei YOSHIDA" . "syohex@gmail.com"))
		(:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		(:url . "https://github.com/syohex/emacs-helm-themes"))])
 (helm-swoop .
	     [(20190822 501)
	      ((helm
		(3 2))
	       (emacs
		(24 4)))
	      "Efficiently hopping squeezed lines powered by helm interface" single
	      ((:commit . "ee725284199f7be4171d460ae3c0f766e914e84b")
	       (:authors
		("Shingo Fukuyama - http://fukuyama.co"))
	       (:maintainer "Shingo Fukuyama - http://fukuyama.co")
	       (:keywords "helm" "swoop" "inner" "buffer" "search")
	       (:url . "https://github.com/ShingoFukuyama/helm-swoop"))])
 (helm-rtags .
	     [(20170813 411)
	      ((helm
		(2 0))
	       (rtags
		(2 10)))
	      "A front-end for rtags" single
	      ((:commit . "d3d4bc9b7b829d39628a1af96f06eb23ba48670c")
	       (:authors
		("Jan Erik Hanssen" . "jhanssen@gmail.com")
		("Anders Bakken" . "agbakken@gmail.com"))
	       (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
	       (:url . "http://rtags.net"))])
 (helm-pydoc .
	     [(20160918 542)
	      ((helm-core
		(2 0))
	       (emacs
		(24 4)))
	      "pydoc with helm interface" tar
	      ((:commit . "85480a29b56dacde425655bc8f5a597c785afdf5")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	       (:url . "https://github.com/syohex/emacs-helm-pydoc"))])
 (helm-purpose .
	       [(20170114 1636)
		((emacs
		  (24))
		 (helm
		  (1 9 2))
		 (window-purpose
		  (1 4)))
		"Helm Interface for Purpose" single
		((:commit . "9ff4c21c1e9ebc7afb851b738f815df7343bb287")
		 (:authors
		  ("Bar Magal (2016)"))
		 (:maintainer "Bar Magal (2016)")
		 (:url . "https://github.com/bmag/helm-purpose"))])
 (helm-projectile .
		  [(20190731 1538)
		   ((helm
		     (1 9 9))
		    (projectile
		     (0 14 0))
		    (cl-lib
		     (0 3)))
		   "Helm integration for Projectile" single
		   ((:commit . "5328b74dddcee8d1913803ca8167868831a07463")
		    (:authors
		     ("Bozhidar Batsov"))
		    (:maintainer "Bozhidar Batsov")
		    (:keywords "project" "convenience")
		    (:url . "https://github.com/bbatsov/helm-projectile"))])
 (helm-org-rifle .
		 [(20190809 1831)
		  ((emacs
		    (24 4))
		   (dash
		    (2 12))
		   (f
		    (0 18 1))
		   (helm
		    (1 9 4))
		   (s
		    (1 10 0)))
		  "Rifle through your Org files" single
		  ((:commit . "dbda48031bad6fec1e130ee6e0d1a3bfea8ad8b8")
		   (:authors
		    ("Adam Porter" . "adam@alphapapa.net"))
		   (:maintainer "Adam Porter" . "adam@alphapapa.net")
		   (:keywords "hypermedia" "outlines")
		   (:url . "http://github.com/alphapapa/helm-org-rifle"))])
 (helm-org .
	   [(20190819 617)
	    ((helm
	      (3 3))
	     (emacs
	      (24 4)))
	    "Helm for org headlines and keywords completion" single
	    ((:commit . "542dda7bc9a3b9dfb439e4f8a1e5f60cfb6cc256")
	     (:authors
	      ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))
	     (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com")
	     (:url . "https://github.com/emacs-helm/helm-org"))])
 (helm-mode-manager .
		    [(20151124 938)
		     ((helm
		       (1 5 3)))
		     "Select and toggle major and minor modes with helm" single
		     ((:commit . "5d9c3ca4f8205d07ff4e03c4c3e88f596751c1fc")
		      (:authors
		       ("istib"))
		      (:maintainer "istib")
		      (:url . "https://github.com/istib/helm-mode-manager"))])
 (helm-make .
	    [(20190729 1221)
	     nil "Select a Makefile target with helm" single
	     ((:commit . "6f3d9a0feed47c1d6a9b82baef2e2663ac496514")
	      (:authors
	       ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	      (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	      (:keywords "makefile")
	      (:url . "https://github.com/abo-abo/helm-make"))])
 (helm-lsp .
	   [(20190423 548)
	    ((emacs
	      (25 1))
	     (dash
	      (2 14 1))
	     (lsp-mode
	      (5 0))
	     (helm
	      (2 0)))
	    "LSP helm integration" single
	    ((:commit . "3a58ca4cfd94b9ab1e15e819d3b16ef568e8889b")
	     (:authors
	      ("Ivan Yonchovski" . "yyoncho@gmail.com"))
	     (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com")
	     (:keywords "languages" "debug")
	     (:url . "https://github.com/yyoncho/helm-lsp"))])
 (helm-gtags .
	     [(20170116 529)
	      ((emacs
		(24 4))
	       (helm
		(2 0)))
	      "GNU GLOBAL helm interface" single
	      ((:commit . "108e93d0d099ebb7b98847388f368311cf177033")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	       (:url . "https://github.com/syohex/emacs-helm-gtags"))])
 (helm-gitignore .
		 [(20170211 8)
		  ((gitignore-mode
		    (1 1 0))
		   (helm
		    (1 7 0))
		   (request
		    (0 1 0))
		   (cl-lib
		    (0 5)))
		  "Generate .gitignore files with gitignore.io." single
		  ((:commit . "2a2e7da7855a6db0ab3bb6a6a087863d7abd4391")
		   (:authors
		    ("Juan Placencia"))
		   (:maintainer "Juan Placencia")
		   (:keywords "helm" "gitignore" "gitignore.io")
		   (:url . "https://github.com/jupl/helm-gitignore"))])
 (helm-git-grep .
		[(20170614 1411)
		 ((helm-core
		   (2 2 0)))
		 "helm for git grep, an incremental git-grep(1)" single
		 ((:commit . "744cea07dba6e6a5effbdba83f1b786c78fd86d3")
		  (:authors
		   ("mechairoi"))
		  (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com")
		  (:url . "https://github.com/yasuyk/helm-git-grep"))])
 (helm-git-files .
		 [(20141212 1317)
		  ((helm
		    (1 5 9)))
		  "helm for git files" single
		  ((:commit . "43193960774069369ac6964bbf7c026900206fa8")
		   (:authors
		    ("INA Lintaro <tarao.gnn at gmail.com>")
		    ("TAKAGI Kentaro <kentaro0910_at_gmail.com>"))
		   (:maintainer "INA Lintaro <tarao.gnn at gmail.com>")
		   (:keywords "helm" "git"))])
 (helm-flx .
	   [(20180103 516)
	    ((emacs
	      (24 4))
	     (helm
	      (1 7 9))
	     (flx
	      (0 5)))
	    "Sort helm candidates by flx score" single
	    ((:commit . "6640fac5cb16bee73c95b8ed1248a4e5e113690e")
	     (:authors
	      ("PythonNut" . "pythonnut@pythonnut.com"))
	     (:maintainer "PythonNut" . "pythonnut@pythonnut.com")
	     (:keywords "convenience" "helm" "fuzzy" "flx")
	     (:url . "https://github.com/PythonNut/helm-flx"))])
 (helm-dictionary .
		  [(20160817 2033)
		   ((helm
		     (1 5 5)))
		   "Helm source for looking up dictionaries" single
		   ((:commit . "805ce850d4cbe811227d9c9b16cc51f652198f3f")
		    (:authors
		     ("Titus von der Malsburg" . "malsburg@posteo.de")
		     ("Michael Heerdegen" . "michael_heerdegen@web.de"))
		    (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de")
		    (:url . "https://github.com/emacs-helm/helm-dictionary"))])
 (helm-descbinds .
		 [(20190501 935)
		  ((helm
		    (1 5)))
		  "A convenient `describe-bindings' with `helm'" single
		  ((:commit . "b72515982396b6e336ad7beb6767e95a80fca192")
		   (:authors
		    ("Taiki SUGAWARA" . "buzz.taiki@gmail.com"))
		   (:maintainer "Taiki SUGAWARA" . "buzz.taiki@gmail.com")
		   (:keywords "helm" "help")
		   (:url . "https://github.com/emacs-helm/helm-descbinds"))])
 (helm-dash .
	    [(20190527 1118)
	     ((emacs
	       (24 4))
	      (dash-docs
	       (1 4 0))
	      (helm
	       (1 9 2))
	      (cl-lib
	       (0 5)))
	     "Offline documentation browser for +150 APIs using Dash docsets." single
	     ((:commit . "7f853bd34da666f0e9a883011c80f451b06f6c59")
	      (:authors
	       ("Raimon Grau" . "raimonster@gmail.com")
	       ("Toni Reina " . "areina0@gmail.com")
	       ("Bryan Gilbert" . "bryan@bryan.sh"))
	      (:maintainer "Raimon Grau" . "raimonster@gmail.com")
	      (:keywords "docs")
	      (:url . "https://github.com/dash-docs-el/helm-dash"))])
 (helm-css-scss .
		[(20140627 25)
		 ((helm
		   (1 0))
		  (emacs
		   (24)))
		 "CSS/SCSS/LESS Selectors with helm interface" single
		 ((:commit . "ab8348aa98e0daa2f1b771e35bdb06bfacbe5016")
		  (:authors
		   ("Shingo Fukuyama - http://fukuyama.co"))
		  (:maintainer "Shingo Fukuyama - http://fukuyama.co")
		  (:keywords "scss" "css" "less" "selector" "helm")
		  (:url . "https://github.com/ShingoFukuyama/helm-css-scss"))])
 (helm-core .
	    [(20190924 1617)
	     ((emacs
	       (24 4))
	      (async
	       (1 9 3)))
	     "Development files for Helm" tar
	     ((:commit . "dccd9eda9a63f08c5cce2dc7c22d724a66b7912e")
	      (:url . "https://emacs-helm.github.io/helm/"))])
 (helm-company .
	       [(20190812 1429)
		((helm
		  (1 5 9))
		 (company
		  (0 6 13)))
		"Helm interface for company-mode" single
		((:commit . "6eb5c2d730a60e394e005b47c1db018697094dde")
		 (:authors
		  ("Yasuyuki Oka" . "yasuyk@gmail.com"))
		 (:maintainer "Daniel Ralston" . "Sodel-the-Vociferous@users.noreply.github.com")
		 (:url . "https://github.com/Sodel-the-Vociferous/helm-company"))])
 (helm-c-yasnippet .
		   [(20170128 1542)
		    ((helm
		      (1 7 7))
		     (yasnippet
		      (0 8 0))
		     (cl-lib
		      (0 3)))
		    "helm source for yasnippet.el" single
		    ((:commit . "65ca732b510bfc31636708aebcfe4d2d845b59b0")
		     (:authors
		      ("Kenji.I (Kenji Imakado)" . "ken.imakaado@gmail.com"))
		     (:maintainer "Kenji.I (Kenji Imakado)" . "ken.imakaado@gmail.com")
		     (:keywords "convenience" "emulation"))])
 (helm-ag .
	  [(20170209 1545)
	   ((emacs
	     (24 4))
	    (helm
	     (2 0)))
	   "the silver searcher with helm interface" single
	   ((:commit . "2fc02c4ead29bf0db06fd70740cc7c364cb650ac")
	    (:authors
	     ("Syohei YOSHIDA" . "syohex@gmail.com"))
	    (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	    (:url . "https://github.com/syohex/emacs-helm-ag"))])
 (helm .
       [(20190928 1553)
	((emacs
	  (24 4))
	 (async
	  (1 9 3))
	 (popup
	  (0 5 3))
	 (helm-core
	  (3 0)))
	"Helm is an Emacs incremental and narrowing framework" tar
	((:commit . "dccd9eda9a63f08c5cce2dc7c22d724a66b7912e")
	 (:url . "https://emacs-helm.github.io/helm/"))])
 (haml-mode .
	    [(20190219 2102)
	     ((emacs
	       (24))
	      (cl-lib
	       (0 5)))
	     "Major mode for editing Haml files" single
	     ((:commit . "bf5b6c11b1206759d2b28af48765e04882dd1fc4")
	      (:authors
	       ("Natalie Weizenbaum"))
	      (:maintainer "Natalie Weizenbaum")
	      (:keywords "markup" "languages" "html")
	      (:url . "https://github.com/nex3/haml-mode"))])
 (grizzl .
	 [(20160818 737)
	  ((cl-lib
	    (0 5))
	   (emacs
	    (24 3)))
	  "Fast fuzzy search index for Emacs." single
	  ((:commit . "1e917253ce2b846f0272b8356fad3dbff9cd513a")
	   (:authors
	    ("Chris Corbyn" . "chris@w3style.co.uk"))
	   (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com")
	   (:keywords "convenience" "usability")
	   (:url . "https://github.com/grizzl/grizzl"))])
 (graphviz-dot-mode .
		    [(20181118 551)
		     nil "Mode for the dot-language used by graphviz (att)." single
		     ((:commit . "243de72e09ddd5cdc4863613af8b749827a5e1cd")
		      (:maintainer "Pieter Pareit" . "pieter.pareit@gmail.com")
		      (:keywords "mode" "dot" "dot-language" "dotlanguage" "graphviz" "graphs" "att")
		      (:url . "http://ppareit.github.com/graphviz-dot-mode/"))])
 (graphql .
	  [(20180912 31)
	   ((emacs
	     (25)))
	   "GraphQL utilities" single
	   ((:commit . "e2b309689f4faf9225f290080f836e988c5a576d")
	    (:authors
	     ("Sean Allred" . "code@seanallred.com"))
	    (:maintainer "Sean Allred" . "code@seanallred.com")
	    (:keywords "hypermedia" "tools" "lisp")
	    (:url . "https://github.com/vermiculus/graphql.el"))])
 (goto-chg .
	   [(20190110 2114)
	    ((undo-tree
	      (0 1 3)))
	    "goto last change" single
	    ((:commit . "1829a13026c597e358f716d2c7793202458120b5")
	     (:authors
	      ("David Andersson <l.david.andersson(at)sverige.nu>"))
	     (:maintainer "Vasilij Schneidermann" . "v.schneidermann@gmail.com")
	     (:keywords "convenience" "matching")
	     (:url . "https://github.com/emacs-evil/goto-chg"))])
 (google-translate .
		   [(20190620 1416)
		    nil "Emacs interface to Google Translate." tar
		    ((:commit . "dc118de511c433750d4c98b9dd67350118c04fd6"))])
 (google-c-style .
		 [(20180130 1736)
		  nil "Google's C/C++ style for c-mode" single
		  ((:commit . "5651966e0275572a9956199418d89c9ccc7b2b1a")
		   (:keywords "c" "tools"))])
 (golden-ratio .
	       [(20150819 1120)
		nil "Automatic resizing of Emacs windows to the golden ratio" single
		((:commit . "72b028808b41d23fa3f7e8c0d23d2c475e7b46ae")
		 (:authors
		  ("Roman Gonzalez" . "romanandreg@gmail.com"))
		 (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com")
		 (:keywords "window" "resizing"))])
 (go .
     [(20161111 249)
      ((emacs
	(24)))
      "Play GO, translate and transfer between GO back ends" tar
      ((:commit . "ff45fb44d9cb6579d8511d8b6156ed0b34d5ac97")
       (:authors
	("Eric Schulte" . "schulte.eric@gmail.com"))
       (:maintainer "Eric Schulte" . "schulte.eric@gmail.com")
       (:keywords "game" "go" "sgf")
       (:url . "http://eschulte.github.io/el-go/"))])
 (gnuplot .
	  [(20141231 2137)
	   nil "drive gnuplot from within emacs" tar
	   ((:commit . "21f9046e3f5caad41b750b5c9cee02fa4fd20fb9")
	    (:authors
	     ("Bruce Ravel" . "bruceravel1@gmail.com"))
	    (:maintainer "Bruce Ravel" . "bruceravel1@gmail.com")
	    (:keywords "gnuplot" "plotting"))])
 (gntp .
       [(20141025 250)
	nil "Growl Notification Protocol for Emacs" single
	((:commit . "767571135e2c0985944017dc59b0be79af222ef5")
	 (:authors
	  ("Engelke Eschner" . "tekai@gmx.li"))
	 (:maintainer "Engelke Eschner" . "tekai@gmx.li"))])
 (gitignore-templates .
		      [(20180327 1326)
		       ((emacs
			 (24 3)))
		       "Access GitHub .gitignore templates" single
		       ((:commit . "b0705b8de4cbdd631c64c4e0024d62ba4ad68052")
			(:authors
			 ("Xu Chunyang" . "mail@xuchunyang.me"))
			(:maintainer "Xu Chunyang" . "mail@xuchunyang.me")
			(:keywords "tools")
			(:url . "https://github.com/xuchunyang/gitignore-templates.el"))])
 (gitignore-mode .
		 [(20180318 1956)
		  nil "Major mode for editing .gitignore files" single
		  ((:commit . "33c6a116a5b298e20eb39ebb154a51c4dd37c06d")
		   (:authors
		    ("Sebastian Wiesner" . "lunaryorn@gmail.com"))
		   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		   (:keywords "convenience" "vc" "git")
		   (:url . "https://github.com/magit/git-modes"))])
 (github-search .
		[(20190624 436)
		 ((magit
		   (0 8 1))
		  (gh
		   (1 0 0)))
		 "Clone repositories by searching github" single
		 ((:commit . "b73efaf19491010522b09db35bb0f1bad1620e63")
		  (:authors
		   ("Ivan Malison" . "IvanMalison@gmail.com"))
		  (:maintainer "Ivan Malison" . "IvanMalison@gmail.com")
		  (:keywords "github" "search" "clone" "api" "gh" "magit" "vc" "tools")
		  (:url . "https://github.com/IvanMalison/github-search"))])
 (github-explorer .
		  [(20190701 630)
		   ((emacs
		     (24 4)))
		   "Explore a GitHub repository on the fly" single
		   ((:commit . "e3a410dd1113bdff382a745465ea48d9b1fe860b")
		    (:authors
		     ("Giap Tran" . "txgvnn@gmail.com"))
		    (:maintainer "Giap Tran" . "txgvnn@gmail.com")
		    (:keywords "comm")
		    (:url . "https://github.com/TxGVNN/github-explorer"))])
 (github-clone .
	       [(20160623 310)
		((gh
		  (0 7 2))
		 (magit
		  (2 1 0))
		 (emacs
		  (24 4)))
		"Fork and clone github repos" single
		((:commit . "467b40ca60a6c26257466ebc43c74414df7f19cc")
		 (:authors
		  ("Charles L.G. Comstock" . "dgtized@gmail.com"))
		 (:maintainer "Charles L.G. Comstock" . "dgtized@gmail.com")
		 (:keywords "vc" "tools")
		 (:url . "https://github.com/dgtized/github-clone.el"))])
 (gitconfig-mode .
		 [(20180318 1956)
		  nil "Major mode for editing .gitconfig files" single
		  ((:commit . "33c6a116a5b298e20eb39ebb154a51c4dd37c06d")
		   (:authors
		    ("Sebastian Wiesner" . "lunaryorn@gmail.com"))
		   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		   (:keywords "convenience" "vc" "git")
		   (:url . "https://github.com/magit/git-modes"))])
 (gitattributes-mode .
		     [(20180318 1956)
		      nil "Major mode for editing .gitattributes files" single
		      ((:commit . "33c6a116a5b298e20eb39ebb154a51c4dd37c06d")
		       (:authors
			("Rüdiger Sonderfeld" . "ruediger@c-plusplus.net"))
		       (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		       (:keywords "convenience" "vc" "git")
		       (:url . "https://github.com/magit/git-modes"))])
 (git-timemachine .
		  [(20190730 849)
		   ((emacs
		     (24 3))
		    (transient
		     (0 1 0)))
		   "Walk through git revisions of a file" single
		   ((:commit . "391eb61050de321101e631fcf373fc70ec6e7700")
		    (:authors
		     ("Peter Stiernström" . "peter@stiernstrom.se"))
		    (:maintainer "Peter Stiernström" . "peter@stiernstrom.se")
		    (:keywords "vc")
		    (:url . "https://gitlab.com/pidu/git-timemachine"))])
 (git-messenger .
		[(20170102 440)
		 ((emacs
		   (24 3))
		  (popup
		   (0 5 0)))
		 "Pop up last commit information of current line" single
		 ((:commit . "83815915eb8c1cb47443ff34bca3fecf7d2edf3a")
		  (:authors
		   ("Syohei YOSHIDA" . "syohex@gmail.com"))
		  (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		  (:url . "https://github.com/syohex/emacs-git-messenger"))])
 (git-link .
	   [(20190829 145)
	    ((emacs
	      (24 3)))
	    "Get the GitHub/Bitbucket/GitLab URL for a buffer location" single
	    ((:commit . "267bd81c228bdab434172dbef896f3f3b82713fa")
	     (:authors
	      ("Skye Shaw" . "skye.shaw@gmail.com"))
	     (:maintainer "Skye Shaw" . "skye.shaw@gmail.com")
	     (:keywords "git" "vc" "github" "bitbucket" "gitlab" "sourcehut" "convenience")
	     (:url . "http://github.com/sshaw/git-link"))])
 (git-gutter-fringe .
		    [(20170113 533)
		     ((git-gutter
		       (0 88))
		      (fringe-helper
		       (0 1 1))
		      (cl-lib
		       (0 5))
		      (emacs
		       (24)))
		     "Fringe version of git-gutter.el" single
		     ((:commit . "16226caab44174301f1659f7bf8cc67a76153445")
		      (:authors
		       ("Syohei YOSHIDA" . "syohex@gmail.com"))
		      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		      (:url . "https://github.com/syohex/emacs-git-gutter-fringe"))])
 (git-gutter-fringe+ .
		     [(20140729 1103)
		      ((git-gutter+
			(0 1))
		       (fringe-helper
			(1 0 1)))
		      "Fringe version of git-gutter+.el" single
		      ((:commit . "7a2f49d2455a3a872e90e5f7dd4e6b27f1d96cfc")
		       (:authors
			("Syohei YOSHIDA" . "syohex@gmail.com"))
		       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		       (:url . "https://github.com/nonsequitur/git-gutter-fringe-plus"))])
 (git-gutter .
	     [(20161105 1356)
	      ((emacs
		(24 3)))
	      "Port of Sublime Text plugin GitGutter" single
	      ((:commit . "00c05264af046b5ce248e5b0bc42f117d9c27a09")
	       (:authors
		("Syohei YOSHIDA" . "syohex@gmail.com"))
	       (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	       (:url . "https://github.com/syohex/emacs-git-gutter"))])
 (git-gutter+ .
	      [(20151204 1723)
	       ((git-commit
		 (0))
		(dash
		 (0)))
	       "Manage Git hunks straight from the buffer" single
	       ((:commit . "b7726997806d9a2da9fe84ff00ecf21d62b6f975")
		(:authors
		 ("Syohei YOSHIDA" . "syohex@gmail.com"))
		(:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		(:keywords "git" "vc")
		(:url . "https://github.com/nonsequitur/git-gutter-plus"))])
 (git-commit .
	     [(20190928 1746)
	      ((emacs
		(25 1))
	       (dash
		(20180910))
	       (with-editor
		(20181103)))
	      "Edit Git commit messages" single
	      ((:commit . "3add5310ba98b74bb3e7fb82dd259713a0c6606c")
	       (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	       (:keywords "git" "tools" "vc")
	       (:url . "https://github.com/magit/magit"))])
 (gist .
       [(20171128 406)
	((emacs
	  (24 1))
	 (gh
	  (0 10 0)))
	"Emacs integration for gist.github.com" single
	((:commit . "314fe6ab80fae35b95f0734eceb82f72813b6f41")
	 (:authors
	  ("Yann Hodique" . "yann.hodique@gmail.com"))
	 (:maintainer "Yann Hodique" . "yann.hodique@gmail.com")
	 (:keywords "tools")
	 (:url . "https://github.com/defunkt/gist.el"))])
 (ghub .
       [(20190806 959)
	((emacs
	  (25 1))
	 (dash
	  (2 14 1))
	 (let-alist
	     (1 0 5))
	 (treepy
	  (0 1 1)))
	"Minuscule client libraries for Git forge APIs." tar
	((:commit . "7d59937d7782d0062216130a4d059b45e8396f82"))])
 (gh-md .
	[(20151207 1740)
	 ((emacs
	   (24)))
	 "Render markdown using the Github api" single
	 ((:commit . "693cb0dcadff70e813e1a9d303d227aff7898557")
	  (:authors
	   ("Mario Rodas" . "marsam@users.noreply.github.com"))
	  (:maintainer "Mario Rodas" . "marsam@users.noreply.github.com")
	  (:keywords "convenience")
	  (:url . "https://github.com/emacs-pe/gh-md.el"))])
 (gh .
     [(20180308 2138)
      ((emacs
	(24 3))
       (pcache
	(0 4 1))
       (logito
	(0 1))
       (marshal
	(0 6 3)))
      "A GitHub library for Emacs" tar
      ((:commit . "f029fc11f345ef04ab62ee91c38657e29c462fea"))])
 (ggtags .
	 [(20190320 2208)
	  ((emacs
	    (25)))
	  "emacs frontend to GNU Global source code tagging system" single
	  ((:commit . "4d9000034d352cd983ae6626f560e434d0b3e9ca")
	   (:authors
	    ("Leo Liu" . "sdl.web@gmail.com"))
	   (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	   (:keywords "tools" "convenience")
	   (:url . "https://github.com/leoliu/ggtags"))])
 (fuzzy .
	[(20150730 337)
	 nil "Fuzzy Matching" single
	 ((:commit . "534d723ad2e06322ff8d9bd0ba4863d243f698e7")
	  (:authors
	   ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))
	  (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com")
	  (:keywords "convenience"))])
 (fringe-helper .
		[(20140620 2109)
		 nil "helper functions for fringe bitmaps" single
		 ((:commit . "ef4a9c023bae18ec1ddd7265f1f2d6d2e775efdd")
		  (:authors
		   ("Nikolaj Schumacher <bugs * nschum de>"))
		  (:maintainer "Nikolaj Schumacher <bugs * nschum de>")
		  (:keywords "lisp")
		  (:url . "http://nschum.de/src/emacs/fringe-helper/"))])
 (forge .
	[(20190928 1848)
	 ((emacs
	   (25 1))
	  (closql
	   (1 0 0))
	  (dash
	   (2 14 1))
	  (emacsql-sqlite
	   (3 0 0))
	  (ghub
	   (20190319))
	  (let-alist
	      (1 0 5))
	  (magit
	   (20190408))
	  (markdown-mode
	   (2 3))
	  (transient
	   (0 1 0)))
	 "Access Git forges from Magit." tar
	 ((:commit . "d7af5128e2150e7d2db67fba2dde7157d15083a0"))])
 (font-lock+ .
	     [(20180101 1939)
	      nil "Enhancements to standard library `font-lock.el'." single
	      ((:commit . "f2c1ddcd4c9d581bd32be88fad026b49f98b6541")
	       (:authors
		("Drew Adams"))
	       (:maintainer nil . "Drew Adams (concat \"drew.adams\" \"@\" \"oracle\" \".com\")")
	       (:keywords "languages" "faces" "highlighting")
	       (:url . "https://www.emacswiki.org/emacs/download/font-lock%2b.el"))])
 (fn .
     [(20170210 204)
      ((emacs
	(24))
       (cl-lib
	(0 5))
       (dash
	(2 12 1))
       (dash-functional
	(1 2 0)))
      "Concise anonymous functions for Emacs Lisp" single
      ((:commit . "f685fd0c08ec3b1d1b9974b37e62edd78a000cb8")
       (:authors
	("Troy Pracy"))
       (:maintainer "Troy Pracy")
       (:keywords "functional"))])
 (flyspell-correct-ivy .
		       [(20181205 1932)
			((flyspell-correct
			  (0 5 0))
			 (ivy
			  (0 8 0)))
			"correcting words with flyspell via ivy interface" single
			((:commit . "a0852074bab130a711ba6b4696a7cb8059dac8db")
			 (:authors
			  ("Boris Buliga" . "boris@d12frosted.io"))
			 (:maintainer "Boris Buliga" . "boris@d12frosted.io")
			 (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (flyspell-correct-helm .
			[(20181205 1932)
			 ((flyspell-correct
			   (0 5 0))
			  (helm
			   (1 9 0)))
			 "correcting words with flyspell via helm interface" single
			 ((:commit . "a0852074bab130a711ba6b4696a7cb8059dac8db")
			  (:authors
			   ("Boris Buliga" . "boris@d12frosted.io"))
			  (:maintainer "Boris Buliga" . "boris@d12frosted.io")
			  (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (flyspell-correct .
		   [(20190408 1010)
		    nil "correcting words with flyspell via custom interface" tar
		    ((:commit . "a0852074bab130a711ba6b4696a7cb8059dac8db")
		     (:authors
		      ("Boris Buliga" . "boris@d12frosted.io"))
		     (:maintainer "Boris Buliga" . "boris@d12frosted.io")
		     (:url . "https://github.com/d12frosted/flyspell-correct"))])
 (flycheck-rtags .
		 [(20180619 824)
		  ((emacs
		    (24))
		   (flycheck
		    (0 23))
		   (rtags
		    (2 10)))
		  "RTags Flycheck integration." single
		  ((:commit . "d3d4bc9b7b829d39628a1af96f06eb23ba48670c")
		   (:authors
		    ("Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com"))
		   (:maintainer "Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com")
		   (:url . "http://rtags.net"))])
 (flycheck-pos-tip .
		   [(20180610 1615)
		    ((emacs
		      (24 1))
		     (flycheck
		      (0 22))
		     (pos-tip
		      (0 4 6)))
		    "Display Flycheck errors in GUI tooltips" single
		    ((:commit . "909113977d37739387c7f099d74a724cfe6efcec")
		     (:authors
		      ("Akiha Senda" . "senda.akiha@gmail.com")
		      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
		     (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
		     (:keywords "tools" "convenience")
		     (:url . "https://github.com/flycheck/flycheck-pos-tip"))])
 (flycheck-package .
		   [(20161111 2251)
		    ((flycheck
		      (0 22))
		     (package-lint
		      (0 2)))
		    "A Flycheck checker for elisp package authors" single
		    ((:commit . "31fe5d9731f30d076f14392401b3b101c9ca2260")
		     (:authors
		      ("Steve Purcell" . "steve@sanityinc.com")
		      ("Fanael Linithien" . "fanael4@gmail.com"))
		     (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		     (:keywords "lisp"))])
 (flycheck-irony .
		 [(20180604 2152)
		  ((emacs
		    (24 1))
		   (flycheck
		    (0 22))
		   (irony
		    (0 2 0)))
		  "Flycheck: C/C++ support via Irony" single
		  ((:commit . "42dbecd4a865cabeb301193bb4d660e26ae3befe")
		   (:authors
		    ("Guillaume Papin" . "guillaume.papin@epitech.eu"))
		   (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu")
		   (:keywords "convenience" "tools" "c")
		   (:url . "https://github.com/Sarcasm/flycheck-irony/"))])
 (flycheck-dmd-dub .
		   [(20180625 1635)
		    ((flycheck
		      (0 24))
		     (f
		      (0 18 2)))
		    "Sets flycheck-dmd-include-paths from dub package information" single
		    ((:commit . "d7df2895d7d27cc39916816e3c32a60ce0e1d2d9")
		     (:authors
		      ("Atila Neves" . "atila.neves@gmail.com"))
		     (:maintainer "Atila Neves" . "atila.neves@gmail.com")
		     (:keywords "languages")
		     (:url . "http://github.com/atilaneves/flycheck-dmd-dub"))])
 (flycheck-bashate .
		   [(20160630 440)
		    ((flycheck
		      (0 24))
		     (emacs
		      (24 4)))
		    "Integrate bashate with flycheck" single
		    ((:commit . "77fa03dbc578c34fe71ca44926bac2aff8f2b021")
		     (:authors
		      ("Alex Murray" . "murray.alex@gmail.com"))
		     (:maintainer "Alex Murray" . "murray.alex@gmail.com")
		     (:url . "https://github.com/alexmurray/flycheck-bashate"))])
 (flycheck .
	   [(20190927 1028)
	    ((dash
	      (2 12 1))
	     (pkg-info
	      (0 4))
	     (let-alist
		 (1 0 4))
	     (seq
	      (1 11))
	     (emacs
	      (24 3)))
	    "On-the-fly syntax checking" tar
	    ((:commit . "e5d690c1ec8afc98250c76676fcbce5af4d82831")
	     (:authors
	      ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	     (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com")
	     (:keywords "convenience" "languages" "tools")
	     (:url . "http://www.flycheck.org"))])
 (flx-ido .
	  [(20180117 1519)
	   ((flx
	     (0 1))
	    (cl-lib
	     (0 3)))
	   "flx integration for ido" single
	   ((:commit . "46040d0b096a0340d91235561f27a959a61d0fef")
	    (:authors
	     ("Le Wang"))
	    (:maintainer "Le Wang")
	    (:url . "https://github.com/lewang/flx"))])
 (flx .
      [(20151030 1812)
       ((cl-lib
	 (0 3)))
       "fuzzy matching with good sorting" single
       ((:commit . "46040d0b096a0340d91235561f27a959a61d0fef")
	(:authors
	 ("Le Wang"))
	(:maintainer "Le Wang")
	(:url . "https://github.com/lewang/flx"))])
 (fish-mode .
	    [(20190921 526)
	     ((emacs
	       (24)))
	     "Major mode for fish shell scripts" single
	     ((:commit . "688c82decad108029b0434e3bce6c3d129ede6f3")
	      (:authors
	       ("Tony Wang" . "wwwjfy@gmail.com"))
	      (:maintainer "Tony Wang" . "wwwjfy@gmail.com")
	      (:keywords "fish" "shell"))])
 (finalize .
	   [(20170418 1945)
	    ((emacs
	      (24 1))
	     (cl-generic
	      (0 3))
	     (cl-lib
	      (0 3))
	     (eieio
	      (1 4)))
	    "finalizers for Emacs Lisp" tar
	    ((:commit . "846731531e7d1d80451787992e07bfe7dedbe9ff"))])
 (fill-column-indicator .
			[(20171209 1924)
			 nil "Graphically indicate the fill column" single
			 ((:commit . "a284bb50789c97d7ef9021214260b3ce7cc220e3")
			  (:authors
			   ("Alp Aker" . "alp.tekin.aker@gmail.com"))
			  (:maintainer "Alp Aker" . "alp.tekin.aker@gmail.com")
			  (:keywords "convenience"))])
 (fancy-battery .
		[(20150101 1204)
		 ((emacs
		   (24 1)))
		 "Fancy battery display" single
		 ((:commit . "9b88ae77a01aa3edc529840338bcb2db7f445822")
		  (:authors
		   ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
		  (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com")
		  (:keywords "convenience" "tools" "hardware")
		  (:url . "https://github.com/lunaryorn/fancy-battery.el"))])
 (f .
    [(20190109 906)
     ((s
       (1 7 0))
      (dash
       (2 2 0)))
     "Modern API for working with files and directories" single
     ((:commit . "8191672377816a1975414cc1f116fd3b94b30bd0")
      (:authors
       ("Johan Andersson" . "johan.rejeep@gmail.com"))
      (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
      (:keywords "files" "directories")
      (:url . "http://github.com/rejeep/f.el"))])
 (eyebrowse .
	    [(20190928 1458)
	     ((dash
	       (2 7 0))
	      (emacs
	       (24 3 1)))
	     "Easy window config switching" single
	     ((:commit . "e483d35e905c2e26fac63f33c77b9e764729a364")
	      (:authors
	       ("Vasilij Schneidermann" . "v.schneidermann@gmail.com"))
	      (:maintainer "Vasilij Schneidermann" . "v.schneidermann@gmail.com")
	      (:keywords "convenience")
	      (:url . "https://github.com/wasamasa/eyebrowse"))])
 (expand-region .
		[(20190416 538)
		 nil "Increase selected region by semantic units." tar
		 ((:commit . "1c31447730443d98f90f65dfcb752f347d46ad1b"))])
 (exec-path-from-shell .
		       [(20190426 2227)
			nil "Get environment variables such as $PATH from the shell" single
			((:commit . "3cfedb8791397ed50ee66bc0a7cbee5b9d78245c")
			 (:authors
			  ("Steve Purcell" . "steve@sanityinc.com"))
			 (:maintainer "Steve Purcell" . "steve@sanityinc.com")
			 (:keywords "unix" "environment")
			 (:url . "https://github.com/purcell/exec-path-from-shell"))])
 (evil-visualstar .
		  [(20160223 48)
		   ((evil
		     (0)))
		   "Starts a * or # search from the visual selection" single
		   ((:commit . "06c053d8f7381f91c53311b1234872ca96ced752")
		    (:authors
		     ("Bailey Ling"))
		    (:maintainer "Bailey Ling")
		    (:keywords "evil" "vim" "visualstar")
		    (:url . "https://github.com/bling/evil-visualstar"))])
 (evil-visual-mark-mode .
			[(20190116 1557)
			 ((evil
			   (1 0 9))
			  (dash
			   (2 10)))
			 "Display evil marks on buffer" single
			 ((:commit . "ac5997971972a9251f140b5542d82790ca4a43b4")
			  (:authors
			   ("Roman Gonzalez" . "romanandreg@gmail.com"))
			  (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com")
			  (:keywords "evil"))])
 (evil-tutor .
	     [(20150103 650)
	      ((evil
		(1 0 9)))
	      "Vimtutor adapted to Evil and wrapped in a major-mode" tar
	      ((:commit . "4e124cd3911dc0d1b6817ad2c9e59b4753638f28")
	       (:authors
		("Sylvain Benner" . "sylvain.benner@gmail.com"))
	       (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
	       (:keywords "convenience" "editing" "evil")
	       (:url . "https://github.com/syl20bnr/evil-tutor"))])
 (evil-textobj-line .
		    [(20150729 1522)
		     ((evil
		       (1 0 0)))
		     "evil textobj line" single
		     ((:commit . "3d401b6831bdbeec967ec8e64177a8950251e812")
		      (:authors
		       ("Syohei YOSHIDA" . "syohex@gmail.com"))
		      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		      (:url . "https://github.com/syohex/emacs-evil-textobj-line"))])
 (evil-surround .
		[(20190403 418)
		 ((evil
		   (1 2 12)))
		 "emulate surround.vim from Vim" single
		 ((:commit . "5ad01dfa86424c4b22cd1dfa375f13bd8c656f43")
		  (:authors
		   ("Tim Harper <timcharper at gmail dot com>")
		   ("Vegard Øye <vegard_oye at hotmail dot com>           "))
		  (:maintainer "Tim Harper <timcharper at gmail dot com>")
		  (:keywords "emulation" "vi" "evil"))])
 (evil-org .
	   [(20180323 2306)
	    ((emacs
	      (24 4))
	     (evil
	      (1 0)))
	    "evil keybindings for org-mode" tar
	    ((:commit . "b6d652a9163d3430a9e0933a554bdbee5244bbf6")
	     (:maintainer "Somelauw")
	     (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets")
	     (:url . "https://github.com/Somelauw/evil-org-mode.git"))])
 (evil-numbers .
	       [(20140606 1251)
		nil "increment/decrement numbers like in vim" single
		((:commit . "6ea1c8c3a9b37bed63d48f1128e9a4910e68187e")
		 (:authors
		  ("Michael Markert" . "markert.michael@googlemail.com"))
		 (:maintainer "Michael Markert" . "markert.michael@googlemail.com")
		 (:keywords "numbers" "increment" "decrement" "octal" "hex" "binary")
		 (:url . "http://github.com/cofi/evil-numbers"))])
 (evil-nerd-commenter .
		      [(20190801 148)
		       ((emacs
			 (24 4)))
		       "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar
		       ((:commit . "7132693a4cc684dff232839fed45a8a54d832646")
			(:authors
			 ("Chen Bin" . "chenbin.sh@gmail.com"))
			(:maintainer "Chen Bin" . "chenbin.sh@gmail.com")
			(:keywords "commenter" "vim" "line" "evil")
			(:url . "http://github.com/redguardtoo/evil-nerd-commenter"))])
 (evil-mc .
	  [(20190916 348)
	   ((emacs
	     (24 3))
	    (evil
	     (1 2 14))
	    (cl-lib
	     (0 5)))
	   "Multiple cursors for evil-mode" tar
	   ((:commit . "1cabb869fe70cef49f7dc06f015c3ade1a969c8c")
	    (:authors
	     ("Gabriel Adomnicai" . "gabesoft@gmail.com"))
	    (:maintainer "Gabriel Adomnicai" . "gabesoft@gmail.com")
	    (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc")
	    (:url . "https://github.com/gabesoft/evil-mc"))])
 (evil-matchit .
	       [(20190927 638)
		((evil
		  (1 2 0))
		 (emacs
		  (24 4)))
		"Vim matchit ported to Evil" tar
		((:commit . "2a53963ffc66c620ad4154092c2bf76831adbd20")
		 (:authors
		  ("Chen Bin" . "chenbin.sh@gmail.com"))
		 (:maintainer "Chen Bin" . "chenbin.sh@gmail.com")
		 (:keywords "matchit" "vim" "evil")
		 (:url . "http://github.com/redguardtoo/evil-matchit"))])
 (evil-magit .
	     [(20190904 1730)
	      ((evil
		(1 2 3))
	       (magit
		(2 6 0)))
	      "evil-based key bindings for magit" single
	      ((:commit . "4b66a1db8285457147a5436f209391016a819ea1")
	       (:authors
		("Justin Burkett" . "justin@burkett.cc"))
	       (:maintainer "Justin Burkett" . "justin@burkett.cc")
	       (:url . "https://github.com/justbur/evil-magit"))])
 (evil-lisp-state .
		  [(20160404 248)
		   ((evil
		     (1 0 9))
		    (bind-map
		     (0))
		    (smartparens
		     (1 6 1)))
		   "An evil state to edit Lisp code" single
		   ((:commit . "3c65fecd9917a41eaf6460f22187e2323821f3ce")
		    (:authors
		     ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		    (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		    (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic")
		    (:url . "https://github.com/syl20bnr/evil-lisp-state"))])
 (evil-lion .
	    [(20170811 614)
	     ((emacs
	       (24 3))
	      (evil
	       (1 0 0)))
	     "Evil align operator, port of vim-lion" single
	     ((:commit . "6b03593f5dd6e7c9ca02207f9a73615cf94c93ab")
	      (:authors
	       ("edkolev" . "evgenysw@gmail.com"))
	      (:maintainer "edkolev" . "evgenysw@gmail.com")
	      (:keywords "emulations" "evil" "vim")
	      (:url . "http://github.com/edkolev/evil-lion"))])
 (evil-indent-plus .
		   [(20151109 1906)
		    ((evil
		      (0))
		     (cl-lib
		      (0 5)))
		    "Evil textobjects based on indentation" single
		    ((:commit . "0c7501e6efed661242c3a20e0a6c79a6455c2c40")
		     (:authors
		      ("Eivind Fonn" . "evfonn@gmail.com"))
		     (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
		     (:keywords "convenience" "evil")
		     (:url . "http://github.com/TheBB/evil-indent-plus"))])
 (evil-iedit-state .
		   [(20180607 558)
		    ((evil
		      (1 0 9))
		     (iedit
		      (0 97)))
		    "Evil states to interface iedit mode." single
		    ((:commit . "f75cff4ecbd5beaa9ca64a6c157c4105f078daec")
		     (:authors
		      ("Sylvain Benner" . "sylvain.benner@gmail.com"))
		     (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com")
		     (:keywords "convenience" "editing" "evil" "iedit" "mnemonic")
		     (:url . "https://github.com/syl20bnr/evil-iedit-state"))])
 (evil-goggles .
	       [(20181123 1946)
		((emacs
		  (24 4))
		 (evil
		  (1 0 0)))
		"Add a visual hint to evil operations" single
		((:commit . "78454a7e8bd609edf0d93cb0a7f9ed576dd33546")
		 (:authors
		  ("edkolev" . "evgenysw@gmail.com"))
		 (:maintainer "edkolev" . "evgenysw@gmail.com")
		 (:keywords "emulations" "evil" "vim" "visual")
		 (:url . "http://github.com/edkolev/evil-goggles"))])
 (evil-exchange .
		[(20170511 259)
		 ((evil
		   (1 2 8))
		  (cl-lib
		   (0 3)))
		 "Exchange text more easily within Evil" single
		 ((:commit . "47691537815150715e64e6f6ec79be7746c96120")
		  (:authors
		   ("Dewdrops" . "v_v_4474@126.com"))
		  (:maintainer "Dewdrops" . "v_v_4474@126.com")
		  (:keywords "evil" "plugin")
		  (:url . "http://github.com/Dewdrops/evil-exchange"))])
 (evil-escape .
	      [(20180910 1234)
	       nil "No description available." single
	       ((:commit . "f4e9116bfbaac8c9d210c17ad488e0982291245f"))])
 (evil-ediff .
	     [(20170724 1923)
	      ((evil
		(1 2 3)))
	      "Make ediff a little evil" single
	      ((:commit . "50d26cb0654fca8f8fd7227410e5cbf0b8f681cf")
	       (:authors
		("Justin Burkett" . "justin@burkett.cc"))
	       (:maintainer "Justin Burkett" . "justin@burkett.cc")
	       (:url . "https://github.com/justbur/evil-ediff"))])
 (evil-cleverparens .
		    [(20170718 413)
		     ((evil
		       (1 0))
		      (paredit
		       (1))
		      (smartparens
		       (1 6 1))
		      (emacs
		       (24 4))
		      (dash
		       (2 12 0)))
		     "Evil friendly minor-mode for editing lisp." tar
		     ((:commit . "8c45879d49bfa6d4e414b6c1df700a4a51cbb869")
		      (:authors
		       ("Olli Piepponen" . "opieppo@gmail.com"))
		      (:maintainer "Olli Piepponen" . "opieppo@gmail.com")
		      (:keywords "cleverparens" "parentheses" "evil" "paredit" "smartparens")
		      (:url . "https://github.com/luxbock/evil-cleverparens"))])
 (evil-args .
	    [(20180908 2157)
	     ((evil
	       (1 0 8)))
	     "Motions and text objects for delimited arguments in Evil." single
	     ((:commit . "758ad5ae54ad34202064fec192c88151c08cb387")
	      (:authors
	       ("Connor Smith" . "wconnorsmith@gmail.com"))
	      (:maintainer "Connor Smith" . "wconnorsmith@gmail.com")
	      (:keywords "evil" "vim-emulation")
	      (:url . "http://github.com/wcsmith/evil-args"))])
 (evil-anzu .
	    [(20170124 718)
	     ((evil
	       (1 0 0))
	      (anzu
	       (0 46)))
	     "anzu for evil-mode" single
	     ((:commit . "9bca6ca14d865e7e005bc02a28a09b4ae74facc9")
	      (:authors
	       ("Syohei YOSHIDA" . "syohex@gmail.com")
	       ("Fredrik Bergroth" . "fbergroth@gmail.com"))
	      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	      (:url . "https://github.com/syohex/emacs-evil-anzu"))])
 (evil .
       [(20190729 704)
	((emacs
	  (24 1))
	 (undo-tree
	  (0 6 3))
	 (goto-chg
	  (1 6))
	 (cl-lib
	  (0 5)))
	"Extensible Vi layer for Emacs." tar
	((:commit . "874beba2cb243c325eca08fb7badff567f3c9494"))])
 (eval-sexp-fu .
	       [(20190109 809)
		((cl-lib
		  (0)))
		"Tiny functionality enhancements for evaluating sexps." single
		((:commit . "e1d7165383c941b3f11c2715707adc3d91d129a0")
		 (:authors
		  ("Takeshi Banse" . "takebi@laafc.net"))
		 (:maintainer "Takeshi Banse" . "takebi@laafc.net")
		 (:keywords "lisp" "highlight" "convenience"))])
 (eshell-z .
	   [(20190823 2341)
	    ((cl-lib
	      (0 5)))
	    "cd to frequent directory in eshell" single
	    ((:commit . "ee30761bd368df5f2e55c744ccc44089c7a46b6d")
	     (:authors
	      ("Chunyang Xu" . "mail@xuchunyang.me"))
	     (:maintainer "Chunyang Xu" . "mail@xuchunyang.me")
	     (:keywords "convenience")
	     (:url . "https://github.com/xuchunyang/eshell-z"))])
 (eshell-prompt-extras .
		       [(20181229 1418)
			nil "Display extra information for your eshell prompt." single
			((:commit . "5a328e1b9112c7f31ce2da7cde340f96626546b6")
			 (:authors
			  ("zwild" . "judezhao@outlook.com"))
			 (:maintainer "Chunyang Xu" . "mail@xuchunyang.me")
			 (:keywords "eshell" "prompt")
			 (:url . "https://github.com/zwild/eshell-prompt-extras"))])
 (esh-help .
	   [(20190905 22)
	    ((dash
	      (1 4 0)))
	    "Add some help functions and support for Eshell" single
	    ((:commit . "417673ed18a983930a66a6692dbfb288a995cb80")
	     (:authors
	      ("Tomoya Tanjo" . "ttanjo@gmail.com"))
	     (:maintainer "Tomoya Tanjo" . "ttanjo@gmail.com")
	     (:keywords "eshell" "extensions")
	     (:url . "https://github.com/tom-tan/esh-help/"))])
 (epl .
      [(20180205 2049)
       ((cl-lib
	 (0 3)))
       "Emacs Package Library" single
       ((:commit . "78ab7a85c08222cd15582a298a364774e3282ce6")
	(:authors
	 ("Sebastian Wiesner" . "swiesner@lunaryorn.com"))
	(:maintainer "Johan Andersson" . "johan.rejeep@gmail.com")
	(:keywords "convenience")
	(:url . "http://github.com/cask/epl"))])
 (epc .
      [(20140610 534)
       ((concurrent
	 (0 3 1))
	(ctable
	 (0 1 2)))
       "A RPC stack for the Emacs Lisp" tar
       ((:commit . "e1bfa5ca163273859336e3cc89b4b6460f7f8cda")
	(:authors
	 ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	(:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	(:keywords "lisp" "rpc")
	(:url . "https://github.com/kiwanami/emacs-epc"))])
 (engine-mode .
	      [(20181222 2027)
	       ((cl-lib
		 (0 5)))
	       "Define and query search engines from within Emacs." single
	       ((:commit . "117a9c0cbc1ff8ade7f17cd40d1d2f5eb24f51a3")
		(:authors
		 ("Harry R. Schwartz" . "hello@harryrschwartz.com"))
		(:maintainer "Harry R. Schwartz" . "hello@harryrschwartz.com")
		(:url . "https://github.com/hrs/engine-mode"))])
 (emms .
       [(20190905 2111)
	((cl-lib
	  (0 5)))
	"The Emacs Multimedia System" tar
	((:commit . "2bad5e6cf7442cff492cafe896c47719ae77b8fb")
	 (:authors
	  ("Jorgen Schäfer" . "forcer@forcix.cx"))
	 (:maintainer "Jorgen Schäfer" . "forcer@forcix.cx")
	 (:keywords "emms" "mp3" "mpeg" "multimedia")
	 (:url . "http://www.gnu.org/software/emms/"))])
 (emmet-mode .
	     [(20180613 341)
	      nil "Unofficial Emmet's support for emacs" single
	      ((:commit . "1acb821e0142136344ccf40c1e5fb664d7db2e70")
	       (:authors
		("Shin Aoyama" . "smihica@gmail.com"))
	       (:maintainer "Shin Aoyama" . "smihica@gmail.com")
	       (:keywords "convenience")
	       (:url . "https://github.com/smihica/emmet-mode"))])
 (emacsql-sqlite .
		 [(20190727 1710)
		  ((emacs
		    (25 1))
		   (emacsql
		    (2 0 0)))
		  "EmacSQL back-end for SQLite" tar
		  ((:commit . "a118b6c95af1306f0288a383d274b5dd93efbbda")
		   (:authors
		    ("Christopher Wellons" . "wellons@nullprogram.com"))
		   (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
		   (:url . "https://github.com/skeeto/emacsql"))])
 (emacsql .
	  [(20190625 1859)
	   ((emacs
	     (25 1)))
	   "high-level SQL database front-end" tar
	   ((:commit . "a118b6c95af1306f0288a383d274b5dd93efbbda")
	    (:authors
	     ("Christopher Wellons" . "wellons@nullprogram.com"))
	    (:maintainer "Christopher Wellons" . "wellons@nullprogram.com")
	    (:url . "https://github.com/skeeto/emacsql"))])
 (elisp-slime-nav .
		  [(20160128 1909)
		   ((cl-lib
		     (0 2)))
		   "Make M-. and M-, work in elisp like they do in slime" single
		   ((:commit . "be36d66b4781eab7218bff419f3ec79573bbd15c")
		    (:authors
		     ("Steve Purcell" . "steve@sanityinc.com"))
		    (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		    (:keywords "navigation" "slime" "elisp" "emacs-lisp")
		    (:url . "https://github.com/purcell/elisp-slime-nav"))])
 (elisp-demos .
	      [(20190816 421)
	       ((emacs
		 (24 4)))
	       "Elisp API Demos" tar
	       ((:commit . "628ade09bf24331003f7f69a3ebfa57da09288c0")
		(:authors
		 ("Xu Chunyang" . "mail@xuchunyang.me"))
		(:maintainer "Xu Chunyang" . "mail@xuchunyang.me")
		(:keywords "lisp" "docs")
		(:url . "https://github.com/xuchunyang/elisp-demos"))])
 (elfeed .
	 [(20190903 1137)
	  ((emacs
	    (24 3)))
	  "an Emacs Atom/RSS feed reader" tar
	  ((:commit . "69b0320156cbf7e395efa670464d4651f708332f"))])
 (eldoc-eval .
	     [(20190423 1858)
	      nil "Enable eldoc support when minibuffer is in use." single
	      ((:commit . "a67fe3637378dcb6c5f9e140acc8131f0d2346b3")
	       (:authors
		("Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))
	       (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (ein .
      [(20190813 2156)
       ((emacs
	 (25))
	(websocket
	 (20190620 338))
	(auto-complete
	 (1 4 0))
	(request
	 (20190621 1622))
	(deferred
	  (0 5))
	(polymode
	 (20190426 1729))
	(markdown-mode
	 (20171116 756))
	(dash
	 (2 13 0))
	(s
	 (1 11 0))
	(skewer-mode
	 (1 6 2)))
       "Emacs IPython Notebook" tar
       ((:commit . "a2872eff6c18a0706c531e9316c792a9fb99826f"))])
 (editorconfig .
	       [(20190703 336)
		((cl-lib
		  (0 5))
		 (emacs
		  (24)))
		"EditorConfig Emacs Plugin" tar
		((:commit . "f24f651245344f5f97c348246ce035843419b322")
		 (:authors
		  ("EditorConfig Team" . "editorconfig@googlegroups.com"))
		 (:maintainer "EditorConfig Team" . "editorconfig@googlegroups.com")
		 (:url . "https://github.com/editorconfig/editorconfig-emacs#readme"))])
 (dumb-jump .
	    [(20190928 1758)
	     ((emacs
	       (24 3))
	      (f
	       (0 20 0))
	      (s
	       (1 11 0))
	      (dash
	       (2 9 0))
	      (popup
	       (0 5 3)))
	     "jump to definition for 40+ languages without configuration." single
	     ((:commit . "29840442046c5b07badabd78bd8bfd67673c4ba2")
	      (:authors
	       ("jack angers and contributors"))
	      (:maintainer "jack angers and contributors")
	      (:keywords "programming"))])
 (dotenv-mode .
	      [(20180207 1914)
	       ((emacs
		 (24 3)))
	       "Major mode for .env files" single
	       ((:commit . "f4c52bcd5313379b9f2460db7f7a33119dfa96ea")
		(:authors
		 ("Preetpal S. Sohal"))
		(:maintainer "Preetpal S. Sohal")
		(:url . "https://github.com/preetpalS/emacs-dotenv-mode"))])
 (doom-modeline .
		[(20190918 1510)
		 ((emacs
		   (25 1))
		  (all-the-icons
		   (1 0 0))
		  (shrink-path
		   (0 2 0))
		  (dash
		   (2 11 0)))
		 "A minimal and modern mode-line" tar
		 ((:commit . "67ef88a9c91a15bf5767747ab94afbd8f3ba3f43")
		  (:authors
		   ("Vincent Zhang" . "seagle0128@gmail.com"))
		  (:maintainer "Vincent Zhang" . "seagle0128@gmail.com")
		  (:keywords "faces" "mode-line")
		  (:url . "https://github.com/seagle0128/doom-modeline"))])
 (doom .
       [(20180301 2308)
	((cl-lib
	  (0 5)))
	"DOM implementation and manipulation library" single
	((:commit . "e59040aefc92dd9b3134eb623624307fb9e4327b")
	 (:authors
	  ("Alex Schroeder" . "alex@gnu.org")
	  ("Henrik.Motakef" . "elisp@henrik-motakef.de")
	  ("Katherine Whitlock" . "toroidal-code@gmail.com")
	  ("Syohei YOSHIDA" . "syohex@gmail.com"))
	 (:maintainer "Alex Schroeder")
	 (:keywords "xml" "dom")
	 (:url . "http://www.github.com/kensanata/doom.el/"))])
 (display-theme .
		[(20140115 1556)
		 ((emacs
		   (24)))
		 "display current theme(s) at mode-line" single
		 ((:commit . "b180b3be7a74ae4799a14e7e4bc2fe10e3ff7a15")
		  (:authors
		   ("KAWABATA, Taichi <kawabata.taichi_at_gmail.com>"))
		  (:maintainer "KAWABATA, Taichi <kawabata.taichi_at_gmail.com>")
		  (:keywords "tools")
		  (:url . "https://github.com/kawabata/emacs-display-theme/"))])
 (disaster .
	   [(20171016 2152)
	    nil "Disassemble C/C++ code under cursor in Emacs" single
	    ((:commit . "10a785facc60d89d78e0d5177985ab1af1741bb4")
	     (:authors
	      ("Justine Tunney" . "jtunney@gmail.com"))
	     (:maintainer "Justine Tunney" . "jtunney@gmail.com")
	     (:keywords "tools")
	     (:url . "https://github.com/jart/disaster"))])
 (disable-mouse .
		[(20181225 2206)
		 nil "Disable mouse commands globally" single
		 ((:commit . "689ea9f3d702529a5b5ac2493e28eefca65c7abb")
		  (:authors
		   ("Steve Purcell" . "steve@sanityinc.com"))
		  (:maintainer "Steve Purcell" . "steve@sanityinc.com")
		  (:keywords "mouse")
		  (:url . "https://github.com/purcell/disable-mouse"))])
 (dired-subtree .
		[(20180922 1615)
		 ((dash
		   (2 5 0))
		  (dired-hacks-utils
		   (0 0 1)))
		 "Insert subdirectories in a tree-like fashion" single
		 ((:commit . "886befe113fae397407c804f72c45613d1d43535")
		  (:authors
		   ("Matúš Goljer" . "matus.goljer@gmail.com"))
		  (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com")
		  (:keywords "files"))])
 (diminish .
	   [(20170419 1736)
	    nil "Diminished modes are minor modes with no modeline display" single
	    ((:commit . "565a983a39d2e2cffab5df13b34f3b6116723208")
	     (:authors
	      ("Will Mengarini" . "seldon@eskimo.com"))
	     (:maintainer "Martin Yrjölä" . "martin.yrjola@gmail.com")
	     (:keywords "extensions" "diminish" "minor" "codeprose")
	     (:url . "https://github.com/myrjola/diminish.el"))])
 (diff-hl .
	  [(20190707 2243)
	   ((cl-lib
	     (0 2))
	    (emacs
	     (24 3)))
	   "Highlight uncommitted changes using VC" tar
	   ((:commit . "374b1d4b34876219218da7a539e7301259b56958")
	    (:authors
	     ("Dmitry Gutov" . "dgutov@yandex.ru"))
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:keywords "vc" "diff")
	    (:url . "https://github.com/dgutov/diff-hl"))])
 (devdocs .
	  [(20170731 850)
	   nil "Launch DevDocs search" single
	   ((:commit . "a2d51e824f0cc48a9dd611cc740bc8b86143e611")
	    (:authors
	     ("Chunyang Xu" . "xuchunyang.me@gmail.com"))
	    (:maintainer "Chunyang Xu" . "xuchunyang.me@gmail.com")
	    (:url . "https://github.com/xuchunyang/DevDocs.el"))])
 (demangle-mode .
		[(20190528 306)
		 ((cl-lib
		   (0 1))
		  (emacs
		   (24)))
		 "Automatically demangle C++ symbols" single
		 ((:commit . "06903d731dfde110e10b979dcc7624ef6dbb5ac8")
		  (:authors
		   ("Ben Liblit" . "liblit@acm.org"))
		  (:maintainer "Ben Liblit" . "liblit@acm.org")
		  (:keywords "c" "tools")
		  (:url . "https://github.com/liblit/demangle-mode"))])
 (define-word .
   [(20190506 1525)
    ((emacs
      (24 3)))
    "display the definition of word at point." single
    ((:commit . "11bfee628aee082a9a3a2fd5f083cbdb05d5d00a")
     (:authors
      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
     (:keywords "dictionary" "convenience")
     (:url . "https://github.com/abo-abo/define-word"))])
 (deferred .
   [(20170901 1330)
    ((emacs
      (24 4)))
    "Simple asynchronous functions for emacs lisp" single
    ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16")
     (:authors
      ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
     (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
     (:keywords "deferred" "async")
     (:url . "https://github.com/kiwanami/emacs-deferred"))])
 (default-text-scale .
   [(20190615 247)
    ((emacs
      (24)))
    "Easily adjust the font size in all frames" single
    ((:commit . "dc7e2004be736544149643de2673a5506c83dbaf")
     (:authors
      ("Steve Purcell" . "steve@sanityinc.com"))
     (:maintainer "Steve Purcell" . "steve@sanityinc.com")
     (:keywords "frames" "faces")
     (:url . "https://github.com/purcell/default-text-scale"))])
 (dash-functional .
		  [(20180107 1618)
		   ((dash
		     (2 0 0))
		    (emacs
		     (24)))
		   "Collection of useful combinators for Emacs Lisp" single
		   ((:commit . "a743ae3da1d5869434c6f262bbe45ef30d87cb9c")
		    (:keywords "lisp" "functions" "combinators"))])
 (dash-docs .
	    [(20190516 1702)
	     ((emacs
	       (24 4))
	      (cl-lib
	       (0 5))
	      (async
	       (1 9 3)))
	     "Offline documentation browser using Dash docsets." single
	     ((:commit . "111fd9b97001f1ad887b45e5308a14ddd68ce70a")
	      (:authors
	       ("Raimon Grau" . "raimonster@gmail.com")
	       ("Toni Reina " . "areina0@gmail.com")
	       ("Bryan Gilbert" . "bryan@bryan.sh"))
	      (:maintainer "Raimon Grau" . "raimonster@gmail.com")
	      (:keywords "docs")
	      (:url . "http://github.com/areina/helm-dash"))])
 (dash .
       [(20190920 1035)
	nil "A modern list library for Emacs" single
	((:commit . "a743ae3da1d5869434c6f262bbe45ef30d87cb9c")
	 (:authors
	  ("Magnar Sveen" . "magnars@gmail.com"))
	 (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	 (:keywords "lists"))])
 (dap-mode .
	   [(20190927 1418)
	    ((emacs
	      (25 1))
	     (dash
	      (2 14 1))
	     (lsp-mode
	      (6 0))
	     (dash-functional
	      (1 2 0))
	     (tree-mode
	      (1 1 1 1))
	     (bui
	      (1 1 0))
	     (f
	      (0 20 0))
	     (s
	      (1 12 0)))
	    "Debug Adapter Protocol mode" tar
	    ((:commit . "a62281ccbd8143a9cc552d2f07738a60d1de208f")
	     (:authors
	      ("Ivan Yonchovski" . "yyoncho@gmail.com"))
	     (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com")
	     (:keywords "languages" "debug")
	     (:url . "https://github.com/yyoncho/dap-mode"))])
 (dactyl-mode .
	      [(20140906 1725)
	       nil "Major mode for editing Pentadactyl config files" single
	       ((:commit . "cc55fe6b987271d9647492b8df4c812d884f661f")
		(:keywords "languages" "vim")
		(:url . "https://github.com/luxbock/dactyl-mode"))])
 (d-mode .
	 [(20190826 2244)
	  ((emacs
	    (24 3)))
	  "D Programming Language major mode for (X)Emacs" single
	  ((:commit . "f3843276e235c6b633ba5367f78d74fe7c04e244")
	   (:authors
	    ("William Baxter"))
	   (:maintainer "Russel Winder" . "russel@winder.org.uk")
	   (:keywords "d" "programming" "language" "emacs" "cc-mode"))])
 (cython-mode .
	      [(20190111 2150)
	       nil "Major mode for editing Cython files" single
	       ((:commit . "7e233ab00e117b2e7165c246941ac85a989be262"))])
 (ctable .
	 [(20171006 11)
	  nil "Table component for Emacs Lisp" single
	  ((:commit . "b8830d1ca95abb100a81bc32011bd17d5ecba000")
	   (:authors
	    ("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	   (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	   (:keywords "table")
	   (:url . "https://github.com/kiwanami/emacs-ctable"))])
 (cquery .
	 [(20190118 542)
	  ((emacs
	    (25 1))
	   (lsp-mode
	    (3 4))
	   (dash
	    (0 13)))
	  "cquery client for lsp-mode" tar
	  ((:commit . "555e50984ebda177421fdcdc8c76cb29235d9694")
	   (:authors
	    ("Tobias Pisani"))
	   (:maintainer "Tobias Pisani")
	   (:keywords "languages" "lsp" "c++")
	   (:url . "https://github.com/jacobdufault/cquery"))])
 (counsel-projectile .
		     [(20190817 102)
		      ((counsel
			(0 12 0))
		       (projectile
			(2 0 0)))
		      "Ivy integration for Projectile" single
		      ((:commit . "fda7f0bad93a471fddf5fa01d6fdee5684e7f880")
		       (:authors
			("Eric Danan"))
		       (:maintainer "Eric Danan")
		       (:keywords "project" "convenience")
		       (:url . "https://github.com/ericdanan/counsel-projectile"))])
 (counsel-gtags .
		[(20190923 1842)
		 ((emacs
		   (25 1))
		  (counsel
		   (0 8 0))
		  (seq
		   (1 0)))
		 "ivy for GNU global" single
		 ((:commit . "baac1a718aaa3ad6c439ab48903b12013de2cec0")
		  (:authors
		   ("Syohei YOSHIDA" . "syohex@gmail.com")
		   ("Felipe Lema" . "felipelema@mortemale.org"))
		  (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
		  (:url . "https://github.com/FelipeLema/emacs-counsel-gtags"))])
 (counsel-dash .
	       [(20190823 1334)
		((emacs
		  (24 4))
		 (dash-docs
		  (1 4 0))
		 (counsel
		  (0 8 0))
		 (cl-lib
		  (0 5)))
		"Browse dash docsets using Ivy" single
		((:commit . "24d370be9e94e90d045c49967e19484b9903fce9")
		 (:authors
		  ("Nathan Kot" . "nk@nathankot.com"))
		 (:maintainer "Nathan Kot" . "nk@nathankot.com")
		 (:keywords "dash" "ivy" "counsel")
		 (:url . "https://github.com/nathankot/counsel-dash"))])
 (counsel-css .
	      [(20180302 1036)
	       ((emacs
		 (24 4))
		(counsel
		 (0 7 0))
		(cl-lib
		 (0 5)))
	       "stylesheet-selector-aware swiper" single
	       ((:commit . "0536af00236cdce1ed08b40dd46c917e8b4b8869")
		(:authors
		 ("Henrik Lissner <http://github/hlissner>"))
		(:maintainer "Henrik Lissner" . "henrik@lissner.net")
		(:keywords "convenience" "tools" "counsel" "swiper" "selector" "css" "less" "scss")
		(:url . "https://github.com/hlissner/emacs-counsel-css"))])
 (counsel .
	  [(20190830 1557)
	   ((emacs
	     (24 3))
	    (swiper
	     (0 12 0)))
	   "Various completion functions using Ivy" single
	   ((:commit . "79333e9edfee38ec3b367c33711a68bdf7783259")
	    (:authors
	     ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	    (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	    (:keywords "convenience" "matching" "tools")
	    (:url . "https://github.com/abo-abo/swiper"))])
 (conda .
	[(20190607 1625)
	 ((emacs
	   (24 4))
	  (pythonic
	   (0 1 0))
	  (dash
	   (2 13 0))
	  (s
	   (1 11 0))
	  (f
	   (0 18 2)))
	 "Work with your conda environments" single
	 ((:commit . "d65f6d2a47c96e1ff1c7af0e83aee1f5acfe858e")
	  (:authors
	   ("Rami Chowdhury" . "rami.chowdhury@gmail.com"))
	  (:maintainer "Rami Chowdhury" . "rami.chowdhury@gmail.com")
	  (:keywords "python" "environment" "conda")
	  (:url . "http://github.com/necaris/conda.el"))])
 (concurrent .
	     [(20161229 330)
	      ((emacs
		(24 3))
	       (deferred
		 (0 5 0)))
	      "Concurrent utility functions for emacs lisp" single
	      ((:commit . "2239671d94b38d92e9b28d4e12fd79814cfb9c16")
	       (:authors
		("SAKURAI Masashi <m.sakurai at kiwanami.net>"))
	       (:maintainer "SAKURAI Masashi <m.sakurai at kiwanami.net>")
	       (:keywords "deferred" "async" "concurrent")
	       (:url . "https://github.com/kiwanami/emacs-deferred/blob/master/README-concurrent.markdown"))])
 (company-web .
	      [(20180402 1155)
	       ((company
		 (0 8 0))
		(dash
		 (2 8 0))
		(cl-lib
		 (0 5 0))
		(web-completion-data
		 (0 1 0)))
	       "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar
	       ((:commit . "f0cc9187c9c34f72ad71f5649a69c74f996bae9a")
		(:authors
		 ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))
		(:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com")
		(:keywords "html" "company")
		(:url . "https://github.com/osv/company-web"))])
 (company-tern .
	       [(20161004 1847)
		((company
		  (0 8 0))
		 (tern
		  (0 0 1))
		 (dash
		  (2 8 0))
		 (dash-functional
		  (2 8 0))
		 (s
		  (1 9 0))
		 (cl-lib
		  (0 5 0)))
		"Tern backend for company-mode" single
		((:commit . "10ac058b065ae73c1f30e9fb7d969dd1a79387be")
		 (:authors
		  ("Artem Malyshev" . "proofit404@gmail.com"))
		 (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
		 (:url . "https://github.com/proofit404/company-tern"))])
 (company-statistics .
		     [(20170210 1933)
		      ((emacs
			(24 3))
		       (company
			(0 8 5)))
		      "Sort candidates using completion history" single
		      ((:commit . "e62157d43b2c874d2edbd547c3bdfb05d0a7ae5c")
		       (:authors
			("Ingo Lohmar" . "i.lohmar@gmail.com"))
		       (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
		       (:keywords "abbrev" "convenience" "matching")
		       (:url . "https://github.com/company-mode/company-statistics"))])
 (company-shell .
		[(20170518 541)
		 ((emacs
		   (24 4))
		  (company
		   (0 8 12))
		  (dash
		   (2 12 0))
		  (cl-lib
		   (0 5)))
		 "Company mode backend for shell functions" single
		 ((:commit . "52f3bf26b74adc30a275f5f4290a1fc72a6876ff")
		  (:authors
		   ("Alexander Miller" . "alexanderm@web.de"))
		  (:maintainer "Alexander Miller" . "alexanderm@web.de")
		  (:keywords "company" "shell" "auto-completion")
		  (:url . "https://github.com/Alexander-Miller/company-shell"))])
 (company-rtags .
		[(20190821 449)
		 ((emacs
		   (24 3))
		  (company
		   (0 8 1))
		  (rtags
		   (2 10)))
		 "RTags back-end for company" single
		 ((:commit . "d3d4bc9b7b829d39628a1af96f06eb23ba48670c")
		  (:authors
		   ("Jan Erik Hanssen" . "jhanssen@gmail.com")
		   ("Anders Bakken" . "agbakken@gmail.com"))
		  (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com")
		  (:url . "http://rtags.net"))])
 (company-reftex .
		 [(20181222 906)
		  ((emacs
		    (25 1))
		   (s
		    (1 12))
		   (company
		    (0 8)))
		  "Company backend based on RefTeX." single
		  ((:commit . "33935e96540201adab43f3a765d62289eba9e286")
		   (:authors
		    ("Eivind Fonn" . "evfonn@gmail.com"))
		   (:maintainer "Eivind Fonn" . "evfonn@gmail.com")
		   (:keywords "bib" "tex" "company" "latex" "reftex" "references" "labels" "citations")
		   (:url . "https://github.com/TheBB/company-reftex"))])
 (company-quickhelp .
		    [(20180525 1003)
		     ((emacs
		       (24 3))
		      (company
		       (0 8 9))
		      (pos-tip
		       (0 4 6)))
		     "Popup documentation for completion candidates" single
		     ((:commit . "479676cade80a9f03802ca3d956591820ed5c537")
		      (:authors
		       ("Lars Andersen" . "expez@expez.com"))
		      (:maintainer "Lars Andersen" . "expez@expez.com")
		      (:keywords "company" "popup" "documentation" "quickhelp")
		      (:url . "https://www.github.com/expez/company-quickhelp"))])
 (company-lsp .
	      [(20190612 1553)
	       ((emacs
		 (25 1))
		(lsp-mode
		 (6 0))
		(company
		 (0 9 0))
		(s
		 (1 2 0))
		(dash
		 (2 11 0)))
	       "Company completion backend for lsp-mode." single
	       ((:commit . "f921ffa0cdc542c21dc3dd85f2c93df4288e83bd")
		(:url . "https://github.com/tigersoldier/company-lsp"))])
 (company-irony .
		[(20190124 2346)
		 ((emacs
		   (24 1))
		  (company
		   (0 8 0))
		  (irony
		   (1 1 0))
		  (cl-lib
		   (0 5)))
		 "company-mode completion back-end for irony-mode" single
		 ((:commit . "b44711dfce445610c1ffaec4951c6ff3882b216a")
		  (:authors
		   ("Guillaume Papin" . "guillaume.papin@epitech.eu"))
		  (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu")
		  (:keywords "convenience")
		  (:url . "https://github.com/Sarcasm/company-irony/"))])
 (company-dcd .
	      [(20190116 256)
	       ((company
		 (0 9))
		(flycheck-dmd-dub
		 (0 7))
		(yasnippet
		 (0 8))
		(popwin
		 (0 7))
		(cl-lib
		 (0 5))
		(ivy
		 (20160804 326)))
	       "Company backend for Dlang using DCD." single
	       ((:commit . "11e90949e546fcff1b1cd40887ad7b6701aa1653")
		(:authors
		 ("tsukimizake <shomasd_at_gmail.com>"))
		(:maintainer "tsukimizake <shomasd_at_gmail.com>")
		(:keywords "languages")
		(:url . "http://github.com/tsukimizake/company-dcd"))])
 (company-c-headers .
		    [(20190825 1631)
		     ((emacs
		       (24 1))
		      (company
		       (0 8)))
		     "Company mode backend for C/C++ header files" single
		     ((:commit . "5e676ab0c2f287c868b1e3931afd4c78895910cd")
		      (:authors
		       ("Alastair Rankine" . "alastair@girtby.net"))
		      (:maintainer "Alastair Rankine" . "alastair@girtby.net")
		      (:keywords "development" "company"))])
 (company-auctex .
		 [(20180725 1912)
		  ((yasnippet
		    (0 8 0))
		   (company
		    (0 8 0))
		   (auctex
		    (11 87)))
		  "Company-mode auto-completion for AUCTeX" single
		  ((:commit . "48c42c58ce2f0e693301b0cb2d085055410c1b25")
		   (:authors
		    ("Christopher Monsanto <chris@monsan.to>, Alexey Romanov" . "alexey.v.romanov@gmail.com"))
		   (:maintainer "Christopher Monsanto <chris@monsan.to>, Alexey Romanov" . "alexey.v.romanov@gmail.com")
		   (:url . "https://github.com/alexeyr/company-auctex/"))])
 (company-anaconda .
		   [(20181025 1305)
		    ((company
		      (0 8 0))
		     (anaconda-mode
		      (0 1 1))
		     (cl-lib
		      (0 5 0))
		     (dash
		      (2 6 0))
		     (s
		      (1 9)))
		    "Anaconda backend for company-mode" single
		    ((:commit . "398fad19160cc1d0e31dcb1d4a3f88de7a2d355d")
		     (:authors
		      ("Artem Malyshev" . "proofit404@gmail.com"))
		     (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
		     (:url . "https://github.com/proofit404/anaconda-mode"))])
 (company .
	  [(20190907 1149)
	   ((emacs
	     (24 3)))
	   "Modular text completion framework" tar
	   ((:commit . "f6974e3103497afe01da2ad4d2ea3668ad68bc27")
	    (:authors
	     ("Nikolaj Schumacher"))
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:keywords "abbrev" "convenience" "matching")
	    (:url . "http://company-mode.github.io/"))])
 (command-queue .
		[(20160328 1725)
		 ((emacs
		   (24 3)))
		 "shell command queue" single
		 ((:commit . "f327c6f852592229a755ec6de0c62c6aeafd6659")
		  (:authors
		   ("Yuki INOUE <inouetakahiroki at gmail.com>"))
		  (:maintainer "Yuki INOUE <inouetakahiroki at gmail.com>")
		  (:url . "https://github.com/Yuki-Inoue/command-queue"))])
 (command-log-mode .
		   [(20160412 2147)
		    nil "log keyboard commands to buffer" single
		    ((:commit . "af600e6b4129c8115f464af576505ea8e789db27")
		     (:keywords "help")
		     (:authors
		      ("Michael Weber" . "michaelw@foldr.org"))
		     (:maintainer "Michael Weber" . "michaelw@foldr.org")
		     (:url . "https://github.com/lewang/command-log-mode"))])
 (column-enforce-mode .
		      [(20171030 1900)
		       nil "Highlight text that extends beyond a  column" single
		       ((:commit . "2341a2b6a33d4b8b74c35062ec9cfe1bffd61944")
			(:authors
			 ("Jordon Biondo"))
			(:maintainer "Jordon Biondo")
			(:url . "www.github.com/jordonbiondo/column-enforce-mode"))])
 (coffee-mode .
	      [(20170324 940)
	       ((emacs
		 (24 3)))
	       "Major mode for CoffeeScript code" single
	       ((:commit . "86ab8aae8662e8eff54d3013010b9c693b16eac5")
		(:authors
		 ("Chris Wanstrath" . "chris@ozmm.org"))
		(:maintainer "Chris Wanstrath" . "chris@ozmm.org")
		(:keywords "coffeescript" "major" "mode")
		(:url . "http://github.com/defunkt/coffee-mode"))])
 (code-archive .
	       [(20190612 308)
		((emacs
		  (24 3)))
		"git supported code archive and reference for org-mode" single
		((:commit . "1ad9af6679d0294c3056eab9cad673f29c562721")
		 (:authors
		  ("Michael Schuldt" . "mbschuldt@gmail.com"))
		 (:maintainer "Michael Schuldt" . "mbschuldt@gmail.com")
		 (:url . "https://github.com/mschuldt/code-archive"))])
 (cmake-mode .
	     [(20190710 1319)
	      ((emacs
		(24 1)))
	      "major-mode for editing CMake sources" single
	      ((:commit . "9cd47ff3c8e9e5b2706075445b4eba5c332dc1d8"))])
 (cmake-ide .
	    [(20190731 1009)
	     ((emacs
	       (24 4))
	      (cl-lib
	       (0 5))
	      (seq
	       (1 11))
	      (levenshtein
	       (0))
	      (s
	       (1 11 0)))
	     "Calls CMake to find out include paths and other compiler flags" single
	     ((:commit . "e3aa1ded10c079337826b40586111df7114f6379")
	      (:authors
	       ("Atila Neves" . "atila.neves@gmail.com"))
	      (:maintainer "Atila Neves" . "atila.neves@gmail.com")
	      (:keywords "languages")
	      (:url . "http://github.com/atilaneves/cmake-ide"))])
 (closql .
	 [(20190731 1450)
	  ((emacs
	    (25 1))
	   (emacsql-sqlite
	    (3 0 0)))
	  "store EIEIO objects using EmacSQL" single
	  ((:commit . "70b98dbae53611d10a461d9b4a6f71086910dcef")
	   (:authors
	    ("Jonas Bernoulli" . "jonas@bernoul.li"))
	   (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	   (:keywords "extensions")
	   (:url . "https://github.com/emacscollective/closql"))])
 (clojure-mode .
	       [(20190914 1029)
		((emacs
		  (25 1)))
		"Major mode for Clojure code" single
		((:commit . "147bf84189ef672161b2229ddc5c35713323ad59")
		 (:keywords "languages" "clojure" "clojurescript" "lisp")
		 (:url . "http://github.com/clojure-emacs/clojure-mode"))])
 (clean-aindent-mode .
		     [(20171017 2043)
		      nil "Simple indent and unindent, trims indent white-space" single
		      ((:commit . "a97bcae8f43a9ff64e95473e4ef0d8bafe829211")
		       (:authors
			("peter marinov" . "efravia@gmail.com"))
		       (:maintainer "peter marinov" . "efravia@gmail.com")
		       (:keywords "indentation" "whitespace" "backspace")
		       (:url . "https://github.com/pmarinov/clean-aindent-mode"))])
 (clang-format .
	       [(20190517 722)
		((cl-lib
		  (0 3)))
		"Format code using clang-format" single
		((:commit . "77ee89a0b6c1b956bc68d192527d1a0391fe5baa")
		 (:keywords "tools" "c"))])
 (clang-format+ .
		[(20190824 2216)
		 ((emacs
		   (25 1))
		  (clang-format
		   (20180406 1514)))
		 "Minor mode for automatic clang-format application" single
		 ((:commit . "ddd4bfe1a13c2fd494ce339a320a51124c1d2f68")
		  (:keywords "c" "c++" "clang-format")
		  (:url . "https://github.com/SavchenkoValeriy/emacs-clang-format-plus"))])
 (choice-program .
		 [(20190817 2153)
		  ((emacs
		    (26)))
		  "parameter based program" tar
		  ((:commit . "583242445e7890a12bb674b43244bf27c84d91f6")
		   (:authors
		    ("Paul Landes"))
		   (:maintainer "Paul Landes")
		   (:keywords "exec" "execution" "parameter" "option")
		   (:url . "https://github.com/plandes/choice-program"))])
 (centered-cursor-mode .
		       [(20190306 1006)
			nil "cursor stays vertically centered" single
			((:commit . "90e6d68a74d134f67c32d0621d64db90703c46eb")
			 (:authors
			  ("André Riemann" . "andre.riemann@web.de"))
			 (:maintainer "André Riemann" . "andre.riemann@web.de")
			 (:keywords "convenience")
			 (:url . "https://github.com/andre-r/centered-cursor-mode.el"))])
 (ccls .
       [(20190927 246)
	((emacs
	  (25 1))
	 (lsp-mode
	  (4 2))
	 (dash
	  (0 14))
	 (projectile
	  (1 0 0)))
	"ccls client for lsp-mode" tar
	((:commit . "7f2598455b0460b65789aa68c8680822f4595f11")
	 (:authors
	  ("Tobias Pisani, Fangrui Song"))
	 (:maintainer "Tobias Pisani, Fangrui Song")
	 (:keywords "languages" "lsp" "c++")
	 (:url . "https://github.com/MaskRay/emacs-ccls"))])
 (bui .
      [(20181218 1830)
       ((emacs
	 (24 3))
	(dash
	 (2 11 0)))
       "Buffer interface library" tar
       ((:commit . "508577a7225b3d07eaefa9444064410af2518675")
	(:authors
	 ("Alex Kost" . "alezost@gmail.com"))
	(:maintainer "Alex Kost" . "alezost@gmail.com")
	(:keywords "tools")
	(:url . "https://github.com/alezost/bui.el"))])
 (buffer-manage .
		[(20190815 502)
		 ((emacs
		   (26))
		  (choice-program
		   (0 5))
		  (dash
		   (2 13 0)))
		 "manage buffers" tar
		 ((:commit . "47852b908a0d9a059e9f8cd7797229ecf6259b8c")
		  (:authors
		   ("Paul Landes"))
		  (:maintainer "Paul Landes")
		  (:keywords "interactive" "buffer" "management")
		  (:url . "https://github.com/plandes/buffer-manage"))])
 (bshell .
	 [(20190617 238)
	  ((emacs
	    (25))
	   (buffer-manage
	    (0 5)))
	  "manage and track multiple inferior shells" single
	  ((:commit . "5cdffa393ec3f923736bc6459bc958829a321327")
	   (:authors
	    ("Paul Landes"))
	   (:maintainer "Paul Landes")
	   (:keywords "interactive" "shell" "management")
	   (:url . "https://github.com/plandes/bshell"))])
 (browse-at-remote .
		   [(20190213 1929)
		    ((f
		      (0 17 2))
		     (s
		      (1 9 0))
		     (cl-lib
		      (0 5)))
		    "Open github/gitlab/bitbucket/stash/gist/phab/sourcehut page from Emacs" single
		    ((:commit . "1a9392e9d1fad4e1aafb25b68b4e6857fde8f564")
		     (:authors
		      ("Rustem Muslimov" . "r.muslimov@gmail.com"))
		     (:maintainer "Rustem Muslimov" . "r.muslimov@gmail.com")
		     (:keywords "github" "gitlab" "bitbucket" "gist" "stash" "phabricator" "sourcehut"))])
 (blacken .
	  [(20190917 535)
	   ((emacs
	     (25 2)))
	   "Reformat python buffers using the \"black\" formatter" single
	   ((:commit . "5f30f17b048af1fe73ba710781650e3490a7be49")
	    (:authors
	     ("Artem Malyshev" . "proofit404@gmail.com"))
	    (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
	    (:url . "https://github.com/proofit404/blacken"))])
 (bind-map .
	   [(20161207 1511)
	    ((emacs
	      (24 3)))
	    "Bind personal keymaps in multiple locations" single
	    ((:commit . "bf4181e3a41463684adfffc6c5c305b30480e30f")
	     (:authors
	      ("Justin Burkett" . "justin@burkett.cc"))
	     (:maintainer "Justin Burkett" . "justin@burkett.cc")
	     (:url . "https://github.com/justbur/emacs-bind-map"))])
 (bind-key .
	   [(20180513 430)
	    nil "A simple way to manage personal keybindings" single
	    ((:commit . "4714d73b61bdb378f6e9e3f3838cae1abbf65ea0")
	     (:authors
	      ("John Wiegley" . "johnw@newartisans.com"))
	     (:maintainer "John Wiegley" . "johnw@newartisans.com")
	     (:keywords "keys" "keybinding" "config" "dotemacs")
	     (:url . "https://github.com/jwiegley/use-package"))])
 (beacon .
	 [(20190104 1931)
	  ((seq
	    (2 14)))
	  "Highlight the cursor whenever the window scrolls" single
	  ((:commit . "bde78180c678b233c94321394f46a81dc6dce1da")
	   (:authors
	    ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	   (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	   (:keywords "convenience")
	   (:url . "https://github.com/Malabarba/beacon"))])
 (bbdb .
       [(20190927 1617)
	nil "The Insidious Big Brother Database for GNU Emacs" tar
	((:commit . "2bbe645ae71d84ad518e03dec698d4154af2f9f0"))])
 (backup-walker .
		[(20130720 1516)
		 nil "quickly traverse all backups of a file" single
		 ((:commit . "934a4128c122972ac32bb9952addf279a60a94da")
		  (:authors
		   ("Le Wang"))
		  (:maintainer "Le Wang")
		  (:keywords "backup")
		  (:url . "https://github.com/lewang/backup-walker"))])
 (avy .
      [(20190925 1054)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "Jump to arbitrary positions in visible text and select text quickly." single
       ((:commit . "87394c9a880104a08d0f0e2d4149ac2d70cc192f")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:keywords "point" "location")
	(:url . "https://github.com/abo-abo/avy"))])
 (auto-yasnippet .
		 [(20190326 958)
		  ((yasnippet
		    (0 13 0)))
		  "Quickly create disposable yasnippets" single
		  ((:commit . "624b0d9711222073a2a3f2186e2605eb99fc83c9")
		   (:authors
		    ("Oleh Krehel" . "ohwoeowho@gmail.com"))
		   (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
		   (:url . "https://github.com/abo-abo/auto-yasnippet"))])
 (auto-highlight-symbol .
			[(20130313 943)
			 nil "Automatic highlighting current symbol minor mode" single
			 ((:commit . "26573de912d760e04321b350897aea70958cee8b")
			  (:authors
			   ("Mitsuo Saito" . "arch320@NOSPAM.gmail.com"))
			  (:maintainer "Mitsuo Saito" . "arch320@NOSPAM.gmail.com")
			  (:keywords "highlight" "face" "match" "convenience")
			  (:url . "http://github.com/gennad/auto-highlight-symbol/raw/master/auto-highlight-symbol.el"))])
 (auto-dictionary .
		  [(20150410 1610)
		   nil "automatic dictionary switcher for flyspell" single
		   ((:commit . "b364e08009fe0062cf0927d8a0582fad5a12b8e7")
		    (:authors
		     ("Nikolaj Schumacher <bugs * nschum de>"))
		    (:maintainer "Nikolaj Schumacher <bugs * nschum de>")
		    (:keywords "wp")
		    (:url . "http://nschum.de/src/emacs/auto-dictionary/"))])
 (auto-complete .
		[(20170125 245)
		 ((popup
		   (0 5 0))
		  (cl-lib
		   (0 5)))
		 "Auto Completion for GNU Emacs" tar
		 ((:commit . "2e83566ddfa758c69afe50b8a1c62a66f47471e3"))])
 (auto-compile .
	       [(20181230 2216)
		((emacs
		  (25 1))
		 (packed
		  (3 0 0)))
		"automatically compile Emacs Lisp libraries" single
		((:commit . "f043133f37fe6d707fa03a1ec4ba619da24c2f35")
		 (:authors
		  ("Jonas Bernoulli" . "jonas@bernoul.li"))
		 (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
		 (:keywords "compile" "convenience" "lisp")
		 (:url . "https://github.com/emacscollective/auto-compile"))])
 (auth-source-pass .
		   [(20190813 1026)
		    ((emacs
		      (25)))
		    "Integrate auth-source with password-store" single
		    ((:commit . "847a1f54ed48856b4dfaaa184583ef2c84173edf")
		     (:authors
		      ("Damien Cassou" . "damien@cassou.me")
		      ("Nicolas Petton" . "nicolas@petton.fr")
		      ("Keith Amidon" . "camalot@picnicpark.org"))
		     (:maintainer "Damien Cassou" . "damien@cassou.me")
		     (:url . "https://github.com/DamienCassou/auth-password-store"))])
 (async .
	[(20190503 656)
	 nil "Asynchronous processing in Emacs" tar
	 ((:commit . "bd68cc1ab1ac6af890e250bdaa12ffb1cb9649be")
	  (:keywords "async")
	  (:url . "https://github.com/jwiegley/emacs-async"))])
 (anzu .
       [(20190303 1701)
	((emacs
	  (24 3)))
	"Show number of matches in mode-line while searching" single
	((:commit . "592f8ee6d0b1bc543943b36a30063c2d1aac4b22")
	 (:authors
	  ("Syohei YOSHIDA" . "syohex@gmail.com"))
	 (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	 (:url . "https://github.com/syohex/emacs-anzu"))])
 (annalist .
	   [(20190905 5)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "Record and display information such as keybindings" tar
	    ((:commit . "8f52a365b2876f034fbf9b335786fa6bafc9ac80")
	     (:authors
	      ("Fox Kiester" . "noct@posteo.net"))
	     (:maintainer "Fox Kiester" . "noct@posteo.net")
	     (:keywords "convenience" "tools" "keybindings" "org")
	     (:url . "https://github.com/noctuid/annalist.el"))])
 (anaconda-mode .
		[(20190918 353)
		 ((emacs
		   (25))
		  (pythonic
		   (0 1 0))
		  (dash
		   (2 6 0))
		  (s
		   (1 9))
		  (f
		   (0 16 2)))
		 "Code navigation, documentation lookup and completion for Python" single
		 ((:commit . "dc324ddea5d43e8f9a9d86936fc27ebfca8dac68")
		  (:authors
		   ("Artem Malyshev" . "proofit404@gmail.com"))
		  (:maintainer "Artem Malyshev" . "proofit404@gmail.com")
		  (:url . "https://github.com/proofit404/anaconda-mode"))])
 (all-the-icons .
		[(20190320 1809)
		 ((emacs
		   (24 3))
		  (memoize
		   (1 0 1)))
		 "A library for inserting Developer icons" tar
		 ((:commit . "f996fafa5b2ea072d0ad1df9cd98acc75820f530")
		  (:authors
		   ("Dominic Charlesworth" . "dgc336@gmail.com"))
		  (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com")
		  (:keywords "convenient" "lisp")
		  (:url . "https://github.com/domtronn/all-the-icons.el"))])
 (alert .
	[(20190816 2205)
	 ((gntp
	   (0 1))
	  (log4e
	   (0 3 0))
	  (cl-lib
	   (0 5)))
	 "Growl-style notification system for Emacs" single
	 ((:commit . "b5ef49bbb871867ac03d2943a720576336cd7025")
	  (:authors
	   ("John Wiegley" . "jwiegley@gmail.com"))
	  (:maintainer "John Wiegley" . "jwiegley@gmail.com")
	  (:keywords "notification" "emacs" "message")
	  (:url . "https://github.com/jwiegley/alert"))])
 (aggressive-indent .
		    [(20190828 1828)
		     ((emacs
		       (24 1))
		      (cl-lib
		       (0 5)))
		     "Minor mode to aggressively keep your code always indented" single
		     ((:commit . "c28246ba09d53e32cd9d8cafb1830f50387d9985")
		      (:authors
		       ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		      (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		      (:keywords "indent" "lisp" "maint" "tools")
		      (:url . "https://github.com/Malabarba/aggressive-indent-mode"))])
 (ag .
     [(20190726 9)
      ((dash
	(2 8 0))
       (s
	(1 9 0))
       (cl-lib
	(0 5)))
      "A front-end for ag ('the silver searcher'), the C ack replacement." single
      ((:commit . "bd81d68466e44301505629454dfc689b6c17d94b")
       (:authors
	("Wilfred Hughes" . "me@wilfred.me.uk"))
       (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (ace-window .
	     [(20190708 933)
	      ((avy
		(0 2 0)))
	      "Quickly switch windows." single
	      ((:commit . "a5344925e399e1f015721cda6cf5db03c90ab87a")
	       (:authors
		("Oleh Krehel" . "ohwoeowho@gmail.com"))
	       (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	       (:keywords "window" "location")
	       (:url . "https://github.com/abo-abo/ace-window"))])
 (ace-link .
	   [(20190716 920)
	    ((avy
	      (0 4 0)))
	    "Quickly follow links" single
	    ((:commit . "9b6d02564650e963ce05d124f83ced17e0027d7f")
	     (:authors
	      ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	     (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	     (:keywords "convenience" "links" "avy")
	     (:url . "https://github.com/abo-abo/ace-link"))])
 (ace-jump-helm-line .
		     [(20160918 1836)
		      ((avy
			(0 4 0))
		       (helm
			(1 6 3)))
		      "Ace-jump to a candidate in helm window" single
		      ((:commit . "1483055255df3f8ae349f7520f05b1e43ea3ed37")
		       (:authors
			("Junpeng Qiu" . "qjpchmail@gmail.com"))
		       (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com")
		       (:keywords "extensions")
		       (:url . "https://github.com/cute-jumper/ace-jump-helm-line"))])
 (ac-ispell .
	    [(20151101 226)
	     ((auto-complete
	       (1 4))
	      (cl-lib
	       (0 5)))
	     "ispell completion source for auto-complete" single
	     ((:commit . "22bace7387e9012002a6a444922f75f9913077b0")
	      (:authors
	       ("Syohei YOSHIDA" . "syohex@gmail.com"))
	      (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com")
	      (:url . "https://github.com/syohex/emacs-ac-ispell"))])
 (a .
    [(20180907 953)
     ((emacs
       (25)))
     "Associative data structure functions" single
     ((:commit . "18966975db7110d0aac726be95b593e2fc3d44ed")
      (:authors
       ("Arne Brasseur" . "arne@arnebrasseur.net"))
      (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net")
      (:keywords "lisp")
      (:url . "https://github.com/plexus/a.el"))]))
